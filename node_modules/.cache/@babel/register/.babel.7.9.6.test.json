{
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/given.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/given.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/given.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/given.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
        "sourceFileName": "given.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cucumber = require(\"cucumber\");\n\nvar _checkContainsAnyText = _interopRequireDefault(require(\"../support/check/checkContainsAnyText\"));\n\nvar _checkIsEmpty = _interopRequireDefault(require(\"../support/check/checkIsEmpty\"));\n\nvar _checkContainsText = _interopRequireDefault(require(\"../support/check/checkContainsText\"));\n\nvar _checkCookieContent = _interopRequireDefault(require(\"../support/check/checkCookieContent\"));\n\nvar _checkCookieExists = _interopRequireDefault(require(\"../support/check/checkCookieExists\"));\n\nvar _checkDimension = _interopRequireDefault(require(\"../support/check/checkDimension\"));\n\nvar _checkElementExists = _interopRequireDefault(require(\"../support/check/checkElementExists\"));\n\nvar _checkEqualsText = _interopRequireDefault(require(\"../support/check/checkEqualsText\"));\n\nvar _checkModal = _interopRequireDefault(require(\"../support/check/checkModal\"));\n\nvar _checkOffset = _interopRequireDefault(require(\"../support/check/checkOffset\"));\n\nvar _checkProperty = _interopRequireDefault(require(\"../support/check/checkProperty\"));\n\nvar _checkSelected = _interopRequireDefault(require(\"../support/check/checkSelected\"));\n\nvar _checkTitle = _interopRequireDefault(require(\"../support/check/checkTitle\"));\n\nvar _checkURL = _interopRequireDefault(require(\"../support/check/checkURL\"));\n\nvar _closeAllButFirstTab = _interopRequireDefault(require(\"../support/action/closeAllButFirstTab\"));\n\nvar _compareText = _interopRequireDefault(require(\"../support/check/compareText\"));\n\nvar _isEnabled = _interopRequireDefault(require(\"../support/check/isEnabled\"));\n\nvar _isDisplayed = _interopRequireDefault(require(\"../support/check/isDisplayed\"));\n\nvar _openWebsite = _interopRequireDefault(require(\"../support/action/openWebsite\"));\n\nvar _setWindowSize = _interopRequireDefault(require(\"../support/action/setWindowSize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _cucumber.Given)(/^I open the (url|site) \"([^\"]*)?\"$/, _openWebsite.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" is( not)* displayed$/, _isDisplayed.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" is( not)* enabled$/, _isEnabled.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" is( not)* selected$/, _checkSelected.default);\n(0, _cucumber.Given)(/^the checkbox \"([^\"]*)?\" is( not)* checked$/, _checkSelected.default);\n(0, _cucumber.Given)(/^there is (an|no) element \"([^\"]*)?\" on the page$/, _checkElementExists.default);\n(0, _cucumber.Given)(/^the title is( not)* \"([^\"]*)?\"$/, _checkTitle.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" contains( not)* the same text as element \"([^\"]*)?\"$/, _compareText.default);\n(0, _cucumber.Given)(/^the (button|element) \"([^\"]*)?\"( not)* matches the text \"([^\"]*)?\"$/, _checkEqualsText.default);\n(0, _cucumber.Given)(/^the (button|element|container) \"([^\"]*)?\"( not)* contains the text \"([^\"]*)?\"$/, _checkContainsText.default);\n(0, _cucumber.Given)(/^the (button|element) \"([^\"]*)?\"( not)* contains any text$/, _checkContainsAnyText.default);\n(0, _cucumber.Given)(/^the (button|element) \"([^\"]*)?\" is( not)* empty$/, _checkIsEmpty.default);\n(0, _cucumber.Given)(/^the page url is( not)* \"([^\"]*)?\"$/, _checkURL.default);\n(0, _cucumber.Given)(/^the( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/, _checkProperty.default);\n(0, _cucumber.Given)(/^the cookie \"([^\"]*)?\" contains( not)* the value \"([^\"]*)?\"$/, _checkCookieContent.default);\n(0, _cucumber.Given)(/^the cookie \"([^\"]*)?\" does( not)* exist$/, _checkCookieExists.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" is( not)* ([\\d]+)px (broad|tall)$/, _checkDimension.default);\n(0, _cucumber.Given)(/^the element \"([^\"]*)?\" is( not)* positioned at ([\\d]+)px on the (x|y) axis$/, _checkOffset.default);\n(0, _cucumber.Given)(/^I have a screen that is ([\\d]+) by ([\\d]+) pixels$/, _setWindowSize.default);\n(0, _cucumber.Given)(/^I have closed all but the first (window|tab)$/, _closeAllButFirstTab.default);\n(0, _cucumber.Given)(/^a (alertbox|confirmbox|prompt) is( not)* opened$/, _checkModal.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpdmVuLmpzIl0sIm5hbWVzIjpbIm9wZW5XZWJzaXRlIiwiaXNEaXNwbGF5ZWQiLCJpc0VuYWJsZWQiLCJjaGVja1NlbGVjdGVkIiwiY2hlY2tFbGVtZW50RXhpc3RzIiwiY2hlY2tUaXRsZSIsImNvbXBhcmVUZXh0IiwiY2hlY2tFcXVhbHNUZXh0IiwiY2hlY2tDb250YWluc1RleHQiLCJjaGVja0NvbnRhaW5zQW55VGV4dCIsImNoZWNrSXNFbXB0eSIsImNoZWNrVXJsIiwiY2hlY2tQcm9wZXJ0eSIsImNoZWNrQ29va2llQ29udGVudCIsImNoZWNrQ29va2llRXhpc3RzIiwiY2hlY2tEaW1lbnNpb24iLCJjaGVja09mZnNldCIsInNldFdpbmRvd1NpemUiLCJjbG9zZUFsbEJ1dEZpcnN0VGFiIiwiY2hlY2tNb2RhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLHFCQUNJLG9DQURKLEVBRUlBLG9CQUZKO0FBS0EscUJBQ0ksOENBREosRUFFSUMsb0JBRko7QUFLQSxxQkFDSSw0Q0FESixFQUVJQyxrQkFGSjtBQUtBLHFCQUNJLDZDQURKLEVBRUlDLHNCQUZKO0FBS0EscUJBQ0ksNkNBREosRUFFSUEsc0JBRko7QUFLQSxxQkFDSSxtREFESixFQUVJQywyQkFGSjtBQUtBLHFCQUNJLGtDQURKLEVBRUlDLG1CQUZKO0FBS0EscUJBQ0ksOEVBREosRUFFSUMsb0JBRko7QUFLQSxxQkFDSSxzRUFESixFQUVJQyx3QkFGSjtBQUtBLHFCQUNJLGlGQURKLEVBRUlDLDBCQUZKO0FBS0EscUJBQ0ksNERBREosRUFFSUMsNkJBRko7QUFLQSxxQkFDSSxtREFESixFQUVJQyxxQkFGSjtBQUtBLHFCQUNJLHFDQURKLEVBRUlDLGlCQUZKO0FBS0EscUJBQ0ksZ0ZBREosRUFFSUMsc0JBRko7QUFLQSxxQkFDSSw4REFESixFQUVJQywyQkFGSjtBQUtBLHFCQUNJLDJDQURKLEVBRUlDLDBCQUZKO0FBS0EscUJBQ0ksMkRBREosRUFFSUMsdUJBRko7QUFLQSxxQkFDSSw4RUFESixFQUVJQyxvQkFGSjtBQUtBLHFCQUNJLHFEQURKLEVBRUlDLHNCQUZKO0FBS0EscUJBQ0ksZ0RBREosRUFFSUMsNEJBRko7QUFLQSxxQkFDSSxtREFESixFQUVJQyxtQkFGSiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N0ZXBzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdpdmVuIH0gZnJvbSAnY3VjdW1iZXInO1xuXG5pbXBvcnQgY2hlY2tDb250YWluc0FueVRleHQgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9jaGVja0NvbnRhaW5zQW55VGV4dCc7XG5pbXBvcnQgY2hlY2tJc0VtcHR5IGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tJc0VtcHR5JztcbmltcG9ydCBjaGVja0NvbnRhaW5zVGV4dCBmcm9tICcuLi9zdXBwb3J0L2NoZWNrL2NoZWNrQ29udGFpbnNUZXh0JztcbmltcG9ydCBjaGVja0Nvb2tpZUNvbnRlbnQgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9jaGVja0Nvb2tpZUNvbnRlbnQnO1xuaW1wb3J0IGNoZWNrQ29va2llRXhpc3RzIGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tDb29raWVFeGlzdHMnO1xuaW1wb3J0IGNoZWNrRGltZW5zaW9uIGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tEaW1lbnNpb24nO1xuaW1wb3J0IGNoZWNrRWxlbWVudEV4aXN0cyBmcm9tICcuLi9zdXBwb3J0L2NoZWNrL2NoZWNrRWxlbWVudEV4aXN0cyc7XG5pbXBvcnQgY2hlY2tFcXVhbHNUZXh0IGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tFcXVhbHNUZXh0JztcbmltcG9ydCBjaGVja01vZGFsIGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tNb2RhbCc7XG5pbXBvcnQgY2hlY2tPZmZzZXQgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9jaGVja09mZnNldCc7XG5pbXBvcnQgY2hlY2tQcm9wZXJ0eSBmcm9tICcuLi9zdXBwb3J0L2NoZWNrL2NoZWNrUHJvcGVydHknO1xuaW1wb3J0IGNoZWNrU2VsZWN0ZWQgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9jaGVja1NlbGVjdGVkJztcbmltcG9ydCBjaGVja1RpdGxlIGZyb20gJy4uL3N1cHBvcnQvY2hlY2svY2hlY2tUaXRsZSc7XG5pbXBvcnQgY2hlY2tVcmwgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9jaGVja1VSTCc7XG5pbXBvcnQgY2xvc2VBbGxCdXRGaXJzdFRhYiBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9jbG9zZUFsbEJ1dEZpcnN0VGFiJztcbmltcG9ydCBjb21wYXJlVGV4dCBmcm9tICcuLi9zdXBwb3J0L2NoZWNrL2NvbXBhcmVUZXh0JztcbmltcG9ydCBpc0VuYWJsZWQgZnJvbSAnLi4vc3VwcG9ydC9jaGVjay9pc0VuYWJsZWQnO1xuaW1wb3J0IGlzRGlzcGxheWVkIGZyb20gJy4uL3N1cHBvcnQvY2hlY2svaXNEaXNwbGF5ZWQnO1xuaW1wb3J0IG9wZW5XZWJzaXRlIGZyb20gJy4uL3N1cHBvcnQvYWN0aW9uL29wZW5XZWJzaXRlJztcbmltcG9ydCBzZXRXaW5kb3dTaXplIGZyb20gJy4uL3N1cHBvcnQvYWN0aW9uL3NldFdpbmRvd1NpemUnO1xuXG5HaXZlbihcbiAgICAvXkkgb3BlbiB0aGUgKHVybHxzaXRlKSBcIihbXlwiXSopP1wiJC8sXG4gICAgb3BlbldlYnNpdGVcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGVsZW1lbnQgXCIoW15cIl0qKT9cIiBpcyggbm90KSogZGlzcGxheWVkJC8sXG4gICAgaXNEaXNwbGF5ZWRcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGVsZW1lbnQgXCIoW15cIl0qKT9cIiBpcyggbm90KSogZW5hYmxlZCQvLFxuICAgIGlzRW5hYmxlZFxuKTtcblxuR2l2ZW4oXG4gICAgL150aGUgZWxlbWVudCBcIihbXlwiXSopP1wiIGlzKCBub3QpKiBzZWxlY3RlZCQvLFxuICAgIGNoZWNrU2VsZWN0ZWRcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGNoZWNrYm94IFwiKFteXCJdKik/XCIgaXMoIG5vdCkqIGNoZWNrZWQkLyxcbiAgICBjaGVja1NlbGVjdGVkXG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZXJlIGlzIChhbnxubykgZWxlbWVudCBcIihbXlwiXSopP1wiIG9uIHRoZSBwYWdlJC8sXG4gICAgY2hlY2tFbGVtZW50RXhpc3RzXG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZSB0aXRsZSBpcyggbm90KSogXCIoW15cIl0qKT9cIiQvLFxuICAgIGNoZWNrVGl0bGVcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGVsZW1lbnQgXCIoW15cIl0qKT9cIiBjb250YWlucyggbm90KSogdGhlIHNhbWUgdGV4dCBhcyBlbGVtZW50IFwiKFteXCJdKik/XCIkLyxcbiAgICBjb21wYXJlVGV4dFxuKTtcblxuR2l2ZW4oXG4gICAgL150aGUgKGJ1dHRvbnxlbGVtZW50KSBcIihbXlwiXSopP1wiKCBub3QpKiBtYXRjaGVzIHRoZSB0ZXh0IFwiKFteXCJdKik/XCIkLyxcbiAgICBjaGVja0VxdWFsc1RleHRcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIChidXR0b258ZWxlbWVudHxjb250YWluZXIpIFwiKFteXCJdKik/XCIoIG5vdCkqIGNvbnRhaW5zIHRoZSB0ZXh0IFwiKFteXCJdKik/XCIkLyxcbiAgICBjaGVja0NvbnRhaW5zVGV4dFxuKTtcblxuR2l2ZW4oXG4gICAgL150aGUgKGJ1dHRvbnxlbGVtZW50KSBcIihbXlwiXSopP1wiKCBub3QpKiBjb250YWlucyBhbnkgdGV4dCQvLFxuICAgIGNoZWNrQ29udGFpbnNBbnlUZXh0XG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZSAoYnV0dG9ufGVsZW1lbnQpIFwiKFteXCJdKik/XCIgaXMoIG5vdCkqIGVtcHR5JC8sXG4gICAgY2hlY2tJc0VtcHR5XG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZSBwYWdlIHVybCBpcyggbm90KSogXCIoW15cIl0qKT9cIiQvLFxuICAgIGNoZWNrVXJsXG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZSggY3NzKSogYXR0cmlidXRlIFwiKFteXCJdKik/XCIgZnJvbSBlbGVtZW50IFwiKFteXCJdKik/XCIgaXMoIG5vdCkqIFwiKFteXCJdKik/XCIkLyxcbiAgICBjaGVja1Byb3BlcnR5XG4pO1xuXG5HaXZlbihcbiAgICAvXnRoZSBjb29raWUgXCIoW15cIl0qKT9cIiBjb250YWlucyggbm90KSogdGhlIHZhbHVlIFwiKFteXCJdKik/XCIkLyxcbiAgICBjaGVja0Nvb2tpZUNvbnRlbnRcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGNvb2tpZSBcIihbXlwiXSopP1wiIGRvZXMoIG5vdCkqIGV4aXN0JC8sXG4gICAgY2hlY2tDb29raWVFeGlzdHNcbik7XG5cbkdpdmVuKFxuICAgIC9edGhlIGVsZW1lbnQgXCIoW15cIl0qKT9cIiBpcyggbm90KSogKFtcXGRdKylweCAoYnJvYWR8dGFsbCkkLyxcbiAgICBjaGVja0RpbWVuc2lvblxuKTtcblxuR2l2ZW4oXG4gICAgL150aGUgZWxlbWVudCBcIihbXlwiXSopP1wiIGlzKCBub3QpKiBwb3NpdGlvbmVkIGF0IChbXFxkXSspcHggb24gdGhlICh4fHkpIGF4aXMkLyxcbiAgICBjaGVja09mZnNldFxuKTtcblxuR2l2ZW4oXG4gICAgL15JIGhhdmUgYSBzY3JlZW4gdGhhdCBpcyAoW1xcZF0rKSBieSAoW1xcZF0rKSBwaXhlbHMkLyxcbiAgICBzZXRXaW5kb3dTaXplXG4pO1xuXG5HaXZlbihcbiAgICAvXkkgaGF2ZSBjbG9zZWQgYWxsIGJ1dCB0aGUgZmlyc3QgKHdpbmRvd3x0YWIpJC8sXG4gICAgY2xvc2VBbGxCdXRGaXJzdFRhYlxuKTtcblxuR2l2ZW4oXG4gICAgL15hIChhbGVydGJveHxjb25maXJtYm94fHByb21wdCkgaXMoIG5vdCkqIG9wZW5lZCQvLFxuICAgIGNoZWNrTW9kYWxcbik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "given.js"
      ],
      "names": [
        "openWebsite",
        "isDisplayed",
        "isEnabled",
        "checkSelected",
        "checkElementExists",
        "checkTitle",
        "compareText",
        "checkEqualsText",
        "checkContainsText",
        "checkContainsAnyText",
        "checkIsEmpty",
        "checkUrl",
        "checkProperty",
        "checkCookieContent",
        "checkCookieExists",
        "checkDimension",
        "checkOffset",
        "setWindowSize",
        "closeAllButFirstTab",
        "checkModal"
      ],
      "mappings": ";;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,qBACI,oCADJ,EAEIA,oBAFJ;AAKA,qBACI,8CADJ,EAEIC,oBAFJ;AAKA,qBACI,4CADJ,EAEIC,kBAFJ;AAKA,qBACI,6CADJ,EAEIC,sBAFJ;AAKA,qBACI,6CADJ,EAEIA,sBAFJ;AAKA,qBACI,mDADJ,EAEIC,2BAFJ;AAKA,qBACI,kCADJ,EAEIC,mBAFJ;AAKA,qBACI,8EADJ,EAEIC,oBAFJ;AAKA,qBACI,sEADJ,EAEIC,wBAFJ;AAKA,qBACI,iFADJ,EAEIC,0BAFJ;AAKA,qBACI,4DADJ,EAEIC,6BAFJ;AAKA,qBACI,mDADJ,EAEIC,qBAFJ;AAKA,qBACI,qCADJ,EAEIC,iBAFJ;AAKA,qBACI,gFADJ,EAEIC,sBAFJ;AAKA,qBACI,8DADJ,EAEIC,2BAFJ;AAKA,qBACI,2CADJ,EAEIC,0BAFJ;AAKA,qBACI,2DADJ,EAEIC,uBAFJ;AAKA,qBACI,8EADJ,EAEIC,oBAFJ;AAKA,qBACI,qDADJ,EAEIC,sBAFJ;AAKA,qBACI,gDADJ,EAEIC,4BAFJ;AAKA,qBACI,mDADJ,EAEIC,mBAFJ",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "sourcesContent": [
        "import { Given } from 'cucumber';\n\nimport checkContainsAnyText from '../support/check/checkContainsAnyText';\nimport checkIsEmpty from '../support/check/checkIsEmpty';\nimport checkContainsText from '../support/check/checkContainsText';\nimport checkCookieContent from '../support/check/checkCookieContent';\nimport checkCookieExists from '../support/check/checkCookieExists';\nimport checkDimension from '../support/check/checkDimension';\nimport checkElementExists from '../support/check/checkElementExists';\nimport checkEqualsText from '../support/check/checkEqualsText';\nimport checkModal from '../support/check/checkModal';\nimport checkOffset from '../support/check/checkOffset';\nimport checkProperty from '../support/check/checkProperty';\nimport checkSelected from '../support/check/checkSelected';\nimport checkTitle from '../support/check/checkTitle';\nimport checkUrl from '../support/check/checkURL';\nimport closeAllButFirstTab from '../support/action/closeAllButFirstTab';\nimport compareText from '../support/check/compareText';\nimport isEnabled from '../support/check/isEnabled';\nimport isDisplayed from '../support/check/isDisplayed';\nimport openWebsite from '../support/action/openWebsite';\nimport setWindowSize from '../support/action/setWindowSize';\n\nGiven(\n    /^I open the (url|site) \"([^\"]*)?\"$/,\n    openWebsite\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" is( not)* displayed$/,\n    isDisplayed\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" is( not)* enabled$/,\n    isEnabled\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" is( not)* selected$/,\n    checkSelected\n);\n\nGiven(\n    /^the checkbox \"([^\"]*)?\" is( not)* checked$/,\n    checkSelected\n);\n\nGiven(\n    /^there is (an|no) element \"([^\"]*)?\" on the page$/,\n    checkElementExists\n);\n\nGiven(\n    /^the title is( not)* \"([^\"]*)?\"$/,\n    checkTitle\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" contains( not)* the same text as element \"([^\"]*)?\"$/,\n    compareText\n);\n\nGiven(\n    /^the (button|element) \"([^\"]*)?\"( not)* matches the text \"([^\"]*)?\"$/,\n    checkEqualsText\n);\n\nGiven(\n    /^the (button|element|container) \"([^\"]*)?\"( not)* contains the text \"([^\"]*)?\"$/,\n    checkContainsText\n);\n\nGiven(\n    /^the (button|element) \"([^\"]*)?\"( not)* contains any text$/,\n    checkContainsAnyText\n);\n\nGiven(\n    /^the (button|element) \"([^\"]*)?\" is( not)* empty$/,\n    checkIsEmpty\n);\n\nGiven(\n    /^the page url is( not)* \"([^\"]*)?\"$/,\n    checkUrl\n);\n\nGiven(\n    /^the( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/,\n    checkProperty\n);\n\nGiven(\n    /^the cookie \"([^\"]*)?\" contains( not)* the value \"([^\"]*)?\"$/,\n    checkCookieContent\n);\n\nGiven(\n    /^the cookie \"([^\"]*)?\" does( not)* exist$/,\n    checkCookieExists\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" is( not)* ([\\d]+)px (broad|tall)$/,\n    checkDimension\n);\n\nGiven(\n    /^the element \"([^\"]*)?\" is( not)* positioned at ([\\d]+)px on the (x|y) axis$/,\n    checkOffset\n);\n\nGiven(\n    /^I have a screen that is ([\\d]+) by ([\\d]+) pixels$/,\n    setWindowSize\n);\n\nGiven(\n    /^I have closed all but the first (window|tab)$/,\n    closeAllButFirstTab\n);\n\nGiven(\n    /^a (alertbox|confirmbox|prompt) is( not)* opened$/,\n    checkModal\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsAnyText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsAnyText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsAnyText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsAnyText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkContainsAnyText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given elements contains text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content contains\n *                                  text or not\n */\nvar _default = (elementType, selector, falseCase) => {\n  /**\n   * The command to perform on the browser object\n   * @type {String}\n   */\n  let command = 'getValue';\n\n  if (elementType === 'button' || $(selector).getAttribute('value') === null) {\n    command = 'getText';\n  }\n  /**\n   * False case\n   * @type {Boolean}\n   */\n\n\n  let boolFalseCase;\n  /**\n   * The text of the element\n   * @type {String}\n   */\n\n  const text = $(selector)[command]();\n\n  if (typeof falseCase === 'undefined') {\n    boolFalseCase = false;\n  } else {\n    boolFalseCase = !!falseCase;\n  }\n\n  if (boolFalseCase) {\n    expect(text).toBe('');\n  } else {\n    expect(text).not.toBe('');\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQ29udGFpbnNBbnlUZXh0LmpzIl0sIm5hbWVzIjpbImVsZW1lbnRUeXBlIiwic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJjb21tYW5kIiwiJCIsImdldEF0dHJpYnV0ZSIsImJvb2xGYWxzZUNhc2UiLCJ0ZXh0IiwiZXhwZWN0IiwidG9CZSIsIm5vdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7O2VBT2UsQ0FBQ0EsV0FBRCxFQUFjQyxRQUFkLEVBQXdCQyxTQUF4QixLQUFzQztBQUNqRDs7OztBQUlBLE1BQUlDLE9BQU8sR0FBRyxVQUFkOztBQUVBLE1BQ0lILFdBQVcsS0FBSyxRQUFoQixJQUNHSSxDQUFDLENBQUNILFFBQUQsQ0FBRCxDQUFZSSxZQUFaLENBQXlCLE9BQXpCLE1BQXNDLElBRjdDLEVBR0U7QUFDRUYsSUFBQUEsT0FBTyxHQUFHLFNBQVY7QUFDSDtBQUVEOzs7Ozs7QUFJQSxNQUFJRyxhQUFKO0FBRUE7Ozs7O0FBSUEsUUFBTUMsSUFBSSxHQUFHSCxDQUFDLENBQUNILFFBQUQsQ0FBRCxDQUFZRSxPQUFaLEdBQWI7O0FBRUEsTUFBSSxPQUFPRCxTQUFQLEtBQXFCLFdBQXpCLEVBQXNDO0FBQ2xDSSxJQUFBQSxhQUFhLEdBQUcsS0FBaEI7QUFDSCxHQUZELE1BRU87QUFDSEEsSUFBQUEsYUFBYSxHQUFHLENBQUMsQ0FBQ0osU0FBbEI7QUFDSDs7QUFFRCxNQUFJSSxhQUFKLEVBQW1CO0FBQ2ZFLElBQUFBLE1BQU0sQ0FBQ0QsSUFBRCxDQUFOLENBQWFFLElBQWIsQ0FBa0IsRUFBbEI7QUFDSCxHQUZELE1BRU87QUFDSEQsSUFBQUEsTUFBTSxDQUFDRCxJQUFELENBQU4sQ0FBYUcsR0FBYixDQUFpQkQsSUFBakIsQ0FBc0IsRUFBdEI7QUFDSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgdGhlIGdpdmVuIGVsZW1lbnRzIGNvbnRhaW5zIHRleHRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBlbGVtZW50VHlwZSAgIEVsZW1lbnQgdHlwZSAoZWxlbWVudCBvciBidXR0b24pXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgICAgICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSAgICAgV2hldGhlciB0byBjaGVjayBpZiB0aGUgY29udGVudCBjb250YWluc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCBvciBub3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKGVsZW1lbnRUeXBlLCBzZWxlY3RvciwgZmFsc2VDYXNlKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbW1hbmQgdG8gcGVyZm9ybSBvbiB0aGUgYnJvd3NlciBvYmplY3RcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGxldCBjb21tYW5kID0gJ2dldFZhbHVlJztcblxuICAgIGlmIChcbiAgICAgICAgZWxlbWVudFR5cGUgPT09ICdidXR0b24nXG4gICAgICAgIHx8ICQoc2VsZWN0b3IpLmdldEF0dHJpYnV0ZSgndmFsdWUnKSA9PT0gbnVsbFxuICAgICkge1xuICAgICAgICBjb21tYW5kID0gJ2dldFRleHQnO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZhbHNlIGNhc2VcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBsZXQgYm9vbEZhbHNlQ2FzZTtcblxuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IG9mIHRoZSBlbGVtZW50XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCB0ZXh0ID0gJChzZWxlY3RvcilbY29tbWFuZF0oKTtcblxuICAgIGlmICh0eXBlb2YgZmFsc2VDYXNlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBib29sRmFsc2VDYXNlID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYm9vbEZhbHNlQ2FzZSA9ICEhZmFsc2VDYXNlO1xuICAgIH1cblxuICAgIGlmIChib29sRmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdCh0ZXh0KS50b0JlKCcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QodGV4dCkubm90LnRvQmUoJycpO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkContainsAnyText.js"
      ],
      "names": [
        "elementType",
        "selector",
        "falseCase",
        "command",
        "$",
        "getAttribute",
        "boolFalseCase",
        "text",
        "expect",
        "toBe",
        "not"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,WAAD,EAAcC,QAAd,EAAwBC,SAAxB,KAAsC;AACjD;;;;AAIA,MAAIC,OAAO,GAAG,UAAd;;AAEA,MACIH,WAAW,KAAK,QAAhB,IACGI,CAAC,CAACH,QAAD,CAAD,CAAYI,YAAZ,CAAyB,OAAzB,MAAsC,IAF7C,EAGE;AACEF,IAAAA,OAAO,GAAG,SAAV;AACH;AAED;;;;;;AAIA,MAAIG,aAAJ;AAEA;;;;;AAIA,QAAMC,IAAI,GAAGH,CAAC,CAACH,QAAD,CAAD,CAAYE,OAAZ,GAAb;;AAEA,MAAI,OAAOD,SAAP,KAAqB,WAAzB,EAAsC;AAClCI,IAAAA,aAAa,GAAG,KAAhB;AACH,GAFD,MAEO;AACHA,IAAAA,aAAa,GAAG,CAAC,CAACJ,SAAlB;AACH;;AAED,MAAII,aAAJ,EAAmB;AACfE,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,IAAb,CAAkB,EAAlB;AACH,GAFD,MAEO;AACHD,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaG,GAAb,CAAiBD,IAAjB,CAAsB,EAAtB;AACH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given elements contains text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content contains\n *                                  text or not\n */\nexport default (elementType, selector, falseCase) => {\n    /**\n     * The command to perform on the browser object\n     * @type {String}\n     */\n    let command = 'getValue';\n\n    if (\n        elementType === 'button'\n        || $(selector).getAttribute('value') === null\n    ) {\n        command = 'getText';\n    }\n\n    /**\n     * False case\n     * @type {Boolean}\n     */\n    let boolFalseCase;\n\n    /**\n     * The text of the element\n     * @type {String}\n     */\n    const text = $(selector)[command]();\n\n    if (typeof falseCase === 'undefined') {\n        boolFalseCase = false;\n    } else {\n        boolFalseCase = !!falseCase;\n    }\n\n    if (boolFalseCase) {\n        expect(text).toBe('');\n    } else {\n        expect(text).not.toBe('');\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsEmpty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsEmpty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsEmpty.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsEmpty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkIsEmpty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkContainsAnyText = _interopRequireDefault(require(\"./checkContainsAnyText\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (elementType, element, falseCase) => {\n  let newFalseCase = true;\n\n  if (typeof falseCase === 'function') {\n    newFalseCase = false;\n  } else if (falseCase === ' not') {\n    newFalseCase = false;\n  }\n\n  (0, _checkContainsAnyText.default)(elementType, element, newFalseCase);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrSXNFbXB0eS5qcyJdLCJuYW1lcyI6WyJlbGVtZW50VHlwZSIsImVsZW1lbnQiLCJmYWxzZUNhc2UiLCJuZXdGYWxzZUNhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztlQUVlLENBQUNBLFdBQUQsRUFBY0MsT0FBZCxFQUF1QkMsU0FBdkIsS0FBcUM7QUFDaEQsTUFBSUMsWUFBWSxHQUFHLElBQW5COztBQUVBLE1BQUksT0FBT0QsU0FBUCxLQUFxQixVQUF6QixFQUFxQztBQUNqQ0MsSUFBQUEsWUFBWSxHQUFHLEtBQWY7QUFDSCxHQUZELE1BRU8sSUFBSUQsU0FBUyxLQUFLLE1BQWxCLEVBQTBCO0FBQzdCQyxJQUFBQSxZQUFZLEdBQUcsS0FBZjtBQUNIOztBQUVELHFDQUFxQkgsV0FBckIsRUFBa0NDLE9BQWxDLEVBQTJDRSxZQUEzQztBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGVja0NvbnRhaW5zQW55VGV4dCBmcm9tICcuL2NoZWNrQ29udGFpbnNBbnlUZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgKGVsZW1lbnRUeXBlLCBlbGVtZW50LCBmYWxzZUNhc2UpID0+IHtcbiAgICBsZXQgbmV3RmFsc2VDYXNlID0gdHJ1ZTtcblxuICAgIGlmICh0eXBlb2YgZmFsc2VDYXNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIG5ld0ZhbHNlQ2FzZSA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoZmFsc2VDYXNlID09PSAnIG5vdCcpIHtcbiAgICAgICAgbmV3RmFsc2VDYXNlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgY2hlY2tDb250YWluc0FueVRleHQoZWxlbWVudFR5cGUsIGVsZW1lbnQsIG5ld0ZhbHNlQ2FzZSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkIsEmpty.js"
      ],
      "names": [
        "elementType",
        "element",
        "falseCase",
        "newFalseCase"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe,CAACA,WAAD,EAAcC,OAAd,EAAuBC,SAAvB,KAAqC;AAChD,MAAIC,YAAY,GAAG,IAAnB;;AAEA,MAAI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;AACjCC,IAAAA,YAAY,GAAG,KAAf;AACH,GAFD,MAEO,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC7BC,IAAAA,YAAY,GAAG,KAAf;AACH;;AAED,qCAAqBH,WAArB,EAAkCC,OAAlC,EAA2CE,YAA3C;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "import checkContainsAnyText from './checkContainsAnyText';\n\nexport default (elementType, element, falseCase) => {\n    let newFalseCase = true;\n\n    if (typeof falseCase === 'function') {\n        newFalseCase = false;\n    } else if (falseCase === ' not') {\n        newFalseCase = false;\n    }\n\n    checkContainsAnyText(elementType, element, newFalseCase);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkContainsText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkContainsText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given elements contains text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content contains\n *                                  the given text or not\n * @param  {String}   expectedText  The text to check against\n */\nvar _default = (elementType, selector, falseCase, expectedText) => {\n  /**\n   * The command to perform on the browser object\n   * @type {String}\n   */\n  let command = 'getValue';\n\n  if (['button', 'container'].includes(elementType) || $(selector).getAttribute('value') === null) {\n    command = 'getText';\n  }\n  /**\n   * False case\n   * @type {Boolean}\n   */\n\n\n  let boolFalseCase;\n  /**\n   * The expected text\n   * @type {String}\n   */\n\n  let stringExpectedText = expectedText;\n  /**\n   * The text of the element\n   * @type {String}\n   */\n\n  const elem = $(selector);\n  elem.waitForDisplayed();\n  const text = elem[command]();\n\n  if (typeof expectedText === 'undefined') {\n    stringExpectedText = falseCase;\n    boolFalseCase = false;\n  } else {\n    boolFalseCase = falseCase === ' not';\n  }\n\n  if (boolFalseCase) {\n    expect(text).not.toContain(stringExpectedText);\n  } else {\n    expect(text).toContain(stringExpectedText);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQ29udGFpbnNUZXh0LmpzIl0sIm5hbWVzIjpbImVsZW1lbnRUeXBlIiwic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJleHBlY3RlZFRleHQiLCJjb21tYW5kIiwiaW5jbHVkZXMiLCIkIiwiZ2V0QXR0cmlidXRlIiwiYm9vbEZhbHNlQ2FzZSIsInN0cmluZ0V4cGVjdGVkVGV4dCIsImVsZW0iLCJ3YWl0Rm9yRGlzcGxheWVkIiwidGV4dCIsImV4cGVjdCIsIm5vdCIsInRvQ29udGFpbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztlQVFlLENBQUNBLFdBQUQsRUFBY0MsUUFBZCxFQUF3QkMsU0FBeEIsRUFBbUNDLFlBQW5DLEtBQW9EO0FBQy9EOzs7O0FBSUEsTUFBSUMsT0FBTyxHQUFHLFVBQWQ7O0FBRUEsTUFDSSxDQUFDLFFBQUQsRUFBVyxXQUFYLEVBQXdCQyxRQUF4QixDQUFpQ0wsV0FBakMsS0FDR00sQ0FBQyxDQUFDTCxRQUFELENBQUQsQ0FBWU0sWUFBWixDQUF5QixPQUF6QixNQUFzQyxJQUY3QyxFQUdFO0FBQ0VILElBQUFBLE9BQU8sR0FBRyxTQUFWO0FBQ0g7QUFFRDs7Ozs7O0FBSUEsTUFBSUksYUFBSjtBQUVBOzs7OztBQUlBLE1BQUlDLGtCQUFrQixHQUFHTixZQUF6QjtBQUVBOzs7OztBQUlBLFFBQU1PLElBQUksR0FBR0osQ0FBQyxDQUFDTCxRQUFELENBQWQ7QUFDQVMsRUFBQUEsSUFBSSxDQUFDQyxnQkFBTDtBQUNBLFFBQU1DLElBQUksR0FBR0YsSUFBSSxDQUFDTixPQUFELENBQUosRUFBYjs7QUFFQSxNQUFJLE9BQU9ELFlBQVAsS0FBd0IsV0FBNUIsRUFBeUM7QUFDckNNLElBQUFBLGtCQUFrQixHQUFHUCxTQUFyQjtBQUNBTSxJQUFBQSxhQUFhLEdBQUcsS0FBaEI7QUFDSCxHQUhELE1BR087QUFDSEEsSUFBQUEsYUFBYSxHQUFJTixTQUFTLEtBQUssTUFBL0I7QUFDSDs7QUFFRCxNQUFJTSxhQUFKLEVBQW1CO0FBQ2ZLLElBQUFBLE1BQU0sQ0FBQ0QsSUFBRCxDQUFOLENBQWFFLEdBQWIsQ0FBaUJDLFNBQWpCLENBQTJCTixrQkFBM0I7QUFDSCxHQUZELE1BRU87QUFDSEksSUFBQUEsTUFBTSxDQUFDRCxJQUFELENBQU4sQ0FBYUcsU0FBYixDQUF1Qk4sa0JBQXZCO0FBQ0g7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBlbGVtZW50cyBjb250YWlucyB0ZXh0XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZWxlbWVudFR5cGUgICBFbGVtZW50IHR5cGUgKGVsZW1lbnQgb3IgYnV0dG9uKVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICAgICAgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgICAgIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIGNvbnRlbnQgY29udGFpbnNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBnaXZlbiB0ZXh0IG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVGV4dCAgVGhlIHRleHQgdG8gY2hlY2sgYWdhaW5zdFxuICovXG5leHBvcnQgZGVmYXVsdCAoZWxlbWVudFR5cGUsIHNlbGVjdG9yLCBmYWxzZUNhc2UsIGV4cGVjdGVkVGV4dCkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21tYW5kIHRvIHBlcmZvcm0gb24gdGhlIGJyb3dzZXIgb2JqZWN0XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgY29tbWFuZCA9ICdnZXRWYWx1ZSc7XG5cbiAgICBpZiAoXG4gICAgICAgIFsnYnV0dG9uJywgJ2NvbnRhaW5lciddLmluY2x1ZGVzKGVsZW1lbnRUeXBlKVxuICAgICAgICB8fCAkKHNlbGVjdG9yKS5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgPT09IG51bGxcbiAgICApIHtcbiAgICAgICAgY29tbWFuZCA9ICdnZXRUZXh0JztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBGYWxzZSBjYXNlXG4gICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICovXG4gICAgbGV0IGJvb2xGYWxzZUNhc2U7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZXhwZWN0ZWQgdGV4dFxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG4gICAgbGV0IHN0cmluZ0V4cGVjdGVkVGV4dCA9IGV4cGVjdGVkVGV4dDtcblxuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IG9mIHRoZSBlbGVtZW50XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBlbGVtID0gJChzZWxlY3Rvcik7XG4gICAgZWxlbS53YWl0Rm9yRGlzcGxheWVkKCk7XG4gICAgY29uc3QgdGV4dCA9IGVsZW1bY29tbWFuZF0oKTtcblxuICAgIGlmICh0eXBlb2YgZXhwZWN0ZWRUZXh0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBzdHJpbmdFeHBlY3RlZFRleHQgPSBmYWxzZUNhc2U7XG4gICAgICAgIGJvb2xGYWxzZUNhc2UgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBib29sRmFsc2VDYXNlID0gKGZhbHNlQ2FzZSA9PT0gJyBub3QnKTtcbiAgICB9XG5cbiAgICBpZiAoYm9vbEZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QodGV4dCkubm90LnRvQ29udGFpbihzdHJpbmdFeHBlY3RlZFRleHQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdCh0ZXh0KS50b0NvbnRhaW4oc3RyaW5nRXhwZWN0ZWRUZXh0KTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkContainsText.js"
      ],
      "names": [
        "elementType",
        "selector",
        "falseCase",
        "expectedText",
        "command",
        "includes",
        "$",
        "getAttribute",
        "boolFalseCase",
        "stringExpectedText",
        "elem",
        "waitForDisplayed",
        "text",
        "expect",
        "not",
        "toContain"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,WAAD,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,YAAnC,KAAoD;AAC/D;;;;AAIA,MAAIC,OAAO,GAAG,UAAd;;AAEA,MACI,CAAC,QAAD,EAAW,WAAX,EAAwBC,QAAxB,CAAiCL,WAAjC,KACGM,CAAC,CAACL,QAAD,CAAD,CAAYM,YAAZ,CAAyB,OAAzB,MAAsC,IAF7C,EAGE;AACEH,IAAAA,OAAO,GAAG,SAAV;AACH;AAED;;;;;;AAIA,MAAII,aAAJ;AAEA;;;;;AAIA,MAAIC,kBAAkB,GAAGN,YAAzB;AAEA;;;;;AAIA,QAAMO,IAAI,GAAGJ,CAAC,CAACL,QAAD,CAAd;AACAS,EAAAA,IAAI,CAACC,gBAAL;AACA,QAAMC,IAAI,GAAGF,IAAI,CAACN,OAAD,CAAJ,EAAb;;AAEA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrCM,IAAAA,kBAAkB,GAAGP,SAArB;AACAM,IAAAA,aAAa,GAAG,KAAhB;AACH,GAHD,MAGO;AACHA,IAAAA,aAAa,GAAIN,SAAS,KAAK,MAA/B;AACH;;AAED,MAAIM,aAAJ,EAAmB;AACfK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,GAAb,CAAiBC,SAAjB,CAA2BN,kBAA3B;AACH,GAFD,MAEO;AACHI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaG,SAAb,CAAuBN,kBAAvB;AACH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given elements contains text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content contains\n *                                  the given text or not\n * @param  {String}   expectedText  The text to check against\n */\nexport default (elementType, selector, falseCase, expectedText) => {\n    /**\n     * The command to perform on the browser object\n     * @type {String}\n     */\n    let command = 'getValue';\n\n    if (\n        ['button', 'container'].includes(elementType)\n        || $(selector).getAttribute('value') === null\n    ) {\n        command = 'getText';\n    }\n\n    /**\n     * False case\n     * @type {Boolean}\n     */\n    let boolFalseCase;\n\n    /**\n     * The expected text\n     * @type {String}\n     */\n    let stringExpectedText = expectedText;\n\n    /**\n     * The text of the element\n     * @type {String}\n     */\n    const elem = $(selector);\n    elem.waitForDisplayed();\n    const text = elem[command]();\n\n    if (typeof expectedText === 'undefined') {\n        stringExpectedText = falseCase;\n        boolFalseCase = false;\n    } else {\n        boolFalseCase = (falseCase === ' not');\n    }\n\n    if (boolFalseCase) {\n        expect(text).not.toContain(stringExpectedText);\n    } else {\n        expect(text).toContain(stringExpectedText);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieContent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieContent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieContent.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieContent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkCookieContent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the content of a cookie against a given value\n * @param  {String}   name          The name of the cookie\n * @param  {String}   falseCase     Whether or not to check if the value matches\n *                                  or not\n * @param  {String}   expectedValue The value to check against\n */\nvar _default = (name, falseCase, expectedValue) => {\n  /**\n   * The cookie retrieved from the browser object\n   * @type {Object}\n   */\n  const cookie = browser.getCookies(name)[0];\n  expect(cookie.name).toBe(name, `no cookie found with the name \"${name}\"`);\n\n  if (falseCase) {\n    expect(cookie.value).not.toBe(expectedValue, `expected cookie \"${name}\" not to have value \"${expectedValue}\"`);\n  } else {\n    expect(cookie.value).toBe(expectedValue, `expected cookie \"${name}\" to have value \"${expectedValue}\"` + ` but got \"${cookie.value}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQ29va2llQ29udGVudC5qcyJdLCJuYW1lcyI6WyJuYW1lIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRWYWx1ZSIsImNvb2tpZSIsImJyb3dzZXIiLCJnZXRDb29raWVzIiwiZXhwZWN0IiwidG9CZSIsInZhbHVlIiwibm90Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7ZUFPZSxDQUFDQSxJQUFELEVBQU9DLFNBQVAsRUFBa0JDLGFBQWxCLEtBQW9DO0FBQy9DOzs7O0FBSUEsUUFBTUMsTUFBTSxHQUFHQyxPQUFPLENBQUNDLFVBQVIsQ0FBbUJMLElBQW5CLEVBQXlCLENBQXpCLENBQWY7QUFDQU0sRUFBQUEsTUFBTSxDQUFDSCxNQUFNLENBQUNILElBQVIsQ0FBTixDQUFvQk8sSUFBcEIsQ0FDSVAsSUFESixFQUVLLGtDQUFpQ0EsSUFBSyxHQUYzQzs7QUFLQSxNQUFJQyxTQUFKLEVBQWU7QUFDWEssSUFBQUEsTUFBTSxDQUFDSCxNQUFNLENBQUNLLEtBQVIsQ0FBTixDQUFxQkMsR0FBckIsQ0FBeUJGLElBQXpCLENBQ0lMLGFBREosRUFFSyxvQkFBbUJGLElBQUssd0JBQXVCRSxhQUFjLEdBRmxFO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0gsTUFBTSxDQUFDSyxLQUFSLENBQU4sQ0FBcUJELElBQXJCLENBQ0lMLGFBREosRUFFSyxvQkFBbUJGLElBQUssb0JBQW1CRSxhQUFjLEdBQTFELEdBQ0csYUFBWUMsTUFBTSxDQUFDSyxLQUFNLEdBSGhDO0FBS0g7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIHRoZSBjb250ZW50IG9mIGEgY29va2llIGFnYWluc3QgYSBnaXZlbiB2YWx1ZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIG5hbWUgICAgICAgICAgVGhlIG5hbWUgb2YgdGhlIGNvb2tpZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSAgICAgV2hldGhlciBvciBub3QgdG8gY2hlY2sgaWYgdGhlIHZhbHVlIG1hdGNoZXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrIGFnYWluc3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG5hbWUsIGZhbHNlQ2FzZSwgZXhwZWN0ZWRWYWx1ZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb29raWUgcmV0cmlldmVkIGZyb20gdGhlIGJyb3dzZXIgb2JqZWN0XG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBjb25zdCBjb29raWUgPSBicm93c2VyLmdldENvb2tpZXMobmFtZSlbMF07XG4gICAgZXhwZWN0KGNvb2tpZS5uYW1lKS50b0JlKFxuICAgICAgICBuYW1lLFxuICAgICAgICBgbm8gY29va2llIGZvdW5kIHdpdGggdGhlIG5hbWUgXCIke25hbWV9XCJgXG4gICAgKTtcblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KGNvb2tpZS52YWx1ZSkubm90LnRvQmUoXG4gICAgICAgICAgICBleHBlY3RlZFZhbHVlLFxuICAgICAgICAgICAgYGV4cGVjdGVkIGNvb2tpZSBcIiR7bmFtZX1cIiBub3QgdG8gaGF2ZSB2YWx1ZSBcIiR7ZXhwZWN0ZWRWYWx1ZX1cImBcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoY29va2llLnZhbHVlKS50b0JlKFxuICAgICAgICAgICAgZXhwZWN0ZWRWYWx1ZSxcbiAgICAgICAgICAgIGBleHBlY3RlZCBjb29raWUgXCIke25hbWV9XCIgdG8gaGF2ZSB2YWx1ZSBcIiR7ZXhwZWN0ZWRWYWx1ZX1cImBcbiAgICAgICAgICAgICsgYCBidXQgZ290IFwiJHtjb29raWUudmFsdWV9XCJgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkCookieContent.js"
      ],
      "names": [
        "name",
        "falseCase",
        "expectedValue",
        "cookie",
        "browser",
        "getCookies",
        "expect",
        "toBe",
        "value",
        "not"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,IAAD,EAAOC,SAAP,EAAkBC,aAAlB,KAAoC;AAC/C;;;;AAIA,QAAMC,MAAM,GAAGC,OAAO,CAACC,UAAR,CAAmBL,IAAnB,EAAyB,CAAzB,CAAf;AACAM,EAAAA,MAAM,CAACH,MAAM,CAACH,IAAR,CAAN,CAAoBO,IAApB,CACIP,IADJ,EAEK,kCAAiCA,IAAK,GAF3C;;AAKA,MAAIC,SAAJ,EAAe;AACXK,IAAAA,MAAM,CAACH,MAAM,CAACK,KAAR,CAAN,CAAqBC,GAArB,CAAyBF,IAAzB,CACIL,aADJ,EAEK,oBAAmBF,IAAK,wBAAuBE,aAAc,GAFlE;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACH,MAAM,CAACK,KAAR,CAAN,CAAqBD,IAArB,CACIL,aADJ,EAEK,oBAAmBF,IAAK,oBAAmBE,aAAc,GAA1D,GACG,aAAYC,MAAM,CAACK,KAAM,GAHhC;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the content of a cookie against a given value\n * @param  {String}   name          The name of the cookie\n * @param  {String}   falseCase     Whether or not to check if the value matches\n *                                  or not\n * @param  {String}   expectedValue The value to check against\n */\nexport default (name, falseCase, expectedValue) => {\n    /**\n     * The cookie retrieved from the browser object\n     * @type {Object}\n     */\n    const cookie = browser.getCookies(name)[0];\n    expect(cookie.name).toBe(\n        name,\n        `no cookie found with the name \"${name}\"`\n    );\n\n    if (falseCase) {\n        expect(cookie.value).not.toBe(\n            expectedValue,\n            `expected cookie \"${name}\" not to have value \"${expectedValue}\"`\n        );\n    } else {\n        expect(cookie.value).toBe(\n            expectedValue,\n            `expected cookie \"${name}\" to have value \"${expectedValue}\"`\n            + ` but got \"${cookie.value}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieExists.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieExists.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieExists.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkCookieExists.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkCookieExists.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if a cookie with the given name exists\n * @param  {[type]}   name      The name of the cookie\n * @param  {[type]}   falseCase Whether or not to check if the cookie exists or\n *                              not\n */\nvar _default = (name, falseCase) => {\n  /**\n   * The cookie as retrieved from the browser\n   * @type {Object}\n   */\n  const cookie = browser.getCookies(name);\n\n  if (falseCase) {\n    expect(cookie).toHaveLength(0, `Expected cookie \"${name}\" not to exists but it does`);\n  } else {\n    expect(cookie).not.toHaveLength(0, `Expected cookie \"${name}\" to exists but it does not`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQ29va2llRXhpc3RzLmpzIl0sIm5hbWVzIjpbIm5hbWUiLCJmYWxzZUNhc2UiLCJjb29raWUiLCJicm93c2VyIiwiZ2V0Q29va2llcyIsImV4cGVjdCIsInRvSGF2ZUxlbmd0aCIsIm5vdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7ZUFNZSxDQUFDQSxJQUFELEVBQU9DLFNBQVAsS0FBcUI7QUFDaEM7Ozs7QUFJQSxRQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQ0MsVUFBUixDQUFtQkosSUFBbkIsQ0FBZjs7QUFFQSxNQUFJQyxTQUFKLEVBQWU7QUFDWEksSUFBQUEsTUFBTSxDQUFDSCxNQUFELENBQU4sQ0FBZUksWUFBZixDQUNJLENBREosRUFFSyxvQkFBbUJOLElBQUssNkJBRjdCO0FBSUgsR0FMRCxNQUtPO0FBQ0hLLElBQUFBLE1BQU0sQ0FBQ0gsTUFBRCxDQUFOLENBQWVLLEdBQWYsQ0FBbUJELFlBQW5CLENBQ0ksQ0FESixFQUVLLG9CQUFtQk4sSUFBSyw2QkFGN0I7QUFJSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgYSBjb29raWUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBleGlzdHNcbiAqIEBwYXJhbSAge1t0eXBlXX0gICBuYW1lICAgICAgVGhlIG5hbWUgb2YgdGhlIGNvb2tpZVxuICogQHBhcmFtICB7W3R5cGVdfSAgIGZhbHNlQ2FzZSBXaGV0aGVyIG9yIG5vdCB0byBjaGVjayBpZiB0aGUgY29va2llIGV4aXN0cyBvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG5hbWUsIGZhbHNlQ2FzZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb29raWUgYXMgcmV0cmlldmVkIGZyb20gdGhlIGJyb3dzZXJcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIGNvbnN0IGNvb2tpZSA9IGJyb3dzZXIuZ2V0Q29va2llcyhuYW1lKTtcblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KGNvb2tpZSkudG9IYXZlTGVuZ3RoKFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBjb29raWUgXCIke25hbWV9XCIgbm90IHRvIGV4aXN0cyBidXQgaXQgZG9lc2BcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoY29va2llKS5ub3QudG9IYXZlTGVuZ3RoKFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBjb29raWUgXCIke25hbWV9XCIgdG8gZXhpc3RzIGJ1dCBpdCBkb2VzIG5vdGBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkCookieExists.js"
      ],
      "names": [
        "name",
        "falseCase",
        "cookie",
        "browser",
        "getCookies",
        "expect",
        "toHaveLength",
        "not"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,IAAD,EAAOC,SAAP,KAAqB;AAChC;;;;AAIA,QAAMC,MAAM,GAAGC,OAAO,CAACC,UAAR,CAAmBJ,IAAnB,CAAf;;AAEA,MAAIC,SAAJ,EAAe;AACXI,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,YAAf,CACI,CADJ,EAEK,oBAAmBN,IAAK,6BAF7B;AAIH,GALD,MAKO;AACHK,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeK,GAAf,CAAmBD,YAAnB,CACI,CADJ,EAEK,oBAAmBN,IAAK,6BAF7B;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if a cookie with the given name exists\n * @param  {[type]}   name      The name of the cookie\n * @param  {[type]}   falseCase Whether or not to check if the cookie exists or\n *                              not\n */\nexport default (name, falseCase) => {\n    /**\n     * The cookie as retrieved from the browser\n     * @type {Object}\n     */\n    const cookie = browser.getCookies(name);\n\n    if (falseCase) {\n        expect(cookie).toHaveLength(\n            0,\n            `Expected cookie \"${name}\" not to exists but it does`\n        );\n    } else {\n        expect(cookie).not.toHaveLength(\n            0,\n            `Expected cookie \"${name}\" to exists but it does not`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkDimension.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkDimension.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkDimension.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkDimension.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkDimension.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the dimensions of the given element\n * @param  {String}   selector         Element selector\n * @param  {String}   falseCase    Whether to check if the dimensions match or\n *                                 not\n * @param  {String}   expectedSize Expected size\n * @param  {String}   dimension    Dimension to check (broad or tall)\n */\nvar _default = (selector, falseCase, expectedSize, dimension) => {\n  /**\n   * The size of the given element\n   * @type {Object}\n   */\n  const elementSize = $(selector).getSize();\n  /**\n   * Parsed size to check for\n   * @type {Int}\n   */\n\n  const intExpectedSize = parseInt(expectedSize, 10);\n  /**\n   * The size property to check against\n   * @type {Int}\n   */\n\n  let originalSize = elementSize.height;\n  /**\n   * The label of the checked property\n   * @type {String}\n   */\n\n  let label = 'height';\n\n  if (dimension === 'broad') {\n    originalSize = elementSize.width;\n    label = 'width';\n  }\n\n  if (falseCase) {\n    expect(originalSize).not.toBe(intExpectedSize, `Element \"${selector}\" should not have a ${label} of ` + `${intExpectedSize}px`);\n  } else {\n    expect(originalSize).toBe(intExpectedSize, `Element \"${selector}\" should have a ${label} of ` + `${intExpectedSize}px, but is ${originalSize}px`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrRGltZW5zaW9uLmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRTaXplIiwiZGltZW5zaW9uIiwiZWxlbWVudFNpemUiLCIkIiwiZ2V0U2l6ZSIsImludEV4cGVjdGVkU2l6ZSIsInBhcnNlSW50Iiwib3JpZ2luYWxTaXplIiwiaGVpZ2h0IiwibGFiZWwiLCJ3aWR0aCIsImV4cGVjdCIsIm5vdCIsInRvQmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7ZUFRZSxDQUFDQSxRQUFELEVBQVdDLFNBQVgsRUFBc0JDLFlBQXRCLEVBQW9DQyxTQUFwQyxLQUFrRDtBQUM3RDs7OztBQUlBLFFBQU1DLFdBQVcsR0FBR0MsQ0FBQyxDQUFDTCxRQUFELENBQUQsQ0FBWU0sT0FBWixFQUFwQjtBQUVBOzs7OztBQUlBLFFBQU1DLGVBQWUsR0FBR0MsUUFBUSxDQUFDTixZQUFELEVBQWUsRUFBZixDQUFoQztBQUVBOzs7OztBQUlBLE1BQUlPLFlBQVksR0FBR0wsV0FBVyxDQUFDTSxNQUEvQjtBQUVBOzs7OztBQUlBLE1BQUlDLEtBQUssR0FBRyxRQUFaOztBQUVBLE1BQUlSLFNBQVMsS0FBSyxPQUFsQixFQUEyQjtBQUN2Qk0sSUFBQUEsWUFBWSxHQUFHTCxXQUFXLENBQUNRLEtBQTNCO0FBQ0FELElBQUFBLEtBQUssR0FBRyxPQUFSO0FBQ0g7O0FBRUQsTUFBSVYsU0FBSixFQUFlO0FBQ1hZLElBQUFBLE1BQU0sQ0FBQ0osWUFBRCxDQUFOLENBQXFCSyxHQUFyQixDQUF5QkMsSUFBekIsQ0FDSVIsZUFESixFQUVLLFlBQVdQLFFBQVMsdUJBQXNCVyxLQUFNLE1BQWpELEdBQ0csR0FBRUosZUFBZ0IsSUFIekI7QUFLSCxHQU5ELE1BTU87QUFDSE0sSUFBQUEsTUFBTSxDQUFDSixZQUFELENBQU4sQ0FBcUJNLElBQXJCLENBQ0lSLGVBREosRUFFSyxZQUFXUCxRQUFTLG1CQUFrQlcsS0FBTSxNQUE3QyxHQUNHLEdBQUVKLGVBQWdCLGNBQWFFLFlBQWEsSUFIbkQ7QUFLSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgdGhlIGRpbWVuc2lvbnMgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICAgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgICAgV2hldGhlciB0byBjaGVjayBpZiB0aGUgZGltZW5zaW9ucyBtYXRjaCBvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RcbiAqIEBwYXJhbSAge1N0cmluZ30gICBleHBlY3RlZFNpemUgRXhwZWN0ZWQgc2l6ZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIGRpbWVuc2lvbiAgICBEaW1lbnNpb24gdG8gY2hlY2sgKGJyb2FkIG9yIHRhbGwpXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgZmFsc2VDYXNlLCBleHBlY3RlZFNpemUsIGRpbWVuc2lvbikgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBzaXplIG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBjb25zdCBlbGVtZW50U2l6ZSA9ICQoc2VsZWN0b3IpLmdldFNpemUoKTtcblxuICAgIC8qKlxuICAgICAqIFBhcnNlZCBzaXplIHRvIGNoZWNrIGZvclxuICAgICAqIEB0eXBlIHtJbnR9XG4gICAgICovXG4gICAgY29uc3QgaW50RXhwZWN0ZWRTaXplID0gcGFyc2VJbnQoZXhwZWN0ZWRTaXplLCAxMCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2l6ZSBwcm9wZXJ0eSB0byBjaGVjayBhZ2FpbnN0XG4gICAgICogQHR5cGUge0ludH1cbiAgICAgKi9cbiAgICBsZXQgb3JpZ2luYWxTaXplID0gZWxlbWVudFNpemUuaGVpZ2h0O1xuXG4gICAgLyoqXG4gICAgICogVGhlIGxhYmVsIG9mIHRoZSBjaGVja2VkIHByb3BlcnR5XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgbGFiZWwgPSAnaGVpZ2h0JztcblxuICAgIGlmIChkaW1lbnNpb24gPT09ICdicm9hZCcpIHtcbiAgICAgICAgb3JpZ2luYWxTaXplID0gZWxlbWVudFNpemUud2lkdGg7XG4gICAgICAgIGxhYmVsID0gJ3dpZHRoJztcbiAgICB9XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChvcmlnaW5hbFNpemUpLm5vdC50b0JlKFxuICAgICAgICAgICAgaW50RXhwZWN0ZWRTaXplLFxuICAgICAgICAgICAgYEVsZW1lbnQgXCIke3NlbGVjdG9yfVwiIHNob3VsZCBub3QgaGF2ZSBhICR7bGFiZWx9IG9mIGBcbiAgICAgICAgICAgICsgYCR7aW50RXhwZWN0ZWRTaXplfXB4YFxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdChvcmlnaW5hbFNpemUpLnRvQmUoXG4gICAgICAgICAgICBpbnRFeHBlY3RlZFNpemUsXG4gICAgICAgICAgICBgRWxlbWVudCBcIiR7c2VsZWN0b3J9XCIgc2hvdWxkIGhhdmUgYSAke2xhYmVsfSBvZiBgXG4gICAgICAgICAgICArIGAke2ludEV4cGVjdGVkU2l6ZX1weCwgYnV0IGlzICR7b3JpZ2luYWxTaXplfXB4YFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkDimension.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "expectedSize",
        "dimension",
        "elementSize",
        "$",
        "getSize",
        "intExpectedSize",
        "parseInt",
        "originalSize",
        "height",
        "label",
        "width",
        "expect",
        "not",
        "toBe"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,QAAD,EAAWC,SAAX,EAAsBC,YAAtB,EAAoCC,SAApC,KAAkD;AAC7D;;;;AAIA,QAAMC,WAAW,GAAGC,CAAC,CAACL,QAAD,CAAD,CAAYM,OAAZ,EAApB;AAEA;;;;;AAIA,QAAMC,eAAe,GAAGC,QAAQ,CAACN,YAAD,EAAe,EAAf,CAAhC;AAEA;;;;;AAIA,MAAIO,YAAY,GAAGL,WAAW,CAACM,MAA/B;AAEA;;;;;AAIA,MAAIC,KAAK,GAAG,QAAZ;;AAEA,MAAIR,SAAS,KAAK,OAAlB,EAA2B;AACvBM,IAAAA,YAAY,GAAGL,WAAW,CAACQ,KAA3B;AACAD,IAAAA,KAAK,GAAG,OAAR;AACH;;AAED,MAAIV,SAAJ,EAAe;AACXY,IAAAA,MAAM,CAACJ,YAAD,CAAN,CAAqBK,GAArB,CAAyBC,IAAzB,CACIR,eADJ,EAEK,YAAWP,QAAS,uBAAsBW,KAAM,MAAjD,GACG,GAAEJ,eAAgB,IAHzB;AAKH,GAND,MAMO;AACHM,IAAAA,MAAM,CAACJ,YAAD,CAAN,CAAqBM,IAArB,CACIR,eADJ,EAEK,YAAWP,QAAS,mBAAkBW,KAAM,MAA7C,GACG,GAAEJ,eAAgB,cAAaE,YAAa,IAHnD;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the dimensions of the given element\n * @param  {String}   selector         Element selector\n * @param  {String}   falseCase    Whether to check if the dimensions match or\n *                                 not\n * @param  {String}   expectedSize Expected size\n * @param  {String}   dimension    Dimension to check (broad or tall)\n */\nexport default (selector, falseCase, expectedSize, dimension) => {\n    /**\n     * The size of the given element\n     * @type {Object}\n     */\n    const elementSize = $(selector).getSize();\n\n    /**\n     * Parsed size to check for\n     * @type {Int}\n     */\n    const intExpectedSize = parseInt(expectedSize, 10);\n\n    /**\n     * The size property to check against\n     * @type {Int}\n     */\n    let originalSize = elementSize.height;\n\n    /**\n     * The label of the checked property\n     * @type {String}\n     */\n    let label = 'height';\n\n    if (dimension === 'broad') {\n        originalSize = elementSize.width;\n        label = 'width';\n    }\n\n    if (falseCase) {\n        expect(originalSize).not.toBe(\n            intExpectedSize,\n            `Element \"${selector}\" should not have a ${label} of `\n            + `${intExpectedSize}px`\n        );\n    } else {\n        expect(originalSize).toBe(\n            intExpectedSize,\n            `Element \"${selector}\" should have a ${label} of `\n            + `${intExpectedSize}px, but is ${originalSize}px`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkElementExists.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkElementExists.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkElementExists.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkElementExists.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkElementExists.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkIfElementExists = _interopRequireDefault(require(\"../lib/checkIfElementExists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Check if the given element exists\n * @param  {String}   isExisting Whether the element should be existing or not\n *                               (an or no)\n * @param  {String}   selector       Element selector\n */\nvar _default = (isExisting, selector) => {\n  /**\n   * Falsecase assertion\n   * @type {Boolean}\n   */\n  let falseCase = true;\n\n  if (isExisting === 'an') {\n    falseCase = false;\n  }\n\n  (0, _checkIfElementExists.default)(selector, falseCase);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrRWxlbWVudEV4aXN0cy5qcyJdLCJuYW1lcyI6WyJpc0V4aXN0aW5nIiwic2VsZWN0b3IiLCJmYWxzZUNhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBOzs7Ozs7ZUFNZSxDQUFDQSxVQUFELEVBQWFDLFFBQWIsS0FBMEI7QUFDckM7Ozs7QUFJQSxNQUFJQyxTQUFTLEdBQUcsSUFBaEI7O0FBRUEsTUFBSUYsVUFBVSxLQUFLLElBQW5CLEVBQXlCO0FBQ3JCRSxJQUFBQSxTQUFTLEdBQUcsS0FBWjtBQUNIOztBQUVELHFDQUFxQkQsUUFBckIsRUFBK0JDLFNBQS9CO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoZWNrSWZFbGVtZW50RXhpc3RzIGZyb20gJy4uL2xpYi9jaGVja0lmRWxlbWVudEV4aXN0cyc7XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIGdpdmVuIGVsZW1lbnQgZXhpc3RzXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgaXNFeGlzdGluZyBXaGV0aGVyIHRoZSBlbGVtZW50IHNob3VsZCBiZSBleGlzdGluZyBvciBub3RcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhbiBvciBubylcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICBFbGVtZW50IHNlbGVjdG9yXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChpc0V4aXN0aW5nLCBzZWxlY3RvcikgPT4ge1xuICAgIC8qKlxuICAgICAqIEZhbHNlY2FzZSBhc3NlcnRpb25cbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBsZXQgZmFsc2VDYXNlID0gdHJ1ZTtcblxuICAgIGlmIChpc0V4aXN0aW5nID09PSAnYW4nKSB7XG4gICAgICAgIGZhbHNlQ2FzZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIGNoZWNrSWZFbGVtZW50RXhpc3RzKHNlbGVjdG9yLCBmYWxzZUNhc2UpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkElementExists.js"
      ],
      "names": [
        "isExisting",
        "selector",
        "falseCase"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;eAMe,CAACA,UAAD,EAAaC,QAAb,KAA0B;AACrC;;;;AAIA,MAAIC,SAAS,GAAG,IAAhB;;AAEA,MAAIF,UAAU,KAAK,IAAnB,EAAyB;AACrBE,IAAAA,SAAS,GAAG,KAAZ;AACH;;AAED,qCAAqBD,QAArB,EAA+BC,SAA/B;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "import checkIfElementExists from '../lib/checkIfElementExists';\n\n/**\n * Check if the given element exists\n * @param  {String}   isExisting Whether the element should be existing or not\n *                               (an or no)\n * @param  {String}   selector       Element selector\n */\nexport default (isExisting, selector) => {\n    /**\n     * Falsecase assertion\n     * @type {Boolean}\n     */\n    let falseCase = true;\n\n    if (isExisting === 'an') {\n        falseCase = false;\n    }\n\n    checkIfElementExists(selector, falseCase);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/checkIfElementExists.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/checkIfElementExists.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/checkIfElementExists.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/checkIfElementExists.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/",
        "sourceFileName": "checkIfElementExists.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element exists in the DOM one or more times\n * @param  {String}  selector  Element selector\n * @param  {Boolean} falseCase Check if the element (does not) exists\n * @param  {Number}  exactly   Check if the element exists exactly this number\n *                             of times\n */\nvar _default = (selector, falseCase, exactly) => {\n  /**\n   * The number of elements found in the DOM\n   * @type {Int}\n   */\n  const nrOfElements = $$(selector);\n\n  if (falseCase === true) {\n    expect(nrOfElements).toHaveLength(0, `Element with selector \"${selector}\" should not exist on the page`);\n  } else if (exactly) {\n    expect(nrOfElements).toHaveLength(exactly, `Element with selector \"${selector}\" should exist exactly ` + `${exactly} time(s)`);\n  } else {\n    expect(nrOfElements.length).toBeGreaterThanOrEqual(1, `Element with selector \"${selector}\" should exist on the page`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrSWZFbGVtZW50RXhpc3RzLmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiZXhhY3RseSIsIm5yT2ZFbGVtZW50cyIsIiQkIiwiZXhwZWN0IiwidG9IYXZlTGVuZ3RoIiwibGVuZ3RoIiwidG9CZUdyZWF0ZXJUaGFuT3JFcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7O2VBT2UsQ0FBQ0EsUUFBRCxFQUFXQyxTQUFYLEVBQXNCQyxPQUF0QixLQUFrQztBQUM3Qzs7OztBQUlBLFFBQU1DLFlBQVksR0FBR0MsRUFBRSxDQUFDSixRQUFELENBQXZCOztBQUVBLE1BQUlDLFNBQVMsS0FBSyxJQUFsQixFQUF3QjtBQUNwQkksSUFBQUEsTUFBTSxDQUFDRixZQUFELENBQU4sQ0FBcUJHLFlBQXJCLENBQ0ksQ0FESixFQUVLLDBCQUF5Qk4sUUFBUyxnQ0FGdkM7QUFJSCxHQUxELE1BS08sSUFBSUUsT0FBSixFQUFhO0FBQ2hCRyxJQUFBQSxNQUFNLENBQUNGLFlBQUQsQ0FBTixDQUFxQkcsWUFBckIsQ0FDSUosT0FESixFQUVLLDBCQUF5QkYsUUFBUyx5QkFBbkMsR0FDRyxHQUFFRSxPQUFRLFVBSGpCO0FBS0gsR0FOTSxNQU1BO0FBQ0hHLElBQUFBLE1BQU0sQ0FBQ0YsWUFBWSxDQUFDSSxNQUFkLENBQU4sQ0FBNEJDLHNCQUE1QixDQUNJLENBREosRUFFSywwQkFBeUJSLFFBQVMsNEJBRnZDO0FBSUg7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9saWIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBleGlzdHMgaW4gdGhlIERPTSBvbmUgb3IgbW9yZSB0aW1lc1xuICogQHBhcmFtICB7U3RyaW5nfSAgc2VsZWN0b3IgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge0Jvb2xlYW59IGZhbHNlQ2FzZSBDaGVjayBpZiB0aGUgZWxlbWVudCAoZG9lcyBub3QpIGV4aXN0c1xuICogQHBhcmFtICB7TnVtYmVyfSAgZXhhY3RseSAgIENoZWNrIGlmIHRoZSBlbGVtZW50IGV4aXN0cyBleGFjdGx5IHRoaXMgbnVtYmVyXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgdGltZXNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHNlbGVjdG9yLCBmYWxzZUNhc2UsIGV4YWN0bHkpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIGVsZW1lbnRzIGZvdW5kIGluIHRoZSBET01cbiAgICAgKiBAdHlwZSB7SW50fVxuICAgICAqL1xuICAgIGNvbnN0IG5yT2ZFbGVtZW50cyA9ICQkKHNlbGVjdG9yKTtcblxuICAgIGlmIChmYWxzZUNhc2UgPT09IHRydWUpIHtcbiAgICAgICAgZXhwZWN0KG5yT2ZFbGVtZW50cykudG9IYXZlTGVuZ3RoKFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGBFbGVtZW50IHdpdGggc2VsZWN0b3IgXCIke3NlbGVjdG9yfVwiIHNob3VsZCBub3QgZXhpc3Qgb24gdGhlIHBhZ2VgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIGlmIChleGFjdGx5KSB7XG4gICAgICAgIGV4cGVjdChuck9mRWxlbWVudHMpLnRvSGF2ZUxlbmd0aChcbiAgICAgICAgICAgIGV4YWN0bHksXG4gICAgICAgICAgICBgRWxlbWVudCB3aXRoIHNlbGVjdG9yIFwiJHtzZWxlY3Rvcn1cIiBzaG91bGQgZXhpc3QgZXhhY3RseSBgXG4gICAgICAgICAgICArIGAke2V4YWN0bHl9IHRpbWUocylgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KG5yT2ZFbGVtZW50cy5sZW5ndGgpLnRvQmVHcmVhdGVyVGhhbk9yRXF1YWwoXG4gICAgICAgICAgICAxLFxuICAgICAgICAgICAgYEVsZW1lbnQgd2l0aCBzZWxlY3RvciBcIiR7c2VsZWN0b3J9XCIgc2hvdWxkIGV4aXN0IG9uIHRoZSBwYWdlYFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkIfElementExists.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "exactly",
        "nrOfElements",
        "$$",
        "expect",
        "toHaveLength",
        "length",
        "toBeGreaterThanOrEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,KAAkC;AAC7C;;;;AAIA,QAAMC,YAAY,GAAGC,EAAE,CAACJ,QAAD,CAAvB;;AAEA,MAAIC,SAAS,KAAK,IAAlB,EAAwB;AACpBI,IAAAA,MAAM,CAACF,YAAD,CAAN,CAAqBG,YAArB,CACI,CADJ,EAEK,0BAAyBN,QAAS,gCAFvC;AAIH,GALD,MAKO,IAAIE,OAAJ,EAAa;AAChBG,IAAAA,MAAM,CAACF,YAAD,CAAN,CAAqBG,YAArB,CACIJ,OADJ,EAEK,0BAAyBF,QAAS,yBAAnC,GACG,GAAEE,OAAQ,UAHjB;AAKH,GANM,MAMA;AACHG,IAAAA,MAAM,CAACF,YAAY,CAACI,MAAd,CAAN,CAA4BC,sBAA5B,CACI,CADJ,EAEK,0BAAyBR,QAAS,4BAFvC;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/lib/",
      "sourcesContent": [
        "/**\n * Check if the given element exists in the DOM one or more times\n * @param  {String}  selector  Element selector\n * @param  {Boolean} falseCase Check if the element (does not) exists\n * @param  {Number}  exactly   Check if the element exists exactly this number\n *                             of times\n */\nexport default (selector, falseCase, exactly) => {\n    /**\n     * The number of elements found in the DOM\n     * @type {Int}\n     */\n    const nrOfElements = $$(selector);\n\n    if (falseCase === true) {\n        expect(nrOfElements).toHaveLength(\n            0,\n            `Element with selector \"${selector}\" should not exist on the page`\n        );\n    } else if (exactly) {\n        expect(nrOfElements).toHaveLength(\n            exactly,\n            `Element with selector \"${selector}\" should exist exactly `\n            + `${exactly} time(s)`\n        );\n    } else {\n        expect(nrOfElements.length).toBeGreaterThanOrEqual(\n            1,\n            `Element with selector \"${selector}\" should exist on the page`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkEqualsText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkEqualsText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkEqualsText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkEqualsText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkEqualsText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given elements text is the same as the given text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content equals the\n *                                  given text or not\n * @param  {String}   expectedText  The text to validate against\n */\nvar _default = (elementType, selector, falseCase, expectedText) => {\n  /**\n   * The command to execute on the browser object\n   * @type {String}\n   */\n  let command = 'getValue';\n\n  if (elementType === 'button' || $(selector).getAttribute('value') === null) {\n    command = 'getText';\n  }\n  /**\n   * The expected text to validate against\n   * @type {String}\n   */\n\n\n  let parsedExpectedText = expectedText;\n  /**\n   * Whether to check if the content equals the given text or not\n   * @type {Boolean}\n   */\n\n  let boolFalseCase = !!falseCase; // Check for empty element\n\n  if (typeof parsedExpectedText === 'function') {\n    parsedExpectedText = '';\n    boolFalseCase = !boolFalseCase;\n  }\n\n  if (parsedExpectedText === undefined && falseCase === undefined) {\n    parsedExpectedText = '';\n    boolFalseCase = true;\n  }\n\n  console.log(command + \"--\" + selector);\n  const text = browser[command](selector);\n\n  if (boolFalseCase) {\n    expect(parsedExpectedText).not.toBe(text);\n  } else {\n    expect(parsedExpectedText).toBe(text);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrRXF1YWxzVGV4dC5qcyJdLCJuYW1lcyI6WyJlbGVtZW50VHlwZSIsInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRUZXh0IiwiY29tbWFuZCIsIiQiLCJnZXRBdHRyaWJ1dGUiLCJwYXJzZWRFeHBlY3RlZFRleHQiLCJib29sRmFsc2VDYXNlIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsInRleHQiLCJicm93c2VyIiwiZXhwZWN0Iiwibm90IiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztlQVFlLENBQUNBLFdBQUQsRUFBY0MsUUFBZCxFQUF3QkMsU0FBeEIsRUFBbUNDLFlBQW5DLEtBQW9EO0FBQy9EOzs7O0FBSUEsTUFBSUMsT0FBTyxHQUFHLFVBQWQ7O0FBRUEsTUFDSUosV0FBVyxLQUFLLFFBQWhCLElBQ0dLLENBQUMsQ0FBQ0osUUFBRCxDQUFELENBQVlLLFlBQVosQ0FBeUIsT0FBekIsTUFBc0MsSUFGN0MsRUFHRTtBQUNFRixJQUFBQSxPQUFPLEdBQUcsU0FBVjtBQUNIO0FBRUQ7Ozs7OztBQUlBLE1BQUlHLGtCQUFrQixHQUFHSixZQUF6QjtBQUVBOzs7OztBQUlBLE1BQUlLLGFBQWEsR0FBRyxDQUFDLENBQUNOLFNBQXRCLENBeEIrRCxDQTBCL0Q7O0FBQ0EsTUFBSSxPQUFPSyxrQkFBUCxLQUE4QixVQUFsQyxFQUE4QztBQUMxQ0EsSUFBQUEsa0JBQWtCLEdBQUcsRUFBckI7QUFFQUMsSUFBQUEsYUFBYSxHQUFHLENBQUNBLGFBQWpCO0FBQ0g7O0FBRUQsTUFBSUQsa0JBQWtCLEtBQUtFLFNBQXZCLElBQW9DUCxTQUFTLEtBQUtPLFNBQXRELEVBQWlFO0FBQzdERixJQUFBQSxrQkFBa0IsR0FBRyxFQUFyQjtBQUNBQyxJQUFBQSxhQUFhLEdBQUcsSUFBaEI7QUFDSDs7QUFHRkUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLE9BQU8sR0FBQyxJQUFSLEdBQWFILFFBQXpCO0FBQ0MsUUFBTVcsSUFBSSxHQUFHQyxPQUFPLENBQUNULE9BQUQsQ0FBUCxDQUFpQkgsUUFBakIsQ0FBYjs7QUFHQSxNQUFJTyxhQUFKLEVBQW1CO0FBQ2ZNLElBQUFBLE1BQU0sQ0FBQ1Asa0JBQUQsQ0FBTixDQUEyQlEsR0FBM0IsQ0FBK0JDLElBQS9CLENBQW9DSixJQUFwQztBQUNILEdBRkQsTUFFTztBQUNIRSxJQUFBQSxNQUFNLENBQUNQLGtCQUFELENBQU4sQ0FBMkJTLElBQTNCLENBQWdDSixJQUFoQztBQUNIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZWxlbWVudHMgdGV4dCBpcyB0aGUgc2FtZSBhcyB0aGUgZ2l2ZW4gdGV4dFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGVsZW1lbnRUeXBlICAgRWxlbWVudCB0eXBlIChlbGVtZW50IG9yIGJ1dHRvbilcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlICAgICBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBjb250ZW50IGVxdWFscyB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdpdmVuIHRleHQgb3Igbm90XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZXhwZWN0ZWRUZXh0ICBUaGUgdGV4dCB0byB2YWxpZGF0ZSBhZ2FpbnN0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChlbGVtZW50VHlwZSwgc2VsZWN0b3IsIGZhbHNlQ2FzZSwgZXhwZWN0ZWRUZXh0KSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbW1hbmQgdG8gZXhlY3V0ZSBvbiB0aGUgYnJvd3NlciBvYmplY3RcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGxldCBjb21tYW5kID0gJ2dldFZhbHVlJztcblxuICAgIGlmIChcbiAgICAgICAgZWxlbWVudFR5cGUgPT09ICdidXR0b24nXG4gICAgICAgIHx8ICQoc2VsZWN0b3IpLmdldEF0dHJpYnV0ZSgndmFsdWUnKSA9PT0gbnVsbFxuICAgICkge1xuICAgICAgICBjb21tYW5kID0gJ2dldFRleHQnO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBleHBlY3RlZCB0ZXh0IHRvIHZhbGlkYXRlIGFnYWluc3RcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGxldCBwYXJzZWRFeHBlY3RlZFRleHQgPSBleHBlY3RlZFRleHQ7XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBjb250ZW50IGVxdWFscyB0aGUgZ2l2ZW4gdGV4dCBvciBub3RcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBsZXQgYm9vbEZhbHNlQ2FzZSA9ICEhZmFsc2VDYXNlO1xuXG4gICAgLy8gQ2hlY2sgZm9yIGVtcHR5IGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIHBhcnNlZEV4cGVjdGVkVGV4dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwYXJzZWRFeHBlY3RlZFRleHQgPSAnJztcblxuICAgICAgICBib29sRmFsc2VDYXNlID0gIWJvb2xGYWxzZUNhc2U7XG4gICAgfVxuXG4gICAgaWYgKHBhcnNlZEV4cGVjdGVkVGV4dCA9PT0gdW5kZWZpbmVkICYmIGZhbHNlQ2FzZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHBhcnNlZEV4cGVjdGVkVGV4dCA9ICcnO1xuICAgICAgICBib29sRmFsc2VDYXNlID0gdHJ1ZTtcbiAgICB9XG5cblxuICAgY29uc29sZS5sb2coY29tbWFuZCtcIi0tXCIrc2VsZWN0b3IpO1xuICAgIGNvbnN0IHRleHQgPSBicm93c2VyW2NvbW1hbmRdKHNlbGVjdG9yKTtcbiAgICBcbiAgICBcbiAgICBpZiAoYm9vbEZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QocGFyc2VkRXhwZWN0ZWRUZXh0KS5ub3QudG9CZSh0ZXh0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QocGFyc2VkRXhwZWN0ZWRUZXh0KS50b0JlKHRleHQpO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkEqualsText.js"
      ],
      "names": [
        "elementType",
        "selector",
        "falseCase",
        "expectedText",
        "command",
        "$",
        "getAttribute",
        "parsedExpectedText",
        "boolFalseCase",
        "undefined",
        "console",
        "log",
        "text",
        "browser",
        "expect",
        "not",
        "toBe"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,WAAD,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,YAAnC,KAAoD;AAC/D;;;;AAIA,MAAIC,OAAO,GAAG,UAAd;;AAEA,MACIJ,WAAW,KAAK,QAAhB,IACGK,CAAC,CAACJ,QAAD,CAAD,CAAYK,YAAZ,CAAyB,OAAzB,MAAsC,IAF7C,EAGE;AACEF,IAAAA,OAAO,GAAG,SAAV;AACH;AAED;;;;;;AAIA,MAAIG,kBAAkB,GAAGJ,YAAzB;AAEA;;;;;AAIA,MAAIK,aAAa,GAAG,CAAC,CAACN,SAAtB,CAxB+D,CA0B/D;;AACA,MAAI,OAAOK,kBAAP,KAA8B,UAAlC,EAA8C;AAC1CA,IAAAA,kBAAkB,GAAG,EAArB;AAEAC,IAAAA,aAAa,GAAG,CAACA,aAAjB;AACH;;AAED,MAAID,kBAAkB,KAAKE,SAAvB,IAAoCP,SAAS,KAAKO,SAAtD,EAAiE;AAC7DF,IAAAA,kBAAkB,GAAG,EAArB;AACAC,IAAAA,aAAa,GAAG,IAAhB;AACH;;AAGFE,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,GAAC,IAAR,GAAaH,QAAzB;AACC,QAAMW,IAAI,GAAGC,OAAO,CAACT,OAAD,CAAP,CAAiBH,QAAjB,CAAb;;AAGA,MAAIO,aAAJ,EAAmB;AACfM,IAAAA,MAAM,CAACP,kBAAD,CAAN,CAA2BQ,GAA3B,CAA+BC,IAA/B,CAAoCJ,IAApC;AACH,GAFD,MAEO;AACHE,IAAAA,MAAM,CAACP,kBAAD,CAAN,CAA2BS,IAA3B,CAAgCJ,IAAhC;AACH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given elements text is the same as the given text\n * @param  {String}   elementType   Element type (element or button)\n * @param  {String}   selector       Element selector\n * @param  {String}   falseCase     Whether to check if the content equals the\n *                                  given text or not\n * @param  {String}   expectedText  The text to validate against\n */\nexport default (elementType, selector, falseCase, expectedText) => {\n    /**\n     * The command to execute on the browser object\n     * @type {String}\n     */\n    let command = 'getValue';\n\n    if (\n        elementType === 'button'\n        || $(selector).getAttribute('value') === null\n    ) {\n        command = 'getText';\n    }\n\n    /**\n     * The expected text to validate against\n     * @type {String}\n     */\n    let parsedExpectedText = expectedText;\n\n    /**\n     * Whether to check if the content equals the given text or not\n     * @type {Boolean}\n     */\n    let boolFalseCase = !!falseCase;\n\n    // Check for empty element\n    if (typeof parsedExpectedText === 'function') {\n        parsedExpectedText = '';\n\n        boolFalseCase = !boolFalseCase;\n    }\n\n    if (parsedExpectedText === undefined && falseCase === undefined) {\n        parsedExpectedText = '';\n        boolFalseCase = true;\n    }\n\n\n   console.log(command+\"--\"+selector);\n    const text = browser[command](selector);\n    \n    \n    if (boolFalseCase) {\n        expect(parsedExpectedText).not.toBe(text);\n    } else {\n        expect(parsedExpectedText).toBe(text);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkModal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if a modal was opened\n * @param  {String}   modalType  The type of modal that is expected (alertbox,\n *                               confirmbox or prompt)\n * @param  {String}   falseState Whether to check if the modal was opened or not\n */\nvar _default = (modalType, falseState) => {\n  /**\n   * The text of the prompt\n   * @type {String}\n   */\n  let promptText = '';\n\n  try {\n    promptText = browser.getAlertText();\n\n    if (falseState) {\n      expect(promptText).not.toEqual(null, `A ${modalType} was opened when it shouldn't`);\n    }\n  } catch (e) {\n    if (!falseState) {\n      expect(promptText).toEqual(null, `A ${modalType} was not opened when it should have been`);\n    }\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrTW9kYWwuanMiXSwibmFtZXMiOlsibW9kYWxUeXBlIiwiZmFsc2VTdGF0ZSIsInByb21wdFRleHQiLCJicm93c2VyIiwiZ2V0QWxlcnRUZXh0IiwiZXhwZWN0Iiwibm90IiwidG9FcXVhbCIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBTWUsQ0FBQ0EsU0FBRCxFQUFZQyxVQUFaLEtBQTJCO0FBQ3RDOzs7O0FBSUEsTUFBSUMsVUFBVSxHQUFHLEVBQWpCOztBQUVBLE1BQUk7QUFDQUEsSUFBQUEsVUFBVSxHQUFHQyxPQUFPLENBQUNDLFlBQVIsRUFBYjs7QUFFQSxRQUFJSCxVQUFKLEVBQWdCO0FBQ1pJLE1BQUFBLE1BQU0sQ0FBQ0gsVUFBRCxDQUFOLENBQW1CSSxHQUFuQixDQUF1QkMsT0FBdkIsQ0FDSSxJQURKLEVBRUssS0FBSVAsU0FBVSwrQkFGbkI7QUFJSDtBQUNKLEdBVEQsQ0FTRSxPQUFPUSxDQUFQLEVBQVU7QUFDUixRQUFJLENBQUNQLFVBQUwsRUFBaUI7QUFDYkksTUFBQUEsTUFBTSxDQUFDSCxVQUFELENBQU4sQ0FBbUJLLE9BQW5CLENBQ0ksSUFESixFQUVLLEtBQUlQLFNBQVUsMENBRm5CO0FBSUg7QUFDSjtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgYSBtb2RhbCB3YXMgb3BlbmVkXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgbW9kYWxUeXBlICBUaGUgdHlwZSBvZiBtb2RhbCB0aGF0IGlzIGV4cGVjdGVkIChhbGVydGJveCxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1ib3ggb3IgcHJvbXB0KVxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlU3RhdGUgV2hldGhlciB0byBjaGVjayBpZiB0aGUgbW9kYWwgd2FzIG9wZW5lZCBvciBub3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG1vZGFsVHlwZSwgZmFsc2VTdGF0ZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IG9mIHRoZSBwcm9tcHRcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGxldCBwcm9tcHRUZXh0ID0gJyc7XG5cbiAgICB0cnkge1xuICAgICAgICBwcm9tcHRUZXh0ID0gYnJvd3Nlci5nZXRBbGVydFRleHQoKTtcblxuICAgICAgICBpZiAoZmFsc2VTdGF0ZSkge1xuICAgICAgICAgICAgZXhwZWN0KHByb21wdFRleHQpLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgYEEgJHttb2RhbFR5cGV9IHdhcyBvcGVuZWQgd2hlbiBpdCBzaG91bGRuJ3RgXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoIWZhbHNlU3RhdGUpIHtcbiAgICAgICAgICAgIGV4cGVjdChwcm9tcHRUZXh0KS50b0VxdWFsKFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgYEEgJHttb2RhbFR5cGV9IHdhcyBub3Qgb3BlbmVkIHdoZW4gaXQgc2hvdWxkIGhhdmUgYmVlbmBcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkModal.js"
      ],
      "names": [
        "modalType",
        "falseState",
        "promptText",
        "browser",
        "getAlertText",
        "expect",
        "not",
        "toEqual",
        "e"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,UAAZ,KAA2B;AACtC;;;;AAIA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAI;AACAA,IAAAA,UAAU,GAAGC,OAAO,CAACC,YAAR,EAAb;;AAEA,QAAIH,UAAJ,EAAgB;AACZI,MAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBI,GAAnB,CAAuBC,OAAvB,CACI,IADJ,EAEK,KAAIP,SAAU,+BAFnB;AAIH;AACJ,GATD,CASE,OAAOQ,CAAP,EAAU;AACR,QAAI,CAACP,UAAL,EAAiB;AACbI,MAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBK,OAAnB,CACI,IADJ,EAEK,KAAIP,SAAU,0CAFnB;AAIH;AACJ;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if a modal was opened\n * @param  {String}   modalType  The type of modal that is expected (alertbox,\n *                               confirmbox or prompt)\n * @param  {String}   falseState Whether to check if the modal was opened or not\n */\nexport default (modalType, falseState) => {\n    /**\n     * The text of the prompt\n     * @type {String}\n     */\n    let promptText = '';\n\n    try {\n        promptText = browser.getAlertText();\n\n        if (falseState) {\n            expect(promptText).not.toEqual(\n                null,\n                `A ${modalType} was opened when it shouldn't`\n            );\n        }\n    } catch (e) {\n        if (!falseState) {\n            expect(promptText).toEqual(\n                null,\n                `A ${modalType} was not opened when it should have been`\n            );\n        }\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkOffset.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkOffset.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkOffset.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkOffset.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkOffset.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the offset of the given element\n * @param  {String}   selector              Element selector\n * @param  {String}   falseCase         Whether to check if the offset matches\n *                                      or not\n * @param  {String}   expectedPosition  The position to check against\n * @param  {String}   axis              The axis to check on (x or y)\n */\nvar _default = (selector, falseCase, expectedPosition, axis) => {\n  /**\n   * Get the location of the element on the given axis\n   * @type {[type]}\n   */\n  const location = $(selector).getLocation(axis);\n  /**\n   * Parsed expected position\n   * @type {Int}\n   */\n\n  const intExpectedPosition = parseFloat(expectedPosition);\n\n  if (falseCase) {\n    expect(location).not.toEqual(intExpectedPosition, `Element \"${selector}\" should not be positioned at ` + `${intExpectedPosition}px on the ${axis} axis`);\n  } else {\n    expect(location).toEqual(intExpectedPosition, `Element \"${selector}\" should be positioned at ` + `${intExpectedPosition}px on the ${axis} axis, but was found ` + `at ${location}px`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrT2Zmc2V0LmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRQb3NpdGlvbiIsImF4aXMiLCJsb2NhdGlvbiIsIiQiLCJnZXRMb2NhdGlvbiIsImludEV4cGVjdGVkUG9zaXRpb24iLCJwYXJzZUZsb2F0IiwiZXhwZWN0Iiwibm90IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztlQVFlLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxFQUFzQkMsZ0JBQXRCLEVBQXdDQyxJQUF4QyxLQUFpRDtBQUM1RDs7OztBQUlBLFFBQU1DLFFBQVEsR0FBR0MsQ0FBQyxDQUFDTCxRQUFELENBQUQsQ0FBWU0sV0FBWixDQUF3QkgsSUFBeEIsQ0FBakI7QUFFQTs7Ozs7QUFJQSxRQUFNSSxtQkFBbUIsR0FBR0MsVUFBVSxDQUFDTixnQkFBRCxDQUF0Qzs7QUFFQSxNQUFJRCxTQUFKLEVBQWU7QUFDWFEsSUFBQUEsTUFBTSxDQUFDTCxRQUFELENBQU4sQ0FBaUJNLEdBQWpCLENBQXFCQyxPQUFyQixDQUNJSixtQkFESixFQUVLLFlBQVdQLFFBQVMsZ0NBQXJCLEdBQ0csR0FBRU8sbUJBQW9CLGFBQVlKLElBQUssT0FIOUM7QUFLSCxHQU5ELE1BTU87QUFDSE0sSUFBQUEsTUFBTSxDQUFDTCxRQUFELENBQU4sQ0FBaUJPLE9BQWpCLENBQ0lKLG1CQURKLEVBRUssWUFBV1AsUUFBUyw0QkFBckIsR0FDRyxHQUFFTyxtQkFBb0IsYUFBWUosSUFBSyx1QkFEMUMsR0FFRyxNQUFLQyxRQUFTLElBSnJCO0FBTUg7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIHRoZSBvZmZzZXQgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICAgICAgICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSAgICAgICAgIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIG9mZnNldCBtYXRjaGVzXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3Igbm90XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZXhwZWN0ZWRQb3NpdGlvbiAgVGhlIHBvc2l0aW9uIHRvIGNoZWNrIGFnYWluc3RcbiAqIEBwYXJhbSAge1N0cmluZ30gICBheGlzICAgICAgICAgICAgICBUaGUgYXhpcyB0byBjaGVjayBvbiAoeCBvciB5KVxuICovXG5leHBvcnQgZGVmYXVsdCAoc2VsZWN0b3IsIGZhbHNlQ2FzZSwgZXhwZWN0ZWRQb3NpdGlvbiwgYXhpcykgPT4ge1xuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbG9jYXRpb24gb2YgdGhlIGVsZW1lbnQgb24gdGhlIGdpdmVuIGF4aXNcbiAgICAgKiBAdHlwZSB7W3R5cGVdfVxuICAgICAqL1xuICAgIGNvbnN0IGxvY2F0aW9uID0gJChzZWxlY3RvcikuZ2V0TG9jYXRpb24oYXhpcyk7XG5cbiAgICAvKipcbiAgICAgKiBQYXJzZWQgZXhwZWN0ZWQgcG9zaXRpb25cbiAgICAgKiBAdHlwZSB7SW50fVxuICAgICAqL1xuICAgIGNvbnN0IGludEV4cGVjdGVkUG9zaXRpb24gPSBwYXJzZUZsb2F0KGV4cGVjdGVkUG9zaXRpb24pO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QobG9jYXRpb24pLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgaW50RXhwZWN0ZWRQb3NpdGlvbixcbiAgICAgICAgICAgIGBFbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiBzaG91bGQgbm90IGJlIHBvc2l0aW9uZWQgYXQgYFxuICAgICAgICAgICAgKyBgJHtpbnRFeHBlY3RlZFBvc2l0aW9ufXB4IG9uIHRoZSAke2F4aXN9IGF4aXNgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGxvY2F0aW9uKS50b0VxdWFsKFxuICAgICAgICAgICAgaW50RXhwZWN0ZWRQb3NpdGlvbixcbiAgICAgICAgICAgIGBFbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiBzaG91bGQgYmUgcG9zaXRpb25lZCBhdCBgXG4gICAgICAgICAgICArIGAke2ludEV4cGVjdGVkUG9zaXRpb259cHggb24gdGhlICR7YXhpc30gYXhpcywgYnV0IHdhcyBmb3VuZCBgXG4gICAgICAgICAgICArIGBhdCAke2xvY2F0aW9ufXB4YFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkOffset.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "expectedPosition",
        "axis",
        "location",
        "$",
        "getLocation",
        "intExpectedPosition",
        "parseFloat",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,QAAD,EAAWC,SAAX,EAAsBC,gBAAtB,EAAwCC,IAAxC,KAAiD;AAC5D;;;;AAIA,QAAMC,QAAQ,GAAGC,CAAC,CAACL,QAAD,CAAD,CAAYM,WAAZ,CAAwBH,IAAxB,CAAjB;AAEA;;;;;AAIA,QAAMI,mBAAmB,GAAGC,UAAU,CAACN,gBAAD,CAAtC;;AAEA,MAAID,SAAJ,EAAe;AACXQ,IAAAA,MAAM,CAACL,QAAD,CAAN,CAAiBM,GAAjB,CAAqBC,OAArB,CACIJ,mBADJ,EAEK,YAAWP,QAAS,gCAArB,GACG,GAAEO,mBAAoB,aAAYJ,IAAK,OAH9C;AAKH,GAND,MAMO;AACHM,IAAAA,MAAM,CAACL,QAAD,CAAN,CAAiBO,OAAjB,CACIJ,mBADJ,EAEK,YAAWP,QAAS,4BAArB,GACG,GAAEO,mBAAoB,aAAYJ,IAAK,uBAD1C,GAEG,MAAKC,QAAS,IAJrB;AAMH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the offset of the given element\n * @param  {String}   selector              Element selector\n * @param  {String}   falseCase         Whether to check if the offset matches\n *                                      or not\n * @param  {String}   expectedPosition  The position to check against\n * @param  {String}   axis              The axis to check on (x or y)\n */\nexport default (selector, falseCase, expectedPosition, axis) => {\n    /**\n     * Get the location of the element on the given axis\n     * @type {[type]}\n     */\n    const location = $(selector).getLocation(axis);\n\n    /**\n     * Parsed expected position\n     * @type {Int}\n     */\n    const intExpectedPosition = parseFloat(expectedPosition);\n\n    if (falseCase) {\n        expect(location).not.toEqual(\n            intExpectedPosition,\n            `Element \"${selector}\" should not be positioned at `\n            + `${intExpectedPosition}px on the ${axis} axis`\n        );\n    } else {\n        expect(location).toEqual(\n            intExpectedPosition,\n            `Element \"${selector}\" should be positioned at `\n            + `${intExpectedPosition}px on the ${axis} axis, but was found `\n            + `at ${location}px`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkProperty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkProperty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkProperty.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkProperty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkProperty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the given property of the given element\n * @param  {String}   isCSS         Whether to check for a CSS property or an\n *                                  attribute\n * @param  {String}   attrName      The name of the attribute to check\n * @param  {String}   selector          Element selector\n * @param  {String}   falseCase     Whether to check if the value of the\n *                                  attribute matches or not\n * @param  {String}   expectedValue The value to match against\n */\nvar _default = (isCSS, attrName, selector, falseCase, expectedValue) => {\n  /**\n   * The command to use for fetching the expected value\n   * @type {String}\n   */\n  const command = isCSS ? 'getCSSProperty' : 'getAttribute';\n  /**\n   * Te label to identify the attribute by\n   * @type {String}\n   */\n\n  const attrType = isCSS ? 'CSS attribute' : 'Attribute';\n  /**\n   * The actual attribute value\n   * @type {Mixed}\n   */\n\n  let attributeValue = $(selector)[command](attrName); // eslint-disable-next-line\n\n  expectedValue = isFinite(expectedValue) ? parseFloat(expectedValue) : expectedValue;\n  /**\n   * when getting something with a color or font-weight WebdriverIO returns a\n   * object but we want to assert against a string\n   */\n\n  if (attrName.match(/(color|font-weight)/)) {\n    attributeValue = attributeValue.value;\n  }\n\n  if (falseCase) {\n    expect(attributeValue).not.toEqual(expectedValue, `${attrType}: ${attrName} of element \"${selector}\" should ` + `not contain \"${attributeValue}\"`);\n  } else {\n    expect(attributeValue).toEqual(expectedValue, `${attrType}: ${attrName} of element \"${selector}\" should ` + `contain \"${attributeValue}\", but \"${expectedValue}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrUHJvcGVydHkuanMiXSwibmFtZXMiOlsiaXNDU1MiLCJhdHRyTmFtZSIsInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRWYWx1ZSIsImNvbW1hbmQiLCJhdHRyVHlwZSIsImF0dHJpYnV0ZVZhbHVlIiwiJCIsImlzRmluaXRlIiwicGFyc2VGbG9hdCIsIm1hdGNoIiwidmFsdWUiLCJleHBlY3QiLCJub3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7ZUFVZSxDQUFDQSxLQUFELEVBQVFDLFFBQVIsRUFBa0JDLFFBQWxCLEVBQTRCQyxTQUE1QixFQUF1Q0MsYUFBdkMsS0FBeUQ7QUFDcEU7Ozs7QUFJQSxRQUFNQyxPQUFPLEdBQUdMLEtBQUssR0FBRyxnQkFBSCxHQUFzQixjQUEzQztBQUVBOzs7OztBQUlBLFFBQU1NLFFBQVEsR0FBSU4sS0FBSyxHQUFHLGVBQUgsR0FBcUIsV0FBNUM7QUFFQTs7Ozs7QUFJQSxNQUFJTyxjQUFjLEdBQUdDLENBQUMsQ0FBQ04sUUFBRCxDQUFELENBQVlHLE9BQVosRUFBcUJKLFFBQXJCLENBQXJCLENBakJvRSxDQW1CcEU7O0FBQ0FHLEVBQUFBLGFBQWEsR0FBR0ssUUFBUSxDQUFDTCxhQUFELENBQVIsR0FDWk0sVUFBVSxDQUFDTixhQUFELENBREUsR0FFVkEsYUFGTjtBQUlBOzs7OztBQUlBLE1BQUlILFFBQVEsQ0FBQ1UsS0FBVCxDQUFlLHFCQUFmLENBQUosRUFBMkM7QUFDdkNKLElBQUFBLGNBQWMsR0FBR0EsY0FBYyxDQUFDSyxLQUFoQztBQUNIOztBQUNELE1BQUlULFNBQUosRUFBZTtBQUNYVSxJQUFBQSxNQUFNLENBQUNOLGNBQUQsQ0FBTixDQUF1Qk8sR0FBdkIsQ0FBMkJDLE9BQTNCLENBQ0lYLGFBREosRUFFSyxHQUFFRSxRQUFTLEtBQUlMLFFBQVMsZ0JBQWVDLFFBQVMsV0FBakQsR0FDRyxnQkFBZUssY0FBZSxHQUhyQztBQUtILEdBTkQsTUFNTztBQUNITSxJQUFBQSxNQUFNLENBQUNOLGNBQUQsQ0FBTixDQUF1QlEsT0FBdkIsQ0FDSVgsYUFESixFQUVLLEdBQUVFLFFBQVMsS0FBSUwsUUFBUyxnQkFBZUMsUUFBUyxXQUFqRCxHQUNHLFlBQVdLLGNBQWUsV0FBVUgsYUFBYyxHQUh6RDtBQUtIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayB0aGUgZ2l2ZW4gcHJvcGVydHkgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBpc0NTUyAgICAgICAgIFdoZXRoZXIgdG8gY2hlY2sgZm9yIGEgQ1NTIHByb3BlcnR5IG9yIGFuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVcbiAqIEBwYXJhbSAge1N0cmluZ30gICBhdHRyTmFtZSAgICAgIFRoZSBuYW1lIG9mIHRoZSBhdHRyaWJ1dGUgdG8gY2hlY2tcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICAgICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlICAgICBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSB2YWx1ZSBvZiB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZSBtYXRjaGVzIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKGlzQ1NTLCBhdHRyTmFtZSwgc2VsZWN0b3IsIGZhbHNlQ2FzZSwgZXhwZWN0ZWRWYWx1ZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21tYW5kIHRvIHVzZSBmb3IgZmV0Y2hpbmcgdGhlIGV4cGVjdGVkIHZhbHVlXG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBjb21tYW5kID0gaXNDU1MgPyAnZ2V0Q1NTUHJvcGVydHknIDogJ2dldEF0dHJpYnV0ZSc7XG5cbiAgICAvKipcbiAgICAgKiBUZSBsYWJlbCB0byBpZGVudGlmeSB0aGUgYXR0cmlidXRlIGJ5XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBhdHRyVHlwZSA9IChpc0NTUyA/ICdDU1MgYXR0cmlidXRlJyA6ICdBdHRyaWJ1dGUnKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBhY3R1YWwgYXR0cmlidXRlIHZhbHVlXG4gICAgICogQHR5cGUge01peGVkfVxuICAgICAqL1xuICAgIGxldCBhdHRyaWJ1dGVWYWx1ZSA9ICQoc2VsZWN0b3IpW2NvbW1hbmRdKGF0dHJOYW1lKTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgIGV4cGVjdGVkVmFsdWUgPSBpc0Zpbml0ZShleHBlY3RlZFZhbHVlKSA/XG4gICAgICAgIHBhcnNlRmxvYXQoZXhwZWN0ZWRWYWx1ZSlcbiAgICAgICAgOiBleHBlY3RlZFZhbHVlO1xuXG4gICAgLyoqXG4gICAgICogd2hlbiBnZXR0aW5nIHNvbWV0aGluZyB3aXRoIGEgY29sb3Igb3IgZm9udC13ZWlnaHQgV2ViZHJpdmVySU8gcmV0dXJucyBhXG4gICAgICogb2JqZWN0IGJ1dCB3ZSB3YW50IHRvIGFzc2VydCBhZ2FpbnN0IGEgc3RyaW5nXG4gICAgICovXG4gICAgaWYgKGF0dHJOYW1lLm1hdGNoKC8oY29sb3J8Zm9udC13ZWlnaHQpLykpIHtcbiAgICAgICAgYXR0cmlidXRlVmFsdWUgPSBhdHRyaWJ1dGVWYWx1ZS52YWx1ZTtcbiAgICB9XG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QoYXR0cmlidXRlVmFsdWUpLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgZXhwZWN0ZWRWYWx1ZSxcbiAgICAgICAgICAgIGAke2F0dHJUeXBlfTogJHthdHRyTmFtZX0gb2YgZWxlbWVudCBcIiR7c2VsZWN0b3J9XCIgc2hvdWxkIGBcbiAgICAgICAgICAgICsgYG5vdCBjb250YWluIFwiJHthdHRyaWJ1dGVWYWx1ZX1cImBcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoYXR0cmlidXRlVmFsdWUpLnRvRXF1YWwoXG4gICAgICAgICAgICBleHBlY3RlZFZhbHVlLFxuICAgICAgICAgICAgYCR7YXR0clR5cGV9OiAke2F0dHJOYW1lfSBvZiBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiBzaG91bGQgYFxuICAgICAgICAgICAgKyBgY29udGFpbiBcIiR7YXR0cmlidXRlVmFsdWV9XCIsIGJ1dCBcIiR7ZXhwZWN0ZWRWYWx1ZX1cImBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkProperty.js"
      ],
      "names": [
        "isCSS",
        "attrName",
        "selector",
        "falseCase",
        "expectedValue",
        "command",
        "attrType",
        "attributeValue",
        "$",
        "isFinite",
        "parseFloat",
        "match",
        "value",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;eAUe,CAACA,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,aAAvC,KAAyD;AACpE;;;;AAIA,QAAMC,OAAO,GAAGL,KAAK,GAAG,gBAAH,GAAsB,cAA3C;AAEA;;;;;AAIA,QAAMM,QAAQ,GAAIN,KAAK,GAAG,eAAH,GAAqB,WAA5C;AAEA;;;;;AAIA,MAAIO,cAAc,GAAGC,CAAC,CAACN,QAAD,CAAD,CAAYG,OAAZ,EAAqBJ,QAArB,CAArB,CAjBoE,CAmBpE;;AACAG,EAAAA,aAAa,GAAGK,QAAQ,CAACL,aAAD,CAAR,GACZM,UAAU,CAACN,aAAD,CADE,GAEVA,aAFN;AAIA;;;;;AAIA,MAAIH,QAAQ,CAACU,KAAT,CAAe,qBAAf,CAAJ,EAA2C;AACvCJ,IAAAA,cAAc,GAAGA,cAAc,CAACK,KAAhC;AACH;;AACD,MAAIT,SAAJ,EAAe;AACXU,IAAAA,MAAM,CAACN,cAAD,CAAN,CAAuBO,GAAvB,CAA2BC,OAA3B,CACIX,aADJ,EAEK,GAAEE,QAAS,KAAIL,QAAS,gBAAeC,QAAS,WAAjD,GACG,gBAAeK,cAAe,GAHrC;AAKH,GAND,MAMO;AACHM,IAAAA,MAAM,CAACN,cAAD,CAAN,CAAuBQ,OAAvB,CACIX,aADJ,EAEK,GAAEE,QAAS,KAAIL,QAAS,gBAAeC,QAAS,WAAjD,GACG,YAAWK,cAAe,WAAUH,aAAc,GAHzD;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the given property of the given element\n * @param  {String}   isCSS         Whether to check for a CSS property or an\n *                                  attribute\n * @param  {String}   attrName      The name of the attribute to check\n * @param  {String}   selector          Element selector\n * @param  {String}   falseCase     Whether to check if the value of the\n *                                  attribute matches or not\n * @param  {String}   expectedValue The value to match against\n */\nexport default (isCSS, attrName, selector, falseCase, expectedValue) => {\n    /**\n     * The command to use for fetching the expected value\n     * @type {String}\n     */\n    const command = isCSS ? 'getCSSProperty' : 'getAttribute';\n\n    /**\n     * Te label to identify the attribute by\n     * @type {String}\n     */\n    const attrType = (isCSS ? 'CSS attribute' : 'Attribute');\n\n    /**\n     * The actual attribute value\n     * @type {Mixed}\n     */\n    let attributeValue = $(selector)[command](attrName);\n\n    // eslint-disable-next-line\n    expectedValue = isFinite(expectedValue) ?\n        parseFloat(expectedValue)\n        : expectedValue;\n\n    /**\n     * when getting something with a color or font-weight WebdriverIO returns a\n     * object but we want to assert against a string\n     */\n    if (attrName.match(/(color|font-weight)/)) {\n        attributeValue = attributeValue.value;\n    }\n    if (falseCase) {\n        expect(attributeValue).not.toEqual(\n            expectedValue,\n            `${attrType}: ${attrName} of element \"${selector}\" should `\n            + `not contain \"${attributeValue}\"`\n        );\n    } else {\n        expect(attributeValue).toEqual(\n            expectedValue,\n            `${attrType}: ${attrName} of element \"${selector}\" should `\n            + `contain \"${attributeValue}\", but \"${expectedValue}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkSelected.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkSelected.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkSelected.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkSelected.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkSelected.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the selected state of the given element\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the element is elected or\n *                              not\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * The selected state\n   * @type {Boolean}\n   */\n  const isSelected = $(selector).isSelected();\n\n  if (falseCase) {\n    expect(isSelected).not.toEqual(true, `\"${selector}\" should not be selected`);\n  } else {\n    expect(isSelected).toEqual(true, `\"${selector}\" should be selected`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrU2VsZWN0ZWQuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJpc1NlbGVjdGVkIiwiJCIsImV4cGVjdCIsIm5vdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBTWUsQ0FBQ0EsUUFBRCxFQUFXQyxTQUFYLEtBQXlCO0FBQ3BDOzs7O0FBSUEsUUFBTUMsVUFBVSxHQUFHQyxDQUFDLENBQUNILFFBQUQsQ0FBRCxDQUFZRSxVQUFaLEVBQW5COztBQUVBLE1BQUlELFNBQUosRUFBZTtBQUNYRyxJQUFBQSxNQUFNLENBQUNGLFVBQUQsQ0FBTixDQUNLRyxHQURMLENBQ1NDLE9BRFQsQ0FDaUIsSUFEakIsRUFDd0IsSUFBR04sUUFBUywwQkFEcEM7QUFFSCxHQUhELE1BR087QUFDSEksSUFBQUEsTUFBTSxDQUFDRixVQUFELENBQU4sQ0FDS0ksT0FETCxDQUNhLElBRGIsRUFDb0IsSUFBR04sUUFBUyxzQkFEaEM7QUFFSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgdGhlIHNlbGVjdGVkIHN0YXRlIG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIGVsZW1lbnQgaXMgZWxlY3RlZCBvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHNlbGVjdG9yLCBmYWxzZUNhc2UpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgc2VsZWN0ZWQgc3RhdGVcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBjb25zdCBpc1NlbGVjdGVkID0gJChzZWxlY3RvcikuaXNTZWxlY3RlZCgpO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QoaXNTZWxlY3RlZClcbiAgICAgICAgICAgIC5ub3QudG9FcXVhbCh0cnVlLCBgXCIke3NlbGVjdG9yfVwiIHNob3VsZCBub3QgYmUgc2VsZWN0ZWRgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoaXNTZWxlY3RlZClcbiAgICAgICAgICAgIC50b0VxdWFsKHRydWUsIGBcIiR7c2VsZWN0b3J9XCIgc2hvdWxkIGJlIHNlbGVjdGVkYCk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkSelected.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "isSelected",
        "$",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,UAAU,GAAGC,CAAC,CAACH,QAAD,CAAD,CAAYE,UAAZ,EAAnB;;AAEA,MAAID,SAAJ,EAAe;AACXG,IAAAA,MAAM,CAACF,UAAD,CAAN,CACKG,GADL,CACSC,OADT,CACiB,IADjB,EACwB,IAAGN,QAAS,0BADpC;AAEH,GAHD,MAGO;AACHI,IAAAA,MAAM,CAACF,UAAD,CAAN,CACKI,OADL,CACa,IADb,EACoB,IAAGN,QAAS,sBADhC;AAEH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the selected state of the given element\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the element is elected or\n *                              not\n */\nexport default (selector, falseCase) => {\n    /**\n     * The selected state\n     * @type {Boolean}\n     */\n    const isSelected = $(selector).isSelected();\n\n    if (falseCase) {\n        expect(isSelected)\n            .not.toEqual(true, `\"${selector}\" should not be selected`);\n    } else {\n        expect(isSelected)\n            .toEqual(true, `\"${selector}\" should be selected`);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitle.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitle.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitle.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitle.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkTitle.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the title of the current browser window\n * @param  {Type}     falseCase     Whether to check if the title matches the\n *                                  expected value or not\n * @param  {Type}     expectedTitle The expected title\n */\nvar _default = (falseCase, expectedTitle) => {\n  /**\n   * The title of the current browser window\n   * @type {String}\n   */\n  const title = browser.getTitle();\n\n  if (falseCase) {\n    expect(title).not.toEqual(expectedTitle, `Expected title not to be \"${expectedTitle}\"`);\n  } else {\n    expect(title).toEqual(expectedTitle, `Expected title to be \"${expectedTitle}\" but found \"${title}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrVGl0bGUuanMiXSwibmFtZXMiOlsiZmFsc2VDYXNlIiwiZXhwZWN0ZWRUaXRsZSIsInRpdGxlIiwiYnJvd3NlciIsImdldFRpdGxlIiwiZXhwZWN0Iiwibm90IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7ZUFNZSxDQUFDQSxTQUFELEVBQVlDLGFBQVosS0FBOEI7QUFDekM7Ozs7QUFJQSxRQUFNQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQ0MsUUFBUixFQUFkOztBQUVBLE1BQUlKLFNBQUosRUFBZTtBQUNYSyxJQUFBQSxNQUFNLENBQUNILEtBQUQsQ0FBTixDQUFjSSxHQUFkLENBQWtCQyxPQUFsQixDQUNJTixhQURKLEVBRUssNkJBQTRCQSxhQUFjLEdBRi9DO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0gsS0FBRCxDQUFOLENBQWNLLE9BQWQsQ0FDSU4sYUFESixFQUVLLHlCQUF3QkEsYUFBYyxnQkFBZUMsS0FBTSxHQUZoRTtBQUlIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayB0aGUgdGl0bGUgb2YgdGhlIGN1cnJlbnQgYnJvd3NlciB3aW5kb3dcbiAqIEBwYXJhbSAge1R5cGV9ICAgICBmYWxzZUNhc2UgICAgIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIHRpdGxlIG1hdGNoZXMgdGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZCB2YWx1ZSBvciBub3RcbiAqIEBwYXJhbSAge1R5cGV9ICAgICBleHBlY3RlZFRpdGxlIFRoZSBleHBlY3RlZCB0aXRsZVxuICovXG5leHBvcnQgZGVmYXVsdCAoZmFsc2VDYXNlLCBleHBlY3RlZFRpdGxlKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIHRpdGxlIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCB0aXRsZSA9IGJyb3dzZXIuZ2V0VGl0bGUoKTtcblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KHRpdGxlKS5ub3QudG9FcXVhbChcbiAgICAgICAgICAgIGV4cGVjdGVkVGl0bGUsXG4gICAgICAgICAgICBgRXhwZWN0ZWQgdGl0bGUgbm90IHRvIGJlIFwiJHtleHBlY3RlZFRpdGxlfVwiYFxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdCh0aXRsZSkudG9FcXVhbChcbiAgICAgICAgICAgIGV4cGVjdGVkVGl0bGUsXG4gICAgICAgICAgICBgRXhwZWN0ZWQgdGl0bGUgdG8gYmUgXCIke2V4cGVjdGVkVGl0bGV9XCIgYnV0IGZvdW5kIFwiJHt0aXRsZX1cImBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkTitle.js"
      ],
      "names": [
        "falseCase",
        "expectedTitle",
        "title",
        "browser",
        "getTitle",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,aAAZ,KAA8B;AACzC;;;;AAIA,QAAMC,KAAK,GAAGC,OAAO,CAACC,QAAR,EAAd;;AAEA,MAAIJ,SAAJ,EAAe;AACXK,IAAAA,MAAM,CAACH,KAAD,CAAN,CAAcI,GAAd,CAAkBC,OAAlB,CACIN,aADJ,EAEK,6BAA4BA,aAAc,GAF/C;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACH,KAAD,CAAN,CAAcK,OAAd,CACIN,aADJ,EAEK,yBAAwBA,aAAc,gBAAeC,KAAM,GAFhE;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the title of the current browser window\n * @param  {Type}     falseCase     Whether to check if the title matches the\n *                                  expected value or not\n * @param  {Type}     expectedTitle The expected title\n */\nexport default (falseCase, expectedTitle) => {\n    /**\n     * The title of the current browser window\n     * @type {String}\n     */\n    const title = browser.getTitle();\n\n    if (falseCase) {\n        expect(title).not.toEqual(\n            expectedTitle,\n            `Expected title not to be \"${expectedTitle}\"`\n        );\n    } else {\n        expect(title).toEqual(\n            expectedTitle,\n            `Expected title to be \"${expectedTitle}\" but found \"${title}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURL.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURL.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURL.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURL.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkURL.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the URL of the given browser window\n * @param  {String}   falseCase   Whether to check if the URL matches the\n *                                expected value or not\n * @param  {String}   expectedUrl The expected URL to check against\n */\nvar _default = (falseCase, expectedUrl) => {\n  /**\n   * The current browser window's URL\n   * @type {String}\n   */\n  const currentUrl = browser.getUrl();\n\n  if (falseCase) {\n    expect(currentUrl).not.toEqual(expectedUrl, `expected url not to be \"${currentUrl}\"`);\n  } else {\n    expect(currentUrl).toEqual(expectedUrl, `expected url to be \"${expectedUrl}\" but found ` + `\"${currentUrl}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrVVJMLmpzIl0sIm5hbWVzIjpbImZhbHNlQ2FzZSIsImV4cGVjdGVkVXJsIiwiY3VycmVudFVybCIsImJyb3dzZXIiLCJnZXRVcmwiLCJleHBlY3QiLCJub3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFNBQUQsRUFBWUMsV0FBWixLQUE0QjtBQUN2Qzs7OztBQUlBLFFBQU1DLFVBQVUsR0FBR0MsT0FBTyxDQUFDQyxNQUFSLEVBQW5COztBQUVBLE1BQUlKLFNBQUosRUFBZTtBQUNYSyxJQUFBQSxNQUFNLENBQUNILFVBQUQsQ0FBTixDQUNLSSxHQURMLENBQ1NDLE9BRFQsQ0FDaUJOLFdBRGpCLEVBQytCLDJCQUEwQkMsVUFBVyxHQURwRTtBQUVILEdBSEQsTUFHTztBQUNIRyxJQUFBQSxNQUFNLENBQUNILFVBQUQsQ0FBTixDQUFtQkssT0FBbkIsQ0FDSU4sV0FESixFQUVLLHVCQUFzQkEsV0FBWSxjQUFuQyxHQUNHLElBQUdDLFVBQVcsR0FIckI7QUFLSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgdGhlIFVSTCBvZiB0aGUgZ2l2ZW4gYnJvd3NlciB3aW5kb3dcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgICBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBVUkwgbWF0Y2hlcyB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZCB2YWx1ZSBvciBub3RcbiAqIEBwYXJhbSAge1N0cmluZ30gICBleHBlY3RlZFVybCBUaGUgZXhwZWN0ZWQgVVJMIHRvIGNoZWNrIGFnYWluc3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKGZhbHNlQ2FzZSwgZXhwZWN0ZWRVcmwpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBicm93c2VyIHdpbmRvdydzIFVSTFxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG4gICAgY29uc3QgY3VycmVudFVybCA9IGJyb3dzZXIuZ2V0VXJsKCk7XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChjdXJyZW50VXJsKVxuICAgICAgICAgICAgLm5vdC50b0VxdWFsKGV4cGVjdGVkVXJsLCBgZXhwZWN0ZWQgdXJsIG5vdCB0byBiZSBcIiR7Y3VycmVudFVybH1cImApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdChjdXJyZW50VXJsKS50b0VxdWFsKFxuICAgICAgICAgICAgZXhwZWN0ZWRVcmwsXG4gICAgICAgICAgICBgZXhwZWN0ZWQgdXJsIHRvIGJlIFwiJHtleHBlY3RlZFVybH1cIiBidXQgZm91bmQgYFxuICAgICAgICAgICAgKyBgXCIke2N1cnJlbnRVcmx9XCJgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkURL.js"
      ],
      "names": [
        "falseCase",
        "expectedUrl",
        "currentUrl",
        "browser",
        "getUrl",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,WAAZ,KAA4B;AACvC;;;;AAIA,QAAMC,UAAU,GAAGC,OAAO,CAACC,MAAR,EAAnB;;AAEA,MAAIJ,SAAJ,EAAe;AACXK,IAAAA,MAAM,CAACH,UAAD,CAAN,CACKI,GADL,CACSC,OADT,CACiBN,WADjB,EAC+B,2BAA0BC,UAAW,GADpE;AAEH,GAHD,MAGO;AACHG,IAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBK,OAAnB,CACIN,WADJ,EAEK,uBAAsBA,WAAY,cAAnC,GACG,IAAGC,UAAW,GAHrB;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the URL of the given browser window\n * @param  {String}   falseCase   Whether to check if the URL matches the\n *                                expected value or not\n * @param  {String}   expectedUrl The expected URL to check against\n */\nexport default (falseCase, expectedUrl) => {\n    /**\n     * The current browser window's URL\n     * @type {String}\n     */\n    const currentUrl = browser.getUrl();\n\n    if (falseCase) {\n        expect(currentUrl)\n            .not.toEqual(expectedUrl, `expected url not to be \"${currentUrl}\"`);\n    } else {\n        expect(currentUrl).toEqual(\n            expectedUrl,\n            `expected url to be \"${expectedUrl}\" but found `\n            + `\"${currentUrl}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeAllButFirstTab.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeAllButFirstTab.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeAllButFirstTab.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeAllButFirstTab.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "closeAllButFirstTab.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Close all but the first tab\n * @param  {String}   obsolete Type of object to close (window or tab)\n */\n\n/* eslint-disable no-unused-vars */\nvar _default = obsolete => {\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * Get all the window handles\n   * @type {Object}\n   */\n  const windowHandles = browser.getWindowHandles(); // Close all tabs but the first one\n\n  windowHandles.reverse();\n  windowHandles.forEach((handle, index) => {\n    browser.switchToWindow(handle);\n\n    if (index < windowHandles.length - 1) {\n      browser.closeWindow();\n    }\n  });\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb3NlQWxsQnV0Rmlyc3RUYWIuanMiXSwibmFtZXMiOlsib2Jzb2xldGUiLCJ3aW5kb3dIYW5kbGVzIiwiYnJvd3NlciIsImdldFdpbmRvd0hhbmRsZXMiLCJyZXZlcnNlIiwiZm9yRWFjaCIsImhhbmRsZSIsImluZGV4Iiwic3dpdGNoVG9XaW5kb3ciLCJsZW5ndGgiLCJjbG9zZVdpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztBQUlBO2VBQ2dCQSxRQUFELElBQWM7QUFDN0I7O0FBQ0k7Ozs7QUFJQSxRQUFNQyxhQUFhLEdBQUdDLE9BQU8sQ0FBQ0MsZ0JBQVIsRUFBdEIsQ0FOeUIsQ0FRekI7O0FBQ0FGLEVBQUFBLGFBQWEsQ0FBQ0csT0FBZDtBQUNBSCxFQUFBQSxhQUFhLENBQUNJLE9BQWQsQ0FBc0IsQ0FBQ0MsTUFBRCxFQUFTQyxLQUFULEtBQW1CO0FBQ3JDTCxJQUFBQSxPQUFPLENBQUNNLGNBQVIsQ0FBdUJGLE1BQXZCOztBQUNBLFFBQUlDLEtBQUssR0FBR04sYUFBYSxDQUFDUSxNQUFkLEdBQXVCLENBQW5DLEVBQXNDO0FBQ2xDUCxNQUFBQSxPQUFPLENBQUNRLFdBQVI7QUFDSDtBQUNKLEdBTEQ7QUFNSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbG9zZSBhbGwgYnV0IHRoZSBmaXJzdCB0YWJcbiAqIEBwYXJhbSAge1N0cmluZ30gICBvYnNvbGV0ZSBUeXBlIG9mIG9iamVjdCB0byBjbG9zZSAod2luZG93IG9yIHRhYilcbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbmV4cG9ydCBkZWZhdWx0IChvYnNvbGV0ZSkgPT4ge1xuLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtdmFycyAqL1xuICAgIC8qKlxuICAgICAqIEdldCBhbGwgdGhlIHdpbmRvdyBoYW5kbGVzXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBjb25zdCB3aW5kb3dIYW5kbGVzID0gYnJvd3Nlci5nZXRXaW5kb3dIYW5kbGVzKCk7XG5cbiAgICAvLyBDbG9zZSBhbGwgdGFicyBidXQgdGhlIGZpcnN0IG9uZVxuICAgIHdpbmRvd0hhbmRsZXMucmV2ZXJzZSgpO1xuICAgIHdpbmRvd0hhbmRsZXMuZm9yRWFjaCgoaGFuZGxlLCBpbmRleCkgPT4ge1xuICAgICAgICBicm93c2VyLnN3aXRjaFRvV2luZG93KGhhbmRsZSk7XG4gICAgICAgIGlmIChpbmRleCA8IHdpbmRvd0hhbmRsZXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgYnJvd3Nlci5jbG9zZVdpbmRvdygpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "closeAllButFirstTab.js"
      ],
      "names": [
        "obsolete",
        "windowHandles",
        "browser",
        "getWindowHandles",
        "reverse",
        "forEach",
        "handle",
        "index",
        "switchToWindow",
        "length",
        "closeWindow"
      ],
      "mappings": ";;;;;;;AAAA;;;;;AAIA;eACgBA,QAAD,IAAc;AAC7B;;AACI;;;;AAIA,QAAMC,aAAa,GAAGC,OAAO,CAACC,gBAAR,EAAtB,CANyB,CAQzB;;AACAF,EAAAA,aAAa,CAACG,OAAd;AACAH,EAAAA,aAAa,CAACI,OAAd,CAAsB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCL,IAAAA,OAAO,CAACM,cAAR,CAAuBF,MAAvB;;AACA,QAAIC,KAAK,GAAGN,aAAa,CAACQ,MAAd,GAAuB,CAAnC,EAAsC;AAClCP,MAAAA,OAAO,CAACQ,WAAR;AACH;AACJ,GALD;AAMH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Close all but the first tab\n * @param  {String}   obsolete Type of object to close (window or tab)\n */\n/* eslint-disable no-unused-vars */\nexport default (obsolete) => {\n/* eslint-enable no-unused-vars */\n    /**\n     * Get all the window handles\n     * @type {Object}\n     */\n    const windowHandles = browser.getWindowHandles();\n\n    // Close all tabs but the first one\n    windowHandles.reverse();\n    windowHandles.forEach((handle, index) => {\n        browser.switchToWindow(handle);\n        if (index < windowHandles.length - 1) {\n            browser.closeWindow();\n        }\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/compareText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/compareText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/compareText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/compareText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "compareText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Compare the contents of two elements with each other\n * @param  {String}   selector1  Element selector for the first element\n * @param  {String}   falseCase Whether to check if the contents of both\n *                              elements match or not\n * @param  {String}   selector2  Element selector for the second element\n */\nvar _default = (selector1, falseCase, selector2) => {\n  /**\n   * The text of the first element\n   * @type {String}\n   */\n  const text1 = $(selector1).getText();\n  /**\n   * The text of the second element\n   * @type {String}\n   */\n\n  const text2 = $(selector2).getText();\n\n  if (falseCase) {\n    expect(text1).not.toEqual(text2, `Expected text not to be \"${text1}\"`);\n  } else {\n    expect(text1).toEqual(text2, `Expected text to be \"${text1}\" but found \"${text2}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhcmVUZXh0LmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yMSIsImZhbHNlQ2FzZSIsInNlbGVjdG9yMiIsInRleHQxIiwiJCIsImdldFRleHQiLCJ0ZXh0MiIsImV4cGVjdCIsIm5vdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7OztlQU9lLENBQUNBLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsU0FBdkIsS0FBcUM7QUFDaEQ7Ozs7QUFJQSxRQUFNQyxLQUFLLEdBQUdDLENBQUMsQ0FBQ0osU0FBRCxDQUFELENBQWFLLE9BQWIsRUFBZDtBQUVBOzs7OztBQUlBLFFBQU1DLEtBQUssR0FBR0YsQ0FBQyxDQUFDRixTQUFELENBQUQsQ0FBYUcsT0FBYixFQUFkOztBQUVBLE1BQUlKLFNBQUosRUFBZTtBQUNYTSxJQUFBQSxNQUFNLENBQUNKLEtBQUQsQ0FBTixDQUFjSyxHQUFkLENBQWtCQyxPQUFsQixDQUNJSCxLQURKLEVBRUssNEJBQTJCSCxLQUFNLEdBRnRDO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0osS0FBRCxDQUFOLENBQWNNLE9BQWQsQ0FDSUgsS0FESixFQUVLLHdCQUF1QkgsS0FBTSxnQkFBZUcsS0FBTSxHQUZ2RDtBQUlIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21wYXJlIHRoZSBjb250ZW50cyBvZiB0d28gZWxlbWVudHMgd2l0aCBlYWNoIG90aGVyXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IxICBFbGVtZW50IHNlbGVjdG9yIGZvciB0aGUgZmlyc3QgZWxlbWVudFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBjb250ZW50cyBvZiBib3RoXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzIG1hdGNoIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yMiAgRWxlbWVudCBzZWxlY3RvciBmb3IgdGhlIHNlY29uZCBlbGVtZW50XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvcjEsIGZhbHNlQ2FzZSwgc2VsZWN0b3IyKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgb2YgdGhlIGZpcnN0IGVsZW1lbnRcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IHRleHQxID0gJChzZWxlY3RvcjEpLmdldFRleHQoKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IG9mIHRoZSBzZWNvbmQgZWxlbWVudFxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG4gICAgY29uc3QgdGV4dDIgPSAkKHNlbGVjdG9yMikuZ2V0VGV4dCgpO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QodGV4dDEpLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgdGV4dDIsXG4gICAgICAgICAgICBgRXhwZWN0ZWQgdGV4dCBub3QgdG8gYmUgXCIke3RleHQxfVwiYFxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdCh0ZXh0MSkudG9FcXVhbChcbiAgICAgICAgICAgIHRleHQyLFxuICAgICAgICAgICAgYEV4cGVjdGVkIHRleHQgdG8gYmUgXCIke3RleHQxfVwiIGJ1dCBmb3VuZCBcIiR7dGV4dDJ9XCJgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "compareText.js"
      ],
      "names": [
        "selector1",
        "falseCase",
        "selector2",
        "text1",
        "$",
        "getText",
        "text2",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,KAAqC;AAChD;;;;AAIA,QAAMC,KAAK,GAAGC,CAAC,CAACJ,SAAD,CAAD,CAAaK,OAAb,EAAd;AAEA;;;;;AAIA,QAAMC,KAAK,GAAGF,CAAC,CAACF,SAAD,CAAD,CAAaG,OAAb,EAAd;;AAEA,MAAIJ,SAAJ,EAAe;AACXM,IAAAA,MAAM,CAACJ,KAAD,CAAN,CAAcK,GAAd,CAAkBC,OAAlB,CACIH,KADJ,EAEK,4BAA2BH,KAAM,GAFtC;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACJ,KAAD,CAAN,CAAcM,OAAd,CACIH,KADJ,EAEK,wBAAuBH,KAAM,gBAAeG,KAAM,GAFvD;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Compare the contents of two elements with each other\n * @param  {String}   selector1  Element selector for the first element\n * @param  {String}   falseCase Whether to check if the contents of both\n *                              elements match or not\n * @param  {String}   selector2  Element selector for the second element\n */\nexport default (selector1, falseCase, selector2) => {\n    /**\n     * The text of the first element\n     * @type {String}\n     */\n    const text1 = $(selector1).getText();\n\n    /**\n     * The text of the second element\n     * @type {String}\n     */\n    const text2 = $(selector2).getText();\n\n    if (falseCase) {\n        expect(text1).not.toEqual(\n            text2,\n            `Expected text not to be \"${text1}\"`\n        );\n    } else {\n        expect(text1).toEqual(\n            text2,\n            `Expected text to be \"${text1}\" but found \"${text2}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isEnabled.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isEnabled.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isEnabled.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isEnabled.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "isEnabled.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given selector is enabled\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the given selector\n *                              is enabled or not\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * The enabled state of the given selector\n   * @type {Boolean}\n   */\n  const isEnabled = $(selector).isEnabled();\n\n  if (falseCase) {\n    expect(isEnabled).not.toEqual(true, `Expected element \"${selector}\" not to be enabled`);\n  } else {\n    expect(isEnabled).toEqual(true, `Expected element \"${selector}\" to be enabled`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRW5hYmxlZC5qcyJdLCJuYW1lcyI6WyJzZWxlY3RvciIsImZhbHNlQ2FzZSIsImlzRW5hYmxlZCIsIiQiLCJleHBlY3QiLCJub3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxLQUF5QjtBQUNwQzs7OztBQUlBLFFBQU1DLFNBQVMsR0FBR0MsQ0FBQyxDQUFDSCxRQUFELENBQUQsQ0FBWUUsU0FBWixFQUFsQjs7QUFFQSxNQUFJRCxTQUFKLEVBQWU7QUFDWEcsSUFBQUEsTUFBTSxDQUFDRixTQUFELENBQU4sQ0FBa0JHLEdBQWxCLENBQXNCQyxPQUF0QixDQUNJLElBREosRUFFSyxxQkFBb0JOLFFBQVMscUJBRmxDO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0YsU0FBRCxDQUFOLENBQWtCSSxPQUFsQixDQUNJLElBREosRUFFSyxxQkFBb0JOLFFBQVMsaUJBRmxDO0FBSUg7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBzZWxlY3RvciBpcyBlbmFibGVkXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIGdpdmVuIHNlbGVjdG9yXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGVuYWJsZWQgb3Igbm90XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgZmFsc2VDYXNlKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGVuYWJsZWQgc3RhdGUgb2YgdGhlIGdpdmVuIHNlbGVjdG9yXG4gICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICovXG4gICAgY29uc3QgaXNFbmFibGVkID0gJChzZWxlY3RvcikuaXNFbmFibGVkKCk7XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChpc0VuYWJsZWQpLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiBub3QgdG8gYmUgZW5hYmxlZGBcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoaXNFbmFibGVkKS50b0VxdWFsKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiB0byBiZSBlbmFibGVkYFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "isEnabled.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "isEnabled",
        "$",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,SAAS,GAAGC,CAAC,CAACH,QAAD,CAAD,CAAYE,SAAZ,EAAlB;;AAEA,MAAID,SAAJ,EAAe;AACXG,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBG,GAAlB,CAAsBC,OAAtB,CACI,IADJ,EAEK,qBAAoBN,QAAS,qBAFlC;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBI,OAAlB,CACI,IADJ,EAEK,qBAAoBN,QAAS,iBAFlC;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given selector is enabled\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the given selector\n *                              is enabled or not\n */\nexport default (selector, falseCase) => {\n    /**\n     * The enabled state of the given selector\n     * @type {Boolean}\n     */\n    const isEnabled = $(selector).isEnabled();\n\n    if (falseCase) {\n        expect(isEnabled).not.toEqual(\n            true,\n            `Expected element \"${selector}\" not to be enabled`\n        );\n    } else {\n        expect(isEnabled).toEqual(\n            true,\n            `Expected element \"${selector}\" to be enabled`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isDisplayed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isDisplayed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isDisplayed.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isDisplayed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "isDisplayed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element is (not) visible\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Check for a visible or a hidden element\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * Visible state of the give element\n   * @type {String}\n   */\n  const isDisplayed = $(selector).isDisplayed();\n\n  if (falseCase) {\n    expect(isDisplayed).not.toEqual(true, `Expected element \"${selector}\" not to be displayed`);\n  } else {\n    expect(isDisplayed).toEqual(true, `Expected element \"${selector}\" to be displayed`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRGlzcGxheWVkLmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yIiwiZmFsc2VDYXNlIiwiaXNEaXNwbGF5ZWQiLCIkIiwiZXhwZWN0Iiwibm90IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztlQUtlLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxLQUF5QjtBQUNwQzs7OztBQUlBLFFBQU1DLFdBQVcsR0FBR0MsQ0FBQyxDQUFDSCxRQUFELENBQUQsQ0FBWUUsV0FBWixFQUFwQjs7QUFFQSxNQUFJRCxTQUFKLEVBQWU7QUFDWEcsSUFBQUEsTUFBTSxDQUFDRixXQUFELENBQU4sQ0FBb0JHLEdBQXBCLENBQXdCQyxPQUF4QixDQUNJLElBREosRUFFSyxxQkFBb0JOLFFBQVMsdUJBRmxDO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0YsV0FBRCxDQUFOLENBQW9CSSxPQUFwQixDQUNJLElBREosRUFFSyxxQkFBb0JOLFFBQVMsbUJBRmxDO0FBSUg7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBlbGVtZW50IGlzIChub3QpIHZpc2libGVcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgQ2hlY2sgZm9yIGEgdmlzaWJsZSBvciBhIGhpZGRlbiBlbGVtZW50XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgZmFsc2VDYXNlKSA9PiB7XG4gICAgLyoqXG4gICAgICogVmlzaWJsZSBzdGF0ZSBvZiB0aGUgZ2l2ZSBlbGVtZW50XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBpc0Rpc3BsYXllZCA9ICQoc2VsZWN0b3IpLmlzRGlzcGxheWVkKCk7XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChpc0Rpc3BsYXllZCkubm90LnRvRXF1YWwoXG4gICAgICAgICAgICB0cnVlLFxuICAgICAgICAgICAgYEV4cGVjdGVkIGVsZW1lbnQgXCIke3NlbGVjdG9yfVwiIG5vdCB0byBiZSBkaXNwbGF5ZWRgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGlzRGlzcGxheWVkKS50b0VxdWFsKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiB0byBiZSBkaXNwbGF5ZWRgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "isDisplayed.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "isDisplayed",
        "$",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,WAAW,GAAGC,CAAC,CAACH,QAAD,CAAD,CAAYE,WAAZ,EAApB;;AAEA,MAAID,SAAJ,EAAe;AACXG,IAAAA,MAAM,CAACF,WAAD,CAAN,CAAoBG,GAApB,CAAwBC,OAAxB,CACI,IADJ,EAEK,qBAAoBN,QAAS,uBAFlC;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACF,WAAD,CAAN,CAAoBI,OAApB,CACI,IADJ,EAEK,qBAAoBN,QAAS,mBAFlC;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given element is (not) visible\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Check for a visible or a hidden element\n */\nexport default (selector, falseCase) => {\n    /**\n     * Visible state of the give element\n     * @type {String}\n     */\n    const isDisplayed = $(selector).isDisplayed();\n\n    if (falseCase) {\n        expect(isDisplayed).not.toEqual(\n            true,\n            `Expected element \"${selector}\" not to be displayed`\n        );\n    } else {\n        expect(isDisplayed).toEqual(\n            true,\n            `Expected element \"${selector}\" to be displayed`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/openWebsite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/openWebsite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/openWebsite.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/openWebsite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "openWebsite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Open the given URL\n * @param  {String}   type Type of navigation (getUrl or site)\n * @param  {String}   page The URL to navigate to\n */\nvar _default = (type, page) => {\n  /**\n   * The URL to navigate to\n   * @type {String}\n   */\n  const url = type === 'url' ? page : browser.options.baseUrl + page;\n  browser.url(url);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZW5XZWJzaXRlLmpzIl0sIm5hbWVzIjpbInR5cGUiLCJwYWdlIiwidXJsIiwiYnJvd3NlciIsIm9wdGlvbnMiLCJiYXNlVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O2VBS2UsQ0FBQ0EsSUFBRCxFQUFPQyxJQUFQLEtBQWdCO0FBQzNCOzs7O0FBSUEsUUFBTUMsR0FBRyxHQUFJRixJQUFJLEtBQUssS0FBVixHQUFtQkMsSUFBbkIsR0FBMEJFLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsT0FBaEIsR0FBMEJKLElBQWhFO0FBQ0FFLEVBQUFBLE9BQU8sQ0FBQ0QsR0FBUixDQUFZQSxHQUFaO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvYWN0aW9uLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogT3BlbiB0aGUgZ2l2ZW4gVVJMXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgdHlwZSBUeXBlIG9mIG5hdmlnYXRpb24gKGdldFVybCBvciBzaXRlKVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHBhZ2UgVGhlIFVSTCB0byBuYXZpZ2F0ZSB0b1xuICovXG5leHBvcnQgZGVmYXVsdCAodHlwZSwgcGFnZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBVUkwgdG8gbmF2aWdhdGUgdG9cbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IHVybCA9ICh0eXBlID09PSAndXJsJykgPyBwYWdlIDogYnJvd3Nlci5vcHRpb25zLmJhc2VVcmwgKyBwYWdlO1xuICAgIGJyb3dzZXIudXJsKHVybCk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "openWebsite.js"
      ],
      "names": [
        "type",
        "page",
        "url",
        "browser",
        "options",
        "baseUrl"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,IAAD,EAAOC,IAAP,KAAgB;AAC3B;;;;AAIA,QAAMC,GAAG,GAAIF,IAAI,KAAK,KAAV,GAAmBC,IAAnB,GAA0BE,OAAO,CAACC,OAAR,CAAgBC,OAAhB,GAA0BJ,IAAhE;AACAE,EAAAA,OAAO,CAACD,GAAR,CAAYA,GAAZ;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Open the given URL\n * @param  {String}   type Type of navigation (getUrl or site)\n * @param  {String}   page The URL to navigate to\n */\nexport default (type, page) => {\n    /**\n     * The URL to navigate to\n     * @type {String}\n     */\n    const url = (type === 'url') ? page : browser.options.baseUrl + page;\n    browser.url(url);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setWindowSize.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setWindowSize.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setWindowSize.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setWindowSize.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "setWindowSize.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Resize the browser window\n * @param  {String}   screenWidth  The width of the window to resize to\n * @param  {String}   screenHeight The height of the window to resize to\n */\nvar _default = (screenWidth, screenHeight) => {\n  browser.setWindowSize(parseInt(screenWidth, 10), parseInt(screenHeight, 10));\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldFdpbmRvd1NpemUuanMiXSwibmFtZXMiOlsic2NyZWVuV2lkdGgiLCJzY3JlZW5IZWlnaHQiLCJicm93c2VyIiwic2V0V2luZG93U2l6ZSIsInBhcnNlSW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O2VBS2UsQ0FBQ0EsV0FBRCxFQUFjQyxZQUFkLEtBQStCO0FBQzFDQyxFQUFBQSxPQUFPLENBQUNDLGFBQVIsQ0FDSUMsUUFBUSxDQUFDSixXQUFELEVBQWMsRUFBZCxDQURaLEVBRUlJLFFBQVEsQ0FBQ0gsWUFBRCxFQUFlLEVBQWYsQ0FGWjtBQUlILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlc2l6ZSB0aGUgYnJvd3NlciB3aW5kb3dcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzY3JlZW5XaWR0aCAgVGhlIHdpZHRoIG9mIHRoZSB3aW5kb3cgdG8gcmVzaXplIHRvXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2NyZWVuSGVpZ2h0IFRoZSBoZWlnaHQgb2YgdGhlIHdpbmRvdyB0byByZXNpemUgdG9cbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHNjcmVlbldpZHRoLCBzY3JlZW5IZWlnaHQpID0+IHtcbiAgICBicm93c2VyLnNldFdpbmRvd1NpemUoXG4gICAgICAgIHBhcnNlSW50KHNjcmVlbldpZHRoLCAxMCksXG4gICAgICAgIHBhcnNlSW50KHNjcmVlbkhlaWdodCwgMTApXG4gICAgKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "setWindowSize.js"
      ],
      "names": [
        "screenWidth",
        "screenHeight",
        "browser",
        "setWindowSize",
        "parseInt"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,WAAD,EAAcC,YAAd,KAA+B;AAC1CC,EAAAA,OAAO,CAACC,aAAR,CACIC,QAAQ,CAACJ,WAAD,EAAc,EAAd,CADZ,EAEII,QAAQ,CAACH,YAAD,EAAe,EAAf,CAFZ;AAIH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Resize the browser window\n * @param  {String}   screenWidth  The width of the window to resize to\n * @param  {String}   screenHeight The height of the window to resize to\n */\nexport default (screenWidth, screenHeight) => {\n    browser.setWindowSize(\n        parseInt(screenWidth, 10),\n        parseInt(screenHeight, 10)\n    );\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/then.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/then.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/then.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/then.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
        "sourceFileName": "then.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _checkClass = _interopRequireDefault(require(\"../support/check/checkClass\"));\n\nvar _checkContainsAnyText = _interopRequireDefault(require(\"../support/check/checkContainsAnyText\"));\n\nvar _checkIsEmpty = _interopRequireDefault(require(\"../support/check/checkIsEmpty\"));\n\nvar _checkContainsText = _interopRequireDefault(require(\"../support/check/checkContainsText\"));\n\nvar _checkCookieContent = _interopRequireDefault(require(\"../support/check/checkCookieContent\"));\n\nvar _checkCookieExists = _interopRequireDefault(require(\"../support/check/checkCookieExists\"));\n\nvar _checkDimension = _interopRequireDefault(require(\"../support/check/checkDimension\"));\n\nvar _checkEqualsText = _interopRequireDefault(require(\"../support/check/checkEqualsText\"));\n\nvar _checkFocus = _interopRequireDefault(require(\"../support/check/checkFocus\"));\n\nvar _checkInURLPath = _interopRequireDefault(require(\"../support/check/checkInURLPath\"));\n\nvar _checkIsOpenedInNewWindow = _interopRequireDefault(require(\"../support/check/checkIsOpenedInNewWindow\"));\n\nvar _checkModal = _interopRequireDefault(require(\"../support/check/checkModal\"));\n\nvar _checkModalText = _interopRequireDefault(require(\"../support/check/checkModalText\"));\n\nvar _checkNewWindow = _interopRequireDefault(require(\"../support/check/checkNewWindow\"));\n\nvar _checkOffset = _interopRequireDefault(require(\"../support/check/checkOffset\"));\n\nvar _checkProperty = _interopRequireDefault(require(\"../support/check/checkProperty\"));\n\nvar _checkFontProperty = _interopRequireDefault(require(\"../support/check/checkFontProperty\"));\n\nvar _checkSelected = _interopRequireDefault(require(\"../support/check/checkSelected\"));\n\nvar _checkTitle = _interopRequireDefault(require(\"../support/check/checkTitle\"));\n\nvar _checkTitleContains = _interopRequireDefault(require(\"../support/check/checkTitleContains\"));\n\nvar _checkURL = _interopRequireDefault(require(\"../support/check/checkURL\"));\n\nvar _checkURLPath = _interopRequireDefault(require(\"../support/check/checkURLPath\"));\n\nvar _checkWithinViewport = _interopRequireDefault(require(\"../support/check/checkWithinViewport\"));\n\nvar _compareText = _interopRequireDefault(require(\"../support/check/compareText\"));\n\nvar _isEnabled = _interopRequireDefault(require(\"../support/check/isEnabled\"));\n\nvar _isExisting = _interopRequireDefault(require(\"../support/check/isExisting\"));\n\nvar _isDisplayed = _interopRequireDefault(require(\"../support/check/isDisplayed\"));\n\nvar _waitFor = _interopRequireDefault(require(\"../support/action/waitFor\"));\n\nvar _waitForDisplayed = _interopRequireDefault(require(\"../support/action/waitForDisplayed\"));\n\nvar _checkIfElementExists = _interopRequireDefault(require(\"../support/lib/checkIfElementExists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst {\n  Then\n} = require('cucumber');\n\nThen(/^I expect that the title is( not)* \"([^\"]*)?\"$/, _checkTitle.default);\nThen(/^I expect that the title( not)* contains \"([^\"]*)?\"$/, _checkTitleContains.default);\nThen(/^I expect that element \"([^\"]*)?\" does( not)* appear exactly \"([^\"]*)?\" times$/, _checkIfElementExists.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* displayed$/, _isDisplayed.default);\nThen(/^I expect that element \"([^\"]*)?\" becomes( not)* displayed$/, _waitForDisplayed.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* within the viewport$/, _checkWithinViewport.default);\nThen(/^I expect that element \"([^\"]*)?\" does( not)* exist$/, _isExisting.default);\nThen(/^I expect that element \"([^\"]*)?\"( not)* contains the same text as element \"([^\"]*)?\"$/, _compareText.default);\nThen(/^I expect that (button|element) \"([^\"]*)?\"( not)* matches the text \"([^\"]*)?\"$/, _checkEqualsText.default);\nThen(/^I expect that (button|element|container) \"([^\"]*)?\"( not)* contains the text \"([^\"]*)?\"$/, _checkContainsText.default);\nThen(/^I expect that (button|element) \"([^\"]*)?\"( not)* contains any text$/, _checkContainsAnyText.default);\nThen(/^I expect that (button|element) \"([^\"]*)?\" is( not)* empty$/, _checkIsEmpty.default);\nThen(/^I expect that the url is( not)* \"([^\"]*)?\"$/, _checkURL.default);\nThen(/^I expect that the path is( not)* \"([^\"]*)?\"$/, _checkURLPath.default);\nThen(/^I expect the url to( not)* contain \"([^\"]*)?\"$/, _checkInURLPath.default);\nThen(/^I expect that the( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/, _checkProperty.default);\nThen(/^I expect that the font( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/, _checkFontProperty.default);\nThen(/^I expect that checkbox \"([^\"]*)?\" is( not)* checked$/, _checkSelected.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* selected$/, _checkSelected.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* enabled$/, _isEnabled.default);\nThen(/^I expect that cookie \"([^\"]*)?\"( not)* contains \"([^\"]*)?\"$/, _checkCookieContent.default);\nThen(/^I expect that cookie \"([^\"]*)?\"( not)* exists$/, _checkCookieExists.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* ([\\d]+)px (broad|tall)$/, _checkDimension.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* positioned at ([\\d+.?\\d*]+)px on the (x|y) axis$/, _checkOffset.default);\nThen(/^I expect that element \"([^\"]*)?\" (has|does not have) the class \"([^\"]*)?\"$/, _checkClass.default);\nThen(/^I expect a new (window|tab) has( not)* been opened$/, _checkNewWindow.default);\nThen(/^I expect the url \"([^\"]*)?\" is opened in a new (tab|window)$/, _checkIsOpenedInNewWindow.default);\nThen(/^I expect that element \"([^\"]*)?\" is( not)* focused$/, _checkFocus.default);\nThen(/^I wait on element \"([^\"]*)?\"(?: for (\\d+)ms)*(?: to( not)* (be checked|be enabled|be selected|be displayed|contain a text|contain a value|exist))*$/, {\n  wrapperOptions: {\n    retry: 3\n  }\n}, _waitFor.default);\nThen(/^I expect that a (alertbox|confirmbox|prompt) is( not)* opened$/, _checkModal.default);\nThen(/^I expect that a (alertbox|confirmbox|prompt)( not)* contains the text \"([^\"]*)?\"$/, _checkModalText.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "then.js"
      ],
      "names": [
        "Then",
        "require",
        "checkTitle",
        "checkTitleContains",
        "checkIfElementExists",
        "isVisible",
        "waitForVisible",
        "checkWithinViewport",
        "isExisting",
        "compareText",
        "checkEqualsText",
        "checkContainsText",
        "checkContainsAnyText",
        "checkIsEmpty",
        "checkURL",
        "checkURLPath",
        "checkInURLPath",
        "checkProperty",
        "checkFontProperty",
        "checkSelected",
        "isEnabled",
        "checkCookieContent",
        "checkCookieExists",
        "checkDimension",
        "checkOffset",
        "checkClass",
        "checkNewWindow",
        "checkIsOpenedInNewWindow",
        "checkFocus",
        "wrapperOptions",
        "retry",
        "waitFor",
        "checkModal",
        "checkModalText"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,OAAO,CAAC,UAAD,CAAxB;;AAGAD,IAAI,CACA,gDADA,EAEAE,mBAFA,CAAJ;AAKAF,IAAI,CACA,sDADA,EAEAG,2BAFA,CAAJ;AAKAH,IAAI,CACA,gFADA,EAEAI,6BAFA,CAAJ;AAKAJ,IAAI,CACA,wDADA,EAEAK,oBAFA,CAAJ;AAKAL,IAAI,CACA,6DADA,EAEAM,yBAFA,CAAJ;AAKAN,IAAI,CACA,kEADA,EAEAO,4BAFA,CAAJ;AAKAP,IAAI,CACA,sDADA,EAEAQ,mBAFA,CAAJ;AAKAR,IAAI,CACA,wFADA,EAEAS,oBAFA,CAAJ;AAKAT,IAAI,CACA,gFADA,EAEAU,wBAFA,CAAJ;AAKAV,IAAI,CACA,2FADA,EAEAW,0BAFA,CAAJ;AAKAX,IAAI,CACA,sEADA,EAEAY,6BAFA,CAAJ;AAKAZ,IAAI,CACA,6DADA,EAEAa,qBAFA,CAAJ;AAKAb,IAAI,CACA,8CADA,EAEAc,iBAFA,CAAJ;AAKAd,IAAI,CACA,+CADA,EAEAe,qBAFA,CAAJ;AAKAf,IAAI,CACA,iDADA,EAEAgB,uBAFA,CAAJ;AAKAhB,IAAI,CACA,8FADA,EAEAiB,sBAFA,CAAJ;AAKAjB,IAAI,CACA,mGADA,EAEAkB,0BAFA,CAAJ;AAKAlB,IAAI,CACA,uDADA,EAEAmB,sBAFA,CAAJ;AAKAnB,IAAI,CACA,uDADA,EAEAmB,sBAFA,CAAJ;AAKAnB,IAAI,CACA,sDADA,EAEAoB,kBAFA,CAAJ;AAKApB,IAAI,CACA,8DADA,EAEAqB,2BAFA,CAAJ;AAKArB,IAAI,CACA,iDADA,EAEAsB,0BAFA,CAAJ;AAKAtB,IAAI,CACA,qEADA,EAEAuB,uBAFA,CAAJ;AAKAvB,IAAI,CACA,8FADA,EAEAwB,oBAFA,CAAJ;AAKAxB,IAAI,CACA,6EADA,EAEAyB,mBAFA,CAAJ;AAKAzB,IAAI,CACA,sDADA,EAEA0B,uBAFA,CAAJ;AAKA1B,IAAI,CACA,+DADA,EAEA2B,iCAFA,CAAJ;AAKA3B,IAAI,CACA,sDADA,EAEA4B,mBAFA,CAAJ;AAKA5B,IAAI,CACA,sJADA,EAEA;AACI6B,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK;AADpB,CAFA,EAOAC,gBAPA,CAAJ;AAUA/B,IAAI,CACA,iEADA,EAEAgC,mBAFA,CAAJ;AAKAhC,IAAI,CACA,oFADA,EAEAiC,uBAFA,CAAJ",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "sourcesContent": [
        "import checkClass from '../support/check/checkClass';\nimport checkContainsAnyText from '../support/check/checkContainsAnyText';\nimport checkIsEmpty from '../support/check/checkIsEmpty';\nimport checkContainsText from '../support/check/checkContainsText';\nimport checkCookieContent from '../support/check/checkCookieContent';\nimport checkCookieExists from '../support/check/checkCookieExists';\nimport checkDimension from '../support/check/checkDimension';\nimport checkEqualsText from '../support/check/checkEqualsText';\nimport checkFocus from '../support/check/checkFocus';\nimport checkInURLPath from '../support/check/checkInURLPath';\nimport checkIsOpenedInNewWindow from\n    '../support/check/checkIsOpenedInNewWindow';\nimport checkModal from '../support/check/checkModal';\nimport checkModalText from '../support/check/checkModalText';\nimport checkNewWindow from '../support/check/checkNewWindow';\nimport checkOffset from '../support/check/checkOffset';\nimport checkProperty from '../support/check/checkProperty';\nimport checkFontProperty from '../support/check/checkFontProperty';\nimport checkSelected from '../support/check/checkSelected';\nimport checkTitle from '../support/check/checkTitle';\nimport checkTitleContains from '../support/check/checkTitleContains';\nimport checkURL from '../support/check/checkURL';\nimport checkURLPath from '../support/check/checkURLPath';\nimport checkWithinViewport from '../support/check/checkWithinViewport';\nimport compareText from '../support/check/compareText';\nimport isEnabled from '../support/check/isEnabled';\nimport isExisting from '../support/check/isExisting';\nimport isVisible from '../support/check/isDisplayed';\nimport waitFor from '../support/action/waitFor';\nimport waitForVisible from '../support/action/waitForDisplayed';\nimport checkIfElementExists from '../support/lib/checkIfElementExists';\n\nconst { Then } = require('cucumber');\n\n\nThen(\n    /^I expect that the title is( not)* \"([^\"]*)?\"$/,\n    checkTitle\n);\n\nThen(\n    /^I expect that the title( not)* contains \"([^\"]*)?\"$/,\n    checkTitleContains\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" does( not)* appear exactly \"([^\"]*)?\" times$/,\n    checkIfElementExists\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* displayed$/,\n    isVisible\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" becomes( not)* displayed$/,\n    waitForVisible\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* within the viewport$/,\n    checkWithinViewport\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" does( not)* exist$/,\n    isExisting\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\"( not)* contains the same text as element \"([^\"]*)?\"$/,\n    compareText\n);\n\nThen(\n    /^I expect that (button|element) \"([^\"]*)?\"( not)* matches the text \"([^\"]*)?\"$/,\n    checkEqualsText\n);\n\nThen(\n    /^I expect that (button|element|container) \"([^\"]*)?\"( not)* contains the text \"([^\"]*)?\"$/,\n    checkContainsText\n);\n\nThen(\n    /^I expect that (button|element) \"([^\"]*)?\"( not)* contains any text$/,\n    checkContainsAnyText\n);\n\nThen(\n    /^I expect that (button|element) \"([^\"]*)?\" is( not)* empty$/,\n    checkIsEmpty\n);\n\nThen(\n    /^I expect that the url is( not)* \"([^\"]*)?\"$/,\n    checkURL\n);\n\nThen(\n    /^I expect that the path is( not)* \"([^\"]*)?\"$/,\n    checkURLPath\n);\n\nThen(\n    /^I expect the url to( not)* contain \"([^\"]*)?\"$/,\n    checkInURLPath\n);\n\nThen(\n    /^I expect that the( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/,\n    checkProperty\n);\n\nThen(\n    /^I expect that the font( css)* attribute \"([^\"]*)?\" from element \"([^\"]*)?\" is( not)* \"([^\"]*)?\"$/,\n    checkFontProperty\n);\n\nThen(\n    /^I expect that checkbox \"([^\"]*)?\" is( not)* checked$/,\n    checkSelected\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* selected$/,\n    checkSelected\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* enabled$/,\n    isEnabled\n);\n\nThen(\n    /^I expect that cookie \"([^\"]*)?\"( not)* contains \"([^\"]*)?\"$/,\n    checkCookieContent\n);\n\nThen(\n    /^I expect that cookie \"([^\"]*)?\"( not)* exists$/,\n    checkCookieExists\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* ([\\d]+)px (broad|tall)$/,\n    checkDimension\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* positioned at ([\\d+.?\\d*]+)px on the (x|y) axis$/,\n    checkOffset\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" (has|does not have) the class \"([^\"]*)?\"$/,\n    checkClass\n);\n\nThen(\n    /^I expect a new (window|tab) has( not)* been opened$/,\n    checkNewWindow\n);\n\nThen(\n    /^I expect the url \"([^\"]*)?\" is opened in a new (tab|window)$/,\n    checkIsOpenedInNewWindow\n);\n\nThen(\n    /^I expect that element \"([^\"]*)?\" is( not)* focused$/,\n    checkFocus\n);\n\nThen(\n    /^I wait on element \"([^\"]*)?\"(?: for (\\d+)ms)*(?: to( not)* (be checked|be enabled|be selected|be displayed|contain a text|contain a value|exist))*$/,\n    {\n        wrapperOptions: {\n            retry: 3,\n        },\n    },\n    waitFor\n);\n\nThen(\n    /^I expect that a (alertbox|confirmbox|prompt) is( not)* opened$/,\n    checkModal\n);\n\nThen(\n    /^I expect that a (alertbox|confirmbox|prompt)( not)* contains the text \"([^\"]*)?\"$/,\n    checkModalText\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkClass.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkClass.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkClass.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkClass.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkClass.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element has the given class\n * @param  {String}   selector              Element selector\n * @param  {String}   falseCase         Whether to check for the class to exist\n *                                      or not ('has', 'does not have')\n * @param  {String}   expectedClassName The class name to check\n */\nvar _default = (selector, falseCase, expectedClassName) => {\n  /**\n   * List of all the classes of the element\n   * @type {Array}\n   */\n  const classesList = $(selector).getAttribute('className').split(' ');\n\n  if (falseCase === 'does not have') {\n    expect(classesList).not.toContain(expectedClassName, `Element ${selector} should not have the class ${expectedClassName}`);\n  } else {\n    expect(classesList).toContain(expectedClassName, `Element ${selector} should have the class ${expectedClassName}`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQ2xhc3MuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJleHBlY3RlZENsYXNzTmFtZSIsImNsYXNzZXNMaXN0IiwiJCIsImdldEF0dHJpYnV0ZSIsInNwbGl0IiwiZXhwZWN0Iiwibm90IiwidG9Db250YWluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7ZUFPZSxDQUFDQSxRQUFELEVBQVdDLFNBQVgsRUFBc0JDLGlCQUF0QixLQUE0QztBQUN2RDs7OztBQUlBLFFBQU1DLFdBQVcsR0FBR0MsQ0FBQyxDQUFDSixRQUFELENBQUQsQ0FBWUssWUFBWixDQUF5QixXQUF6QixFQUFzQ0MsS0FBdEMsQ0FBNEMsR0FBNUMsQ0FBcEI7O0FBRUEsTUFBSUwsU0FBUyxLQUFLLGVBQWxCLEVBQW1DO0FBQy9CTSxJQUFBQSxNQUFNLENBQUNKLFdBQUQsQ0FBTixDQUFvQkssR0FBcEIsQ0FBd0JDLFNBQXhCLENBQ0lQLGlCQURKLEVBRUssV0FBVUYsUUFBUyw4QkFBNkJFLGlCQUFrQixFQUZ2RTtBQUlILEdBTEQsTUFLTztBQUNISyxJQUFBQSxNQUFNLENBQUNKLFdBQUQsQ0FBTixDQUFvQk0sU0FBcEIsQ0FDSVAsaUJBREosRUFFSyxXQUFVRixRQUFTLDBCQUF5QkUsaUJBQWtCLEVBRm5FO0FBSUg7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBlbGVtZW50IGhhcyB0aGUgZ2l2ZW4gY2xhc3NcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgICAgICAgICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSAgICAgICAgIFdoZXRoZXIgdG8gY2hlY2sgZm9yIHRoZSBjbGFzcyB0byBleGlzdFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIG5vdCAoJ2hhcycsICdkb2VzIG5vdCBoYXZlJylcbiAqIEBwYXJhbSAge1N0cmluZ30gICBleHBlY3RlZENsYXNzTmFtZSBUaGUgY2xhc3MgbmFtZSB0byBjaGVja1xuICovXG5leHBvcnQgZGVmYXVsdCAoc2VsZWN0b3IsIGZhbHNlQ2FzZSwgZXhwZWN0ZWRDbGFzc05hbWUpID0+IHtcbiAgICAvKipcbiAgICAgKiBMaXN0IG9mIGFsbCB0aGUgY2xhc3NlcyBvZiB0aGUgZWxlbWVudFxuICAgICAqIEB0eXBlIHtBcnJheX1cbiAgICAgKi9cbiAgICBjb25zdCBjbGFzc2VzTGlzdCA9ICQoc2VsZWN0b3IpLmdldEF0dHJpYnV0ZSgnY2xhc3NOYW1lJykuc3BsaXQoJyAnKTtcblxuICAgIGlmIChmYWxzZUNhc2UgPT09ICdkb2VzIG5vdCBoYXZlJykge1xuICAgICAgICBleHBlY3QoY2xhc3Nlc0xpc3QpLm5vdC50b0NvbnRhaW4oXG4gICAgICAgICAgICBleHBlY3RlZENsYXNzTmFtZSxcbiAgICAgICAgICAgIGBFbGVtZW50ICR7c2VsZWN0b3J9IHNob3VsZCBub3QgaGF2ZSB0aGUgY2xhc3MgJHtleHBlY3RlZENsYXNzTmFtZX1gXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGNsYXNzZXNMaXN0KS50b0NvbnRhaW4oXG4gICAgICAgICAgICBleHBlY3RlZENsYXNzTmFtZSxcbiAgICAgICAgICAgIGBFbGVtZW50ICR7c2VsZWN0b3J9IHNob3VsZCBoYXZlIHRoZSBjbGFzcyAke2V4cGVjdGVkQ2xhc3NOYW1lfWBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkClass.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "expectedClassName",
        "classesList",
        "$",
        "getAttribute",
        "split",
        "expect",
        "not",
        "toContain"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,QAAD,EAAWC,SAAX,EAAsBC,iBAAtB,KAA4C;AACvD;;;;AAIA,QAAMC,WAAW,GAAGC,CAAC,CAACJ,QAAD,CAAD,CAAYK,YAAZ,CAAyB,WAAzB,EAAsCC,KAAtC,CAA4C,GAA5C,CAApB;;AAEA,MAAIL,SAAS,KAAK,eAAlB,EAAmC;AAC/BM,IAAAA,MAAM,CAACJ,WAAD,CAAN,CAAoBK,GAApB,CAAwBC,SAAxB,CACIP,iBADJ,EAEK,WAAUF,QAAS,8BAA6BE,iBAAkB,EAFvE;AAIH,GALD,MAKO;AACHK,IAAAA,MAAM,CAACJ,WAAD,CAAN,CAAoBM,SAApB,CACIP,iBADJ,EAEK,WAAUF,QAAS,0BAAyBE,iBAAkB,EAFnE;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given element has the given class\n * @param  {String}   selector              Element selector\n * @param  {String}   falseCase         Whether to check for the class to exist\n *                                      or not ('has', 'does not have')\n * @param  {String}   expectedClassName The class name to check\n */\nexport default (selector, falseCase, expectedClassName) => {\n    /**\n     * List of all the classes of the element\n     * @type {Array}\n     */\n    const classesList = $(selector).getAttribute('className').split(' ');\n\n    if (falseCase === 'does not have') {\n        expect(classesList).not.toContain(\n            expectedClassName,\n            `Element ${selector} should not have the class ${expectedClassName}`\n        );\n    } else {\n        expect(classesList).toContain(\n            expectedClassName,\n            `Element ${selector} should have the class ${expectedClassName}`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFocus.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFocus.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFocus.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFocus.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkFocus.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element has the focus\n * @param  {String}   selector  Element selector\n * @param  {String}   falseCase Whether to check if the given element has focus\n *                              or not\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * Value of the hasFocus function for the given element\n   * @type {Boolean}\n   */\n  const hasFocus = $(selector).isFocused();\n\n  if (falseCase) {\n    expect(hasFocus).not.toBe(true, 'Expected element to not be focused, but it is');\n  } else {\n    expect(hasFocus).toBe(true, 'Expected element to be focused, but it is not');\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrRm9jdXMuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJoYXNGb2N1cyIsIiQiLCJpc0ZvY3VzZWQiLCJleHBlY3QiLCJub3QiLCJ0b0JlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxLQUF5QjtBQUNwQzs7OztBQUlBLFFBQU1DLFFBQVEsR0FBR0MsQ0FBQyxDQUFDSCxRQUFELENBQUQsQ0FBWUksU0FBWixFQUFqQjs7QUFFQSxNQUFJSCxTQUFKLEVBQWU7QUFDWEksSUFBQUEsTUFBTSxDQUFDSCxRQUFELENBQU4sQ0FBaUJJLEdBQWpCLENBQXFCQyxJQUFyQixDQUNJLElBREosRUFFSSwrQ0FGSjtBQUlILEdBTEQsTUFLTztBQUNIRixJQUFBQSxNQUFNLENBQUNILFFBQUQsQ0FBTixDQUFpQkssSUFBakIsQ0FDSSxJQURKLEVBRUksK0NBRko7QUFJSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaGFzIHRoZSBmb2N1c1xuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaGFzIGZvY3VzXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIG5vdFxuICovXG5leHBvcnQgZGVmYXVsdCAoc2VsZWN0b3IsIGZhbHNlQ2FzZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFZhbHVlIG9mIHRoZSBoYXNGb2N1cyBmdW5jdGlvbiBmb3IgdGhlIGdpdmVuIGVsZW1lbnRcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBjb25zdCBoYXNGb2N1cyA9ICQoc2VsZWN0b3IpLmlzRm9jdXNlZCgpO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QoaGFzRm9jdXMpLm5vdC50b0JlKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgICdFeHBlY3RlZCBlbGVtZW50IHRvIG5vdCBiZSBmb2N1c2VkLCBidXQgaXQgaXMnXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGhhc0ZvY3VzKS50b0JlKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgICdFeHBlY3RlZCBlbGVtZW50IHRvIGJlIGZvY3VzZWQsIGJ1dCBpdCBpcyBub3QnXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkFocus.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "hasFocus",
        "$",
        "isFocused",
        "expect",
        "not",
        "toBe"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,QAAQ,GAAGC,CAAC,CAACH,QAAD,CAAD,CAAYI,SAAZ,EAAjB;;AAEA,MAAIH,SAAJ,EAAe;AACXI,IAAAA,MAAM,CAACH,QAAD,CAAN,CAAiBI,GAAjB,CAAqBC,IAArB,CACI,IADJ,EAEI,+CAFJ;AAIH,GALD,MAKO;AACHF,IAAAA,MAAM,CAACH,QAAD,CAAN,CAAiBK,IAAjB,CACI,IADJ,EAEI,+CAFJ;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given element has the focus\n * @param  {String}   selector  Element selector\n * @param  {String}   falseCase Whether to check if the given element has focus\n *                              or not\n */\nexport default (selector, falseCase) => {\n    /**\n     * Value of the hasFocus function for the given element\n     * @type {Boolean}\n     */\n    const hasFocus = $(selector).isFocused();\n\n    if (falseCase) {\n        expect(hasFocus).not.toBe(\n            true,\n            'Expected element to not be focused, but it is'\n        );\n    } else {\n        expect(hasFocus).toBe(\n            true,\n            'Expected element to be focused, but it is not'\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkInURLPath.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkInURLPath.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkInURLPath.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkInURLPath.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkInURLPath.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given string is in the URL path\n * @param  {String}   falseCase       Whether to check if the given string is in\n *                                    the URL path or not\n * @param  {String}   expectedUrlPart The string to check for\n */\nvar _default = (falseCase, expectedUrlPart) => {\n  /**\n   * The URL of the current browser window\n   * @type {String}\n   */\n  const currentUrl = browser.getUrl();\n\n  if (falseCase) {\n    expect(currentUrl).not.toContain(expectedUrlPart, `Expected URL \"${currentUrl}\" not to contain ` + `\"${expectedUrlPart}\"`);\n  } else {\n    expect(currentUrl).toContain(expectedUrlPart, `Expected URL \"${currentUrl}\" to contain \"${expectedUrlPart}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrSW5VUkxQYXRoLmpzIl0sIm5hbWVzIjpbImZhbHNlQ2FzZSIsImV4cGVjdGVkVXJsUGFydCIsImN1cnJlbnRVcmwiLCJicm93c2VyIiwiZ2V0VXJsIiwiZXhwZWN0Iiwibm90IiwidG9Db250YWluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFNBQUQsRUFBWUMsZUFBWixLQUFnQztBQUMzQzs7OztBQUlBLFFBQU1DLFVBQVUsR0FBR0MsT0FBTyxDQUFDQyxNQUFSLEVBQW5COztBQUVBLE1BQUlKLFNBQUosRUFBZTtBQUNYSyxJQUFBQSxNQUFNLENBQUNILFVBQUQsQ0FBTixDQUFtQkksR0FBbkIsQ0FBdUJDLFNBQXZCLENBQ0lOLGVBREosRUFFSyxpQkFBZ0JDLFVBQVcsbUJBQTVCLEdBQ0csSUFBR0QsZUFBZ0IsR0FIMUI7QUFLSCxHQU5ELE1BTU87QUFDSEksSUFBQUEsTUFBTSxDQUFDSCxVQUFELENBQU4sQ0FBbUJLLFNBQW5CLENBQ0lOLGVBREosRUFFSyxpQkFBZ0JDLFVBQVcsaUJBQWdCRCxlQUFnQixHQUZoRTtBQUlIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gc3RyaW5nIGlzIGluIHRoZSBVUkwgcGF0aFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSAgICAgICBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBnaXZlbiBzdHJpbmcgaXMgaW5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIFVSTCBwYXRoIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVXJsUGFydCBUaGUgc3RyaW5nIHRvIGNoZWNrIGZvclxuICovXG5leHBvcnQgZGVmYXVsdCAoZmFsc2VDYXNlLCBleHBlY3RlZFVybFBhcnQpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgVVJMIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBjdXJyZW50VXJsID0gYnJvd3Nlci5nZXRVcmwoKTtcblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KGN1cnJlbnRVcmwpLm5vdC50b0NvbnRhaW4oXG4gICAgICAgICAgICBleHBlY3RlZFVybFBhcnQsXG4gICAgICAgICAgICBgRXhwZWN0ZWQgVVJMIFwiJHtjdXJyZW50VXJsfVwiIG5vdCB0byBjb250YWluIGBcbiAgICAgICAgICAgICsgYFwiJHtleHBlY3RlZFVybFBhcnR9XCJgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGN1cnJlbnRVcmwpLnRvQ29udGFpbihcbiAgICAgICAgICAgIGV4cGVjdGVkVXJsUGFydCxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBVUkwgXCIke2N1cnJlbnRVcmx9XCIgdG8gY29udGFpbiBcIiR7ZXhwZWN0ZWRVcmxQYXJ0fVwiYFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkInURLPath.js"
      ],
      "names": [
        "falseCase",
        "expectedUrlPart",
        "currentUrl",
        "browser",
        "getUrl",
        "expect",
        "not",
        "toContain"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,eAAZ,KAAgC;AAC3C;;;;AAIA,QAAMC,UAAU,GAAGC,OAAO,CAACC,MAAR,EAAnB;;AAEA,MAAIJ,SAAJ,EAAe;AACXK,IAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBI,GAAnB,CAAuBC,SAAvB,CACIN,eADJ,EAEK,iBAAgBC,UAAW,mBAA5B,GACG,IAAGD,eAAgB,GAH1B;AAKH,GAND,MAMO;AACHI,IAAAA,MAAM,CAACH,UAAD,CAAN,CAAmBK,SAAnB,CACIN,eADJ,EAEK,iBAAgBC,UAAW,iBAAgBD,eAAgB,GAFhE;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given string is in the URL path\n * @param  {String}   falseCase       Whether to check if the given string is in\n *                                    the URL path or not\n * @param  {String}   expectedUrlPart The string to check for\n */\nexport default (falseCase, expectedUrlPart) => {\n    /**\n     * The URL of the current browser window\n     * @type {String}\n     */\n    const currentUrl = browser.getUrl();\n\n    if (falseCase) {\n        expect(currentUrl).not.toContain(\n            expectedUrlPart,\n            `Expected URL \"${currentUrl}\" not to contain `\n            + `\"${expectedUrlPart}\"`\n        );\n    } else {\n        expect(currentUrl).toContain(\n            expectedUrlPart,\n            `Expected URL \"${currentUrl}\" to contain \"${expectedUrlPart}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsOpenedInNewWindow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsOpenedInNewWindow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsOpenedInNewWindow.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkIsOpenedInNewWindow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkIsOpenedInNewWindow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given URL was opened in a new window\n * @param  {String}   expectedUrl The URL to check for\n */\n\n/* eslint-disable no-unused-vars */\nvar _default = (expectedUrl, type) => {\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * All the current window handles\n   * @type {Object}\n   */\n  const windowHandles = browser.getWindowHandles();\n  expect(windowHandles).not.toHaveLength(1, 'A popup was not opened');\n  /**\n   * The last opened window handle\n   * @type {Object}\n   */\n\n  const lastWindowHandle = windowHandles.slice(-1); // Make sure we focus on the last opened window handle\n\n  browser.switchToWindow(lastWindowHandle[0]);\n  /**\n   * Get the URL of the current browser window\n   * @type {String}\n   */\n\n  const windowUrl = browser.getUrl();\n  expect(windowUrl).toContain(expectedUrl, 'The popup has a incorrect getUrl');\n  browser.closeWindow();\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrSXNPcGVuZWRJbk5ld1dpbmRvdy5qcyJdLCJuYW1lcyI6WyJleHBlY3RlZFVybCIsInR5cGUiLCJ3aW5kb3dIYW5kbGVzIiwiYnJvd3NlciIsImdldFdpbmRvd0hhbmRsZXMiLCJleHBlY3QiLCJub3QiLCJ0b0hhdmVMZW5ndGgiLCJsYXN0V2luZG93SGFuZGxlIiwic2xpY2UiLCJzd2l0Y2hUb1dpbmRvdyIsIndpbmRvd1VybCIsImdldFVybCIsInRvQ29udGFpbiIsImNsb3NlV2luZG93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O0FBSUE7ZUFDZSxDQUFDQSxXQUFELEVBQWNDLElBQWQsS0FBdUI7QUFDdEM7O0FBQ0k7Ozs7QUFJQSxRQUFNQyxhQUFhLEdBQUdDLE9BQU8sQ0FBQ0MsZ0JBQVIsRUFBdEI7QUFFQUMsRUFBQUEsTUFBTSxDQUFDSCxhQUFELENBQU4sQ0FBc0JJLEdBQXRCLENBQTBCQyxZQUExQixDQUF1QyxDQUF2QyxFQUEwQyx3QkFBMUM7QUFFQTs7Ozs7QUFJQSxRQUFNQyxnQkFBZ0IsR0FBR04sYUFBYSxDQUFDTyxLQUFkLENBQW9CLENBQUMsQ0FBckIsQ0FBekIsQ0Fka0MsQ0FnQmxDOztBQUNBTixFQUFBQSxPQUFPLENBQUNPLGNBQVIsQ0FBdUJGLGdCQUFnQixDQUFDLENBQUQsQ0FBdkM7QUFFQTs7Ozs7QUFJQSxRQUFNRyxTQUFTLEdBQUdSLE9BQU8sQ0FBQ1MsTUFBUixFQUFsQjtBQUVBUCxFQUFBQSxNQUFNLENBQUNNLFNBQUQsQ0FBTixDQUFrQkUsU0FBbEIsQ0FDSWIsV0FESixFQUVJLGtDQUZKO0FBS0FHLEVBQUFBLE9BQU8sQ0FBQ1csV0FBUjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgdGhlIGdpdmVuIFVSTCB3YXMgb3BlbmVkIGluIGEgbmV3IHdpbmRvd1xuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVXJsIFRoZSBVUkwgdG8gY2hlY2sgZm9yXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5leHBvcnQgZGVmYXVsdCAoZXhwZWN0ZWRVcmwsIHR5cGUpID0+IHtcbi8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cbiAgICAvKipcbiAgICAgKiBBbGwgdGhlIGN1cnJlbnQgd2luZG93IGhhbmRsZXNcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIGNvbnN0IHdpbmRvd0hhbmRsZXMgPSBicm93c2VyLmdldFdpbmRvd0hhbmRsZXMoKTtcblxuICAgIGV4cGVjdCh3aW5kb3dIYW5kbGVzKS5ub3QudG9IYXZlTGVuZ3RoKDEsICdBIHBvcHVwIHdhcyBub3Qgb3BlbmVkJyk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbGFzdCBvcGVuZWQgd2luZG93IGhhbmRsZVxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgY29uc3QgbGFzdFdpbmRvd0hhbmRsZSA9IHdpbmRvd0hhbmRsZXMuc2xpY2UoLTEpO1xuXG4gICAgLy8gTWFrZSBzdXJlIHdlIGZvY3VzIG9uIHRoZSBsYXN0IG9wZW5lZCB3aW5kb3cgaGFuZGxlXG4gICAgYnJvd3Nlci5zd2l0Y2hUb1dpbmRvdyhsYXN0V2luZG93SGFuZGxlWzBdKTtcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgVVJMIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCB3aW5kb3dVcmwgPSBicm93c2VyLmdldFVybCgpO1xuXG4gICAgZXhwZWN0KHdpbmRvd1VybCkudG9Db250YWluKFxuICAgICAgICBleHBlY3RlZFVybCxcbiAgICAgICAgJ1RoZSBwb3B1cCBoYXMgYSBpbmNvcnJlY3QgZ2V0VXJsJ1xuICAgICk7XG5cbiAgICBicm93c2VyLmNsb3NlV2luZG93KCk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkIsOpenedInNewWindow.js"
      ],
      "names": [
        "expectedUrl",
        "type",
        "windowHandles",
        "browser",
        "getWindowHandles",
        "expect",
        "not",
        "toHaveLength",
        "lastWindowHandle",
        "slice",
        "switchToWindow",
        "windowUrl",
        "getUrl",
        "toContain",
        "closeWindow"
      ],
      "mappings": ";;;;;;;AAAA;;;;;AAIA;eACe,CAACA,WAAD,EAAcC,IAAd,KAAuB;AACtC;;AACI;;;;AAIA,QAAMC,aAAa,GAAGC,OAAO,CAACC,gBAAR,EAAtB;AAEAC,EAAAA,MAAM,CAACH,aAAD,CAAN,CAAsBI,GAAtB,CAA0BC,YAA1B,CAAuC,CAAvC,EAA0C,wBAA1C;AAEA;;;;;AAIA,QAAMC,gBAAgB,GAAGN,aAAa,CAACO,KAAd,CAAoB,CAAC,CAArB,CAAzB,CAdkC,CAgBlC;;AACAN,EAAAA,OAAO,CAACO,cAAR,CAAuBF,gBAAgB,CAAC,CAAD,CAAvC;AAEA;;;;;AAIA,QAAMG,SAAS,GAAGR,OAAO,CAACS,MAAR,EAAlB;AAEAP,EAAAA,MAAM,CAACM,SAAD,CAAN,CAAkBE,SAAlB,CACIb,WADJ,EAEI,kCAFJ;AAKAG,EAAAA,OAAO,CAACW,WAAR;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given URL was opened in a new window\n * @param  {String}   expectedUrl The URL to check for\n */\n/* eslint-disable no-unused-vars */\nexport default (expectedUrl, type) => {\n/* eslint-enable no-unused-vars */\n    /**\n     * All the current window handles\n     * @type {Object}\n     */\n    const windowHandles = browser.getWindowHandles();\n\n    expect(windowHandles).not.toHaveLength(1, 'A popup was not opened');\n\n    /**\n     * The last opened window handle\n     * @type {Object}\n     */\n    const lastWindowHandle = windowHandles.slice(-1);\n\n    // Make sure we focus on the last opened window handle\n    browser.switchToWindow(lastWindowHandle[0]);\n\n    /**\n     * Get the URL of the current browser window\n     * @type {String}\n     */\n    const windowUrl = browser.getUrl();\n\n    expect(windowUrl).toContain(\n        expectedUrl,\n        'The popup has a incorrect getUrl'\n    );\n\n    browser.closeWindow();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModalText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModalText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModalText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkModalText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkModalText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the text of a modal\n * @param  {String}   modalType     The type of modal that is expected\n *                                  (alertbox, confirmbox or prompt)\n * @param  {String}   falseState    Whether to check if the text matches or not\n * @param  {String}   expectedText  The text to check against\n */\nvar _default = (modalType, falseState, expectedText) => {\n  try {\n    /**\n     * The text of the current modal\n     * @type {String}\n     */\n    const text = browser.getAlertText();\n\n    if (falseState) {\n      expect(text).not.toEqual(expectedText, `Expected the text of ${modalType} not to equal ` + `\"${expectedText}\"`);\n    } else {\n      expect(text).toEqual(expectedText, `Expected the text of ${modalType} to equal ` + `\"${expectedText}\", instead found \"${text}\"`);\n    }\n  } catch (e) {\n    throw new Error(`A ${modalType} was not opened when it should have been opened`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrTW9kYWxUZXh0LmpzIl0sIm5hbWVzIjpbIm1vZGFsVHlwZSIsImZhbHNlU3RhdGUiLCJleHBlY3RlZFRleHQiLCJ0ZXh0IiwiYnJvd3NlciIsImdldEFsZXJ0VGV4dCIsImV4cGVjdCIsIm5vdCIsInRvRXF1YWwiLCJlIiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7OztlQU9lLENBQUNBLFNBQUQsRUFBWUMsVUFBWixFQUF3QkMsWUFBeEIsS0FBeUM7QUFDcEQsTUFBSTtBQUNBOzs7O0FBSUEsVUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLFlBQVIsRUFBYjs7QUFFQSxRQUFJSixVQUFKLEVBQWdCO0FBQ1pLLE1BQUFBLE1BQU0sQ0FBQ0gsSUFBRCxDQUFOLENBQWFJLEdBQWIsQ0FBaUJDLE9BQWpCLENBQ0lOLFlBREosRUFFSyx3QkFBdUJGLFNBQVUsZ0JBQWxDLEdBQ0csSUFBR0UsWUFBYSxHQUh2QjtBQUtILEtBTkQsTUFNTztBQUNISSxNQUFBQSxNQUFNLENBQUNILElBQUQsQ0FBTixDQUFhSyxPQUFiLENBQ0lOLFlBREosRUFFSyx3QkFBdUJGLFNBQVUsWUFBbEMsR0FDRyxJQUFHRSxZQUFhLHFCQUFvQkMsSUFBSyxHQUhoRDtBQUtIO0FBQ0osR0FwQkQsQ0FvQkUsT0FBT00sQ0FBUCxFQUFVO0FBQ1IsVUFBTSxJQUFJQyxLQUFKLENBQVcsS0FBSVYsU0FBVSxpREFBekIsQ0FBTjtBQUNIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayB0aGUgdGV4dCBvZiBhIG1vZGFsXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgbW9kYWxUeXBlICAgICBUaGUgdHlwZSBvZiBtb2RhbCB0aGF0IGlzIGV4cGVjdGVkXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYWxlcnRib3gsIGNvbmZpcm1ib3ggb3IgcHJvbXB0KVxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlU3RhdGUgICAgV2hldGhlciB0byBjaGVjayBpZiB0aGUgdGV4dCBtYXRjaGVzIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVGV4dCAgVGhlIHRleHQgdG8gY2hlY2sgYWdhaW5zdFxuICovXG5leHBvcnQgZGVmYXVsdCAobW9kYWxUeXBlLCBmYWxzZVN0YXRlLCBleHBlY3RlZFRleHQpID0+IHtcbiAgICB0cnkge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIHRleHQgb2YgdGhlIGN1cnJlbnQgbW9kYWxcbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IHRleHQgPSBicm93c2VyLmdldEFsZXJ0VGV4dCgpO1xuXG4gICAgICAgIGlmIChmYWxzZVN0YXRlKSB7XG4gICAgICAgICAgICBleHBlY3QodGV4dCkubm90LnRvRXF1YWwoXG4gICAgICAgICAgICAgICAgZXhwZWN0ZWRUZXh0LFxuICAgICAgICAgICAgICAgIGBFeHBlY3RlZCB0aGUgdGV4dCBvZiAke21vZGFsVHlwZX0gbm90IHRvIGVxdWFsIGBcbiAgICAgICAgICAgICAgICArIGBcIiR7ZXhwZWN0ZWRUZXh0fVwiYFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4cGVjdCh0ZXh0KS50b0VxdWFsKFxuICAgICAgICAgICAgICAgIGV4cGVjdGVkVGV4dCxcbiAgICAgICAgICAgICAgICBgRXhwZWN0ZWQgdGhlIHRleHQgb2YgJHttb2RhbFR5cGV9IHRvIGVxdWFsIGBcbiAgICAgICAgICAgICAgICArIGBcIiR7ZXhwZWN0ZWRUZXh0fVwiLCBpbnN0ZWFkIGZvdW5kIFwiJHt0ZXh0fVwiYFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBICR7bW9kYWxUeXBlfSB3YXMgbm90IG9wZW5lZCB3aGVuIGl0IHNob3VsZCBoYXZlIGJlZW4gb3BlbmVkYCk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkModalText.js"
      ],
      "names": [
        "modalType",
        "falseState",
        "expectedText",
        "text",
        "browser",
        "getAlertText",
        "expect",
        "not",
        "toEqual",
        "e",
        "Error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,KAAyC;AACpD,MAAI;AACA;;;;AAIA,UAAMC,IAAI,GAAGC,OAAO,CAACC,YAAR,EAAb;;AAEA,QAAIJ,UAAJ,EAAgB;AACZK,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,GAAb,CAAiBC,OAAjB,CACIN,YADJ,EAEK,wBAAuBF,SAAU,gBAAlC,GACG,IAAGE,YAAa,GAHvB;AAKH,KAND,MAMO;AACHI,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaK,OAAb,CACIN,YADJ,EAEK,wBAAuBF,SAAU,YAAlC,GACG,IAAGE,YAAa,qBAAoBC,IAAK,GAHhD;AAKH;AACJ,GApBD,CAoBE,OAAOM,CAAP,EAAU;AACR,UAAM,IAAIC,KAAJ,CAAW,KAAIV,SAAU,iDAAzB,CAAN;AACH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the text of a modal\n * @param  {String}   modalType     The type of modal that is expected\n *                                  (alertbox, confirmbox or prompt)\n * @param  {String}   falseState    Whether to check if the text matches or not\n * @param  {String}   expectedText  The text to check against\n */\nexport default (modalType, falseState, expectedText) => {\n    try {\n        /**\n         * The text of the current modal\n         * @type {String}\n         */\n        const text = browser.getAlertText();\n\n        if (falseState) {\n            expect(text).not.toEqual(\n                expectedText,\n                `Expected the text of ${modalType} not to equal `\n                + `\"${expectedText}\"`\n            );\n        } else {\n            expect(text).toEqual(\n                expectedText,\n                `Expected the text of ${modalType} to equal `\n                + `\"${expectedText}\", instead found \"${text}\"`\n            );\n        }\n    } catch (e) {\n        throw new Error(`A ${modalType} was not opened when it should have been opened`);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkNewWindow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkNewWindow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkNewWindow.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkNewWindow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkNewWindow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if a new window or tab is opened\n * @param  {String}   obsolete  The type of opened object (window or tab)\n * @param  {String}   falseCase Whether to check if a new window/tab was opened\n *                              or not\n */\nvar _default = (obsolete, falseCase) => {\n  /**\n   * The handles of all open windows/tabs\n   * @type {Object}\n   */\n  const windowHandles = browser.getWindowHandles();\n\n  if (falseCase) {\n    expect(windowHandles).toHaveLength(1, 'A new window should not have been opened');\n  } else {\n    expect(windowHandles).not.toHaveLength(1, 'A new window has been opened');\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrTmV3V2luZG93LmpzIl0sIm5hbWVzIjpbIm9ic29sZXRlIiwiZmFsc2VDYXNlIiwid2luZG93SGFuZGxlcyIsImJyb3dzZXIiLCJnZXRXaW5kb3dIYW5kbGVzIiwiZXhwZWN0IiwidG9IYXZlTGVuZ3RoIiwibm90Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxLQUF5QjtBQUNwQzs7OztBQUlBLFFBQU1DLGFBQWEsR0FBR0MsT0FBTyxDQUFDQyxnQkFBUixFQUF0Qjs7QUFFQSxNQUFJSCxTQUFKLEVBQWU7QUFDWEksSUFBQUEsTUFBTSxDQUFDSCxhQUFELENBQU4sQ0FDS0ksWUFETCxDQUNrQixDQURsQixFQUNxQiwwQ0FEckI7QUFFSCxHQUhELE1BR087QUFDSEQsSUFBQUEsTUFBTSxDQUFDSCxhQUFELENBQU4sQ0FDS0ssR0FETCxDQUNTRCxZQURULENBQ3NCLENBRHRCLEVBQ3lCLDhCQUR6QjtBQUVIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiBhIG5ldyB3aW5kb3cgb3IgdGFiIGlzIG9wZW5lZFxuICogQHBhcmFtICB7U3RyaW5nfSAgIG9ic29sZXRlICBUaGUgdHlwZSBvZiBvcGVuZWQgb2JqZWN0ICh3aW5kb3cgb3IgdGFiKVxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSBXaGV0aGVyIHRvIGNoZWNrIGlmIGEgbmV3IHdpbmRvdy90YWIgd2FzIG9wZW5lZFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBub3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG9ic29sZXRlLCBmYWxzZUNhc2UpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgaGFuZGxlcyBvZiBhbGwgb3BlbiB3aW5kb3dzL3RhYnNcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIGNvbnN0IHdpbmRvd0hhbmRsZXMgPSBicm93c2VyLmdldFdpbmRvd0hhbmRsZXMoKTtcblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KHdpbmRvd0hhbmRsZXMpXG4gICAgICAgICAgICAudG9IYXZlTGVuZ3RoKDEsICdBIG5ldyB3aW5kb3cgc2hvdWxkIG5vdCBoYXZlIGJlZW4gb3BlbmVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KHdpbmRvd0hhbmRsZXMpXG4gICAgICAgICAgICAubm90LnRvSGF2ZUxlbmd0aCgxLCAnQSBuZXcgd2luZG93IGhhcyBiZWVuIG9wZW5lZCcpO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkNewWindow.js"
      ],
      "names": [
        "obsolete",
        "falseCase",
        "windowHandles",
        "browser",
        "getWindowHandles",
        "expect",
        "toHaveLength",
        "not"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,aAAa,GAAGC,OAAO,CAACC,gBAAR,EAAtB;;AAEA,MAAIH,SAAJ,EAAe;AACXI,IAAAA,MAAM,CAACH,aAAD,CAAN,CACKI,YADL,CACkB,CADlB,EACqB,0CADrB;AAEH,GAHD,MAGO;AACHD,IAAAA,MAAM,CAACH,aAAD,CAAN,CACKK,GADL,CACSD,YADT,CACsB,CADtB,EACyB,8BADzB;AAEH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if a new window or tab is opened\n * @param  {String}   obsolete  The type of opened object (window or tab)\n * @param  {String}   falseCase Whether to check if a new window/tab was opened\n *                              or not\n */\nexport default (obsolete, falseCase) => {\n    /**\n     * The handles of all open windows/tabs\n     * @type {Object}\n     */\n    const windowHandles = browser.getWindowHandles();\n\n    if (falseCase) {\n        expect(windowHandles)\n            .toHaveLength(1, 'A new window should not have been opened');\n    } else {\n        expect(windowHandles)\n            .not.toHaveLength(1, 'A new window has been opened');\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFontProperty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFontProperty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFontProperty.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkFontProperty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkFontProperty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the given property of the given element\n * @param  {String}   isCSS         Whether to check for a CSS property or an\n *                                  attribute\n * @param  {String}   attrName      The name of the attribute to check\n * @param  {String}   elem          Element selector\n * @param  {String}   falseCase     Whether to check if the value of the\n *                                  attribute matches or not\n * @param  {String}   expectedValue The value to match against\n */\nvar _default = (isCSS, attrName, elem, falseCase, expectedValue) => {\n  /**\n   * The command to use for fetching the expected value\n   * @type {String}\n   */\n  const command = isCSS ? 'getCssProperty' : 'getAttribute';\n  /**\n   * Te label to identify the attribute by\n   * @type {String}\n   */\n\n  const attrType = isCSS ? 'CSS attribute' : 'Attribute';\n  /**\n   * The actual attribute value\n   * @type {Mixed}\n   */\n\n  let attributeValue = browser[command](elem, attrName);\n  /**\n   * when getting something with a color or font-weight WebdriverIO returns a\n   * object but we want to assert against a string\n   */\n\n  if (attrName.match(/(font-size|line-height|display|font-weight)/)) {\n    attributeValue = attributeValue.value;\n  }\n\n  if (falseCase) {\n    expect(attributeValue).not.toBe(expectedValue, `${attrType}: ${attrName} of element \"${elem}\" should not ` + `contain \"${attributeValue}\"`);\n  } else {\n    expect(attributeValue).toBe(expectedValue, `${attrType}: ${attrName} of element \"${elem}\" should contain ` + `\"${attributeValue}\", but \"${expectedValue}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrRm9udFByb3BlcnR5LmpzIl0sIm5hbWVzIjpbImlzQ1NTIiwiYXR0ck5hbWUiLCJlbGVtIiwiZmFsc2VDYXNlIiwiZXhwZWN0ZWRWYWx1ZSIsImNvbW1hbmQiLCJhdHRyVHlwZSIsImF0dHJpYnV0ZVZhbHVlIiwiYnJvd3NlciIsIm1hdGNoIiwidmFsdWUiLCJleHBlY3QiLCJub3QiLCJ0b0JlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7ZUFVZSxDQUFDQSxLQUFELEVBQVFDLFFBQVIsRUFBa0JDLElBQWxCLEVBQXdCQyxTQUF4QixFQUFtQ0MsYUFBbkMsS0FBcUQ7QUFDaEU7Ozs7QUFJQSxRQUFNQyxPQUFPLEdBQUdMLEtBQUssR0FBRyxnQkFBSCxHQUFzQixjQUEzQztBQUVBOzs7OztBQUlBLFFBQU1NLFFBQVEsR0FBSU4sS0FBSyxHQUFHLGVBQUgsR0FBcUIsV0FBNUM7QUFFQTs7Ozs7QUFJQSxNQUFJTyxjQUFjLEdBQUdDLE9BQU8sQ0FBQ0gsT0FBRCxDQUFQLENBQWlCSCxJQUFqQixFQUF1QkQsUUFBdkIsQ0FBckI7QUFFQTs7Ozs7QUFJQSxNQUFJQSxRQUFRLENBQUNRLEtBQVQsQ0FBZSw2Q0FBZixDQUFKLEVBQW1FO0FBQy9ERixJQUFBQSxjQUFjLEdBQUdBLGNBQWMsQ0FBQ0csS0FBaEM7QUFDSDs7QUFFRCxNQUFJUCxTQUFKLEVBQWU7QUFDWFEsSUFBQUEsTUFBTSxDQUFDSixjQUFELENBQU4sQ0FBdUJLLEdBQXZCLENBQTJCQyxJQUEzQixDQUNJVCxhQURKLEVBRUssR0FBRUUsUUFBUyxLQUFJTCxRQUFTLGdCQUFlQyxJQUFLLGVBQTdDLEdBQ0csWUFBV0ssY0FBZSxHQUhqQztBQUtILEdBTkQsTUFNTztBQUNISSxJQUFBQSxNQUFNLENBQUNKLGNBQUQsQ0FBTixDQUF1Qk0sSUFBdkIsQ0FDSVQsYUFESixFQUVLLEdBQUVFLFFBQVMsS0FBSUwsUUFBUyxnQkFBZUMsSUFBSyxtQkFBN0MsR0FDRyxJQUFHSyxjQUFlLFdBQVVILGFBQWMsR0FIakQ7QUFLSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgdGhlIGdpdmVuIHByb3BlcnR5IG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgaXNDU1MgICAgICAgICBXaGV0aGVyIHRvIGNoZWNrIGZvciBhIENTUyBwcm9wZXJ0eSBvciBhblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgYXR0ck5hbWUgICAgICBUaGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlIHRvIGNoZWNrXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZWxlbSAgICAgICAgICBFbGVtZW50IHNlbGVjdG9yXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmFsc2VDYXNlICAgICBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSB2YWx1ZSBvZiB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZSBtYXRjaGVzIG9yIG5vdFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGV4cGVjdGVkVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKGlzQ1NTLCBhdHRyTmFtZSwgZWxlbSwgZmFsc2VDYXNlLCBleHBlY3RlZFZhbHVlKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbW1hbmQgdG8gdXNlIGZvciBmZXRjaGluZyB0aGUgZXhwZWN0ZWQgdmFsdWVcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IGNvbW1hbmQgPSBpc0NTUyA/ICdnZXRDc3NQcm9wZXJ0eScgOiAnZ2V0QXR0cmlidXRlJztcblxuICAgIC8qKlxuICAgICAqIFRlIGxhYmVsIHRvIGlkZW50aWZ5IHRoZSBhdHRyaWJ1dGUgYnlcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IGF0dHJUeXBlID0gKGlzQ1NTID8gJ0NTUyBhdHRyaWJ1dGUnIDogJ0F0dHJpYnV0ZScpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIGFjdHVhbCBhdHRyaWJ1dGUgdmFsdWVcbiAgICAgKiBAdHlwZSB7TWl4ZWR9XG4gICAgICovXG4gICAgbGV0IGF0dHJpYnV0ZVZhbHVlID0gYnJvd3Nlcltjb21tYW5kXShlbGVtLCBhdHRyTmFtZSk7XG5cbiAgICAvKipcbiAgICAgKiB3aGVuIGdldHRpbmcgc29tZXRoaW5nIHdpdGggYSBjb2xvciBvciBmb250LXdlaWdodCBXZWJkcml2ZXJJTyByZXR1cm5zIGFcbiAgICAgKiBvYmplY3QgYnV0IHdlIHdhbnQgdG8gYXNzZXJ0IGFnYWluc3QgYSBzdHJpbmdcbiAgICAgKi9cbiAgICBpZiAoYXR0ck5hbWUubWF0Y2goLyhmb250LXNpemV8bGluZS1oZWlnaHR8ZGlzcGxheXxmb250LXdlaWdodCkvKSkge1xuICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IGF0dHJpYnV0ZVZhbHVlLnZhbHVlO1xuICAgIH1cblxuICAgIGlmIChmYWxzZUNhc2UpIHtcbiAgICAgICAgZXhwZWN0KGF0dHJpYnV0ZVZhbHVlKS5ub3QudG9CZShcbiAgICAgICAgICAgIGV4cGVjdGVkVmFsdWUsXG4gICAgICAgICAgICBgJHthdHRyVHlwZX06ICR7YXR0ck5hbWV9IG9mIGVsZW1lbnQgXCIke2VsZW19XCIgc2hvdWxkIG5vdCBgXG4gICAgICAgICAgICArIGBjb250YWluIFwiJHthdHRyaWJ1dGVWYWx1ZX1cImBcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoYXR0cmlidXRlVmFsdWUpLnRvQmUoXG4gICAgICAgICAgICBleHBlY3RlZFZhbHVlLFxuICAgICAgICAgICAgYCR7YXR0clR5cGV9OiAke2F0dHJOYW1lfSBvZiBlbGVtZW50IFwiJHtlbGVtfVwiIHNob3VsZCBjb250YWluIGBcbiAgICAgICAgICAgICsgYFwiJHthdHRyaWJ1dGVWYWx1ZX1cIiwgYnV0IFwiJHtleHBlY3RlZFZhbHVlfVwiYFxuICAgICAgICApO1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "checkFontProperty.js"
      ],
      "names": [
        "isCSS",
        "attrName",
        "elem",
        "falseCase",
        "expectedValue",
        "command",
        "attrType",
        "attributeValue",
        "browser",
        "match",
        "value",
        "expect",
        "not",
        "toBe"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;eAUe,CAACA,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,aAAnC,KAAqD;AAChE;;;;AAIA,QAAMC,OAAO,GAAGL,KAAK,GAAG,gBAAH,GAAsB,cAA3C;AAEA;;;;;AAIA,QAAMM,QAAQ,GAAIN,KAAK,GAAG,eAAH,GAAqB,WAA5C;AAEA;;;;;AAIA,MAAIO,cAAc,GAAGC,OAAO,CAACH,OAAD,CAAP,CAAiBH,IAAjB,EAAuBD,QAAvB,CAArB;AAEA;;;;;AAIA,MAAIA,QAAQ,CAACQ,KAAT,CAAe,6CAAf,CAAJ,EAAmE;AAC/DF,IAAAA,cAAc,GAAGA,cAAc,CAACG,KAAhC;AACH;;AAED,MAAIP,SAAJ,EAAe;AACXQ,IAAAA,MAAM,CAACJ,cAAD,CAAN,CAAuBK,GAAvB,CAA2BC,IAA3B,CACIT,aADJ,EAEK,GAAEE,QAAS,KAAIL,QAAS,gBAAeC,IAAK,eAA7C,GACG,YAAWK,cAAe,GAHjC;AAKH,GAND,MAMO;AACHI,IAAAA,MAAM,CAACJ,cAAD,CAAN,CAAuBM,IAAvB,CACIT,aADJ,EAEK,GAAEE,QAAS,KAAIL,QAAS,gBAAeC,IAAK,mBAA7C,GACG,IAAGK,cAAe,WAAUH,aAAc,GAHjD;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the given property of the given element\n * @param  {String}   isCSS         Whether to check for a CSS property or an\n *                                  attribute\n * @param  {String}   attrName      The name of the attribute to check\n * @param  {String}   elem          Element selector\n * @param  {String}   falseCase     Whether to check if the value of the\n *                                  attribute matches or not\n * @param  {String}   expectedValue The value to match against\n */\nexport default (isCSS, attrName, elem, falseCase, expectedValue) => {\n    /**\n     * The command to use for fetching the expected value\n     * @type {String}\n     */\n    const command = isCSS ? 'getCssProperty' : 'getAttribute';\n\n    /**\n     * Te label to identify the attribute by\n     * @type {String}\n     */\n    const attrType = (isCSS ? 'CSS attribute' : 'Attribute');\n\n    /**\n     * The actual attribute value\n     * @type {Mixed}\n     */\n    let attributeValue = browser[command](elem, attrName);\n\n    /**\n     * when getting something with a color or font-weight WebdriverIO returns a\n     * object but we want to assert against a string\n     */\n    if (attrName.match(/(font-size|line-height|display|font-weight)/)) {\n        attributeValue = attributeValue.value;\n    }\n\n    if (falseCase) {\n        expect(attributeValue).not.toBe(\n            expectedValue,\n            `${attrType}: ${attrName} of element \"${elem}\" should not `\n            + `contain \"${attributeValue}\"`\n        );\n    } else {\n        expect(attributeValue).toBe(\n            expectedValue,\n            `${attrType}: ${attrName} of element \"${elem}\" should contain `\n            + `\"${attributeValue}\", but \"${expectedValue}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitleContains.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitleContains.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitleContains.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkTitleContains.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkTitleContains.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check the title of the current browser window contains expected text/title\n * @param  {Type}     falseCase     Whether to check if the title contains the\n *                                  expected value or not\n * @param  {Type}     expectedTitle The expected title\n */\nvar _default = (falseCase, expectedTitle) => {\n  /**\n   * The actual title of the current browser window\n   * @type {String}\n   */\n  const title = browser.getTitle();\n\n  if (falseCase) {\n    expect(title).not.toContain(expectedTitle, `Expected title not to contain \"${expectedTitle}\"`);\n  } else {\n    expect(title).toContain(expectedTitle, `Expected title to contain \"${expectedTitle}\" but found \"${title}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrVGl0bGVDb250YWlucy5qcyJdLCJuYW1lcyI6WyJmYWxzZUNhc2UiLCJleHBlY3RlZFRpdGxlIiwidGl0bGUiLCJicm93c2VyIiwiZ2V0VGl0bGUiLCJleHBlY3QiLCJub3QiLCJ0b0NvbnRhaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBTWUsQ0FBQ0EsU0FBRCxFQUFZQyxhQUFaLEtBQThCO0FBQ3pDOzs7O0FBSUEsUUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUNDLFFBQVIsRUFBZDs7QUFFQSxNQUFJSixTQUFKLEVBQWU7QUFDWEssSUFBQUEsTUFBTSxDQUFDSCxLQUFELENBQU4sQ0FBY0ksR0FBZCxDQUFrQkMsU0FBbEIsQ0FDSU4sYUFESixFQUVLLGtDQUFpQ0EsYUFBYyxHQUZwRDtBQUlILEdBTEQsTUFLTztBQUNISSxJQUFBQSxNQUFNLENBQUNILEtBQUQsQ0FBTixDQUFjSyxTQUFkLENBQ0lOLGFBREosRUFFSyw4QkFBNkJBLGFBQWMsZ0JBQWVDLEtBQU0sR0FGckU7QUFJSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2NoZWNrLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgdGhlIHRpdGxlIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93IGNvbnRhaW5zIGV4cGVjdGVkIHRleHQvdGl0bGVcbiAqIEBwYXJhbSAge1R5cGV9ICAgICBmYWxzZUNhc2UgICAgIFdoZXRoZXIgdG8gY2hlY2sgaWYgdGhlIHRpdGxlIGNvbnRhaW5zIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQgdmFsdWUgb3Igbm90XG4gKiBAcGFyYW0gIHtUeXBlfSAgICAgZXhwZWN0ZWRUaXRsZSBUaGUgZXhwZWN0ZWQgdGl0bGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKGZhbHNlQ2FzZSwgZXhwZWN0ZWRUaXRsZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBhY3R1YWwgdGl0bGUgb2YgdGhlIGN1cnJlbnQgYnJvd3NlciB3aW5kb3dcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IHRpdGxlID0gYnJvd3Nlci5nZXRUaXRsZSgpO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QodGl0bGUpLm5vdC50b0NvbnRhaW4oXG4gICAgICAgICAgICBleHBlY3RlZFRpdGxlLFxuICAgICAgICAgICAgYEV4cGVjdGVkIHRpdGxlIG5vdCB0byBjb250YWluIFwiJHtleHBlY3RlZFRpdGxlfVwiYFxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdCh0aXRsZSkudG9Db250YWluKFxuICAgICAgICAgICAgZXhwZWN0ZWRUaXRsZSxcbiAgICAgICAgICAgIGBFeHBlY3RlZCB0aXRsZSB0byBjb250YWluIFwiJHtleHBlY3RlZFRpdGxlfVwiIGJ1dCBmb3VuZCBcIiR7dGl0bGV9XCJgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkTitleContains.js"
      ],
      "names": [
        "falseCase",
        "expectedTitle",
        "title",
        "browser",
        "getTitle",
        "expect",
        "not",
        "toContain"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,aAAZ,KAA8B;AACzC;;;;AAIA,QAAMC,KAAK,GAAGC,OAAO,CAACC,QAAR,EAAd;;AAEA,MAAIJ,SAAJ,EAAe;AACXK,IAAAA,MAAM,CAACH,KAAD,CAAN,CAAcI,GAAd,CAAkBC,SAAlB,CACIN,aADJ,EAEK,kCAAiCA,aAAc,GAFpD;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACH,KAAD,CAAN,CAAcK,SAAd,CACIN,aADJ,EAEK,8BAA6BA,aAAc,gBAAeC,KAAM,GAFrE;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check the title of the current browser window contains expected text/title\n * @param  {Type}     falseCase     Whether to check if the title contains the\n *                                  expected value or not\n * @param  {Type}     expectedTitle The expected title\n */\nexport default (falseCase, expectedTitle) => {\n    /**\n     * The actual title of the current browser window\n     * @type {String}\n     */\n    const title = browser.getTitle();\n\n    if (falseCase) {\n        expect(title).not.toContain(\n            expectedTitle,\n            `Expected title not to contain \"${expectedTitle}\"`\n        );\n    } else {\n        expect(title).toContain(\n            expectedTitle,\n            `Expected title to contain \"${expectedTitle}\" but found \"${title}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURLPath.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURLPath.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURLPath.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkURLPath.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkURLPath.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the current URL path matches the given path\n * @param  {String}   falseCase    Whether to check if the path matches the\n *                                 expected value or not\n * @param  {String}   expectedPath The expected path to match against\n */\nvar _default = (falseCase, expectedPath) => {\n  /**\n   * The URL of the current browser window\n   * @type {String}\n   */\n  let currentUrl = browser.getUrl().replace(/http(s?):\\/\\//, '');\n  /**\n   * The base URL of the current browser window\n   * @type {Object}\n   */\n\n  const domain = `${currentUrl.split('/')[0]}`;\n  currentUrl = currentUrl.replace(domain, '');\n\n  if (falseCase) {\n    expect(currentUrl).not.toEqual(expectedPath, `expected path not to be \"${currentUrl}\"`);\n  } else {\n    expect(currentUrl).toEqual(expectedPath, `expected path to be \"${expectedPath}\" but found ` + `\"${currentUrl}\"`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrVVJMUGF0aC5qcyJdLCJuYW1lcyI6WyJmYWxzZUNhc2UiLCJleHBlY3RlZFBhdGgiLCJjdXJyZW50VXJsIiwiYnJvd3NlciIsImdldFVybCIsInJlcGxhY2UiLCJkb21haW4iLCJzcGxpdCIsImV4cGVjdCIsIm5vdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBTWUsQ0FBQ0EsU0FBRCxFQUFZQyxZQUFaLEtBQTZCO0FBQ3hDOzs7O0FBSUEsTUFBSUMsVUFBVSxHQUFHQyxPQUFPLENBQUNDLE1BQVIsR0FBaUJDLE9BQWpCLENBQXlCLGVBQXpCLEVBQTBDLEVBQTFDLENBQWpCO0FBRUE7Ozs7O0FBSUEsUUFBTUMsTUFBTSxHQUFJLEdBQUVKLFVBQVUsQ0FBQ0ssS0FBWCxDQUFpQixHQUFqQixFQUFzQixDQUF0QixDQUF5QixFQUEzQztBQUVBTCxFQUFBQSxVQUFVLEdBQUdBLFVBQVUsQ0FBQ0csT0FBWCxDQUFtQkMsTUFBbkIsRUFBMkIsRUFBM0IsQ0FBYjs7QUFFQSxNQUFJTixTQUFKLEVBQWU7QUFDWFEsSUFBQUEsTUFBTSxDQUFDTixVQUFELENBQU4sQ0FDS08sR0FETCxDQUNTQyxPQURULENBQ2lCVCxZQURqQixFQUNnQyw0QkFBMkJDLFVBQVcsR0FEdEU7QUFFSCxHQUhELE1BR087QUFDSE0sSUFBQUEsTUFBTSxDQUFDTixVQUFELENBQU4sQ0FBbUJRLE9BQW5CLENBQ0lULFlBREosRUFFSyx3QkFBdUJBLFlBQWEsY0FBckMsR0FDRyxJQUFHQyxVQUFXLEdBSHJCO0FBS0g7QUFDSixDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9jaGVjay8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIHRoZSBjdXJyZW50IFVSTCBwYXRoIG1hdGNoZXMgdGhlIGdpdmVuIHBhdGhcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgICAgV2hldGhlciB0byBjaGVjayBpZiB0aGUgcGF0aCBtYXRjaGVzIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZCB2YWx1ZSBvciBub3RcbiAqIEBwYXJhbSAge1N0cmluZ30gICBleHBlY3RlZFBhdGggVGhlIGV4cGVjdGVkIHBhdGggdG8gbWF0Y2ggYWdhaW5zdFxuICovXG5leHBvcnQgZGVmYXVsdCAoZmFsc2VDYXNlLCBleHBlY3RlZFBhdGgpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgVVJMIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgY3VycmVudFVybCA9IGJyb3dzZXIuZ2V0VXJsKCkucmVwbGFjZSgvaHR0cChzPyk6XFwvXFwvLywgJycpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIGJhc2UgVVJMIG9mIHRoZSBjdXJyZW50IGJyb3dzZXIgd2luZG93XG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBjb25zdCBkb21haW4gPSBgJHtjdXJyZW50VXJsLnNwbGl0KCcvJylbMF19YDtcblxuICAgIGN1cnJlbnRVcmwgPSBjdXJyZW50VXJsLnJlcGxhY2UoZG9tYWluLCAnJyk7XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChjdXJyZW50VXJsKVxuICAgICAgICAgICAgLm5vdC50b0VxdWFsKGV4cGVjdGVkUGF0aCwgYGV4cGVjdGVkIHBhdGggbm90IHRvIGJlIFwiJHtjdXJyZW50VXJsfVwiYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGN1cnJlbnRVcmwpLnRvRXF1YWwoXG4gICAgICAgICAgICBleHBlY3RlZFBhdGgsXG4gICAgICAgICAgICBgZXhwZWN0ZWQgcGF0aCB0byBiZSBcIiR7ZXhwZWN0ZWRQYXRofVwiIGJ1dCBmb3VuZCBgXG4gICAgICAgICAgICArIGBcIiR7Y3VycmVudFVybH1cImBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkURLPath.js"
      ],
      "names": [
        "falseCase",
        "expectedPath",
        "currentUrl",
        "browser",
        "getUrl",
        "replace",
        "domain",
        "split",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,SAAD,EAAYC,YAAZ,KAA6B;AACxC;;;;AAIA,MAAIC,UAAU,GAAGC,OAAO,CAACC,MAAR,GAAiBC,OAAjB,CAAyB,eAAzB,EAA0C,EAA1C,CAAjB;AAEA;;;;;AAIA,QAAMC,MAAM,GAAI,GAAEJ,UAAU,CAACK,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAyB,EAA3C;AAEAL,EAAAA,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmBC,MAAnB,EAA2B,EAA3B,CAAb;;AAEA,MAAIN,SAAJ,EAAe;AACXQ,IAAAA,MAAM,CAACN,UAAD,CAAN,CACKO,GADL,CACSC,OADT,CACiBT,YADjB,EACgC,4BAA2BC,UAAW,GADtE;AAEH,GAHD,MAGO;AACHM,IAAAA,MAAM,CAACN,UAAD,CAAN,CAAmBQ,OAAnB,CACIT,YADJ,EAEK,wBAAuBA,YAAa,cAArC,GACG,IAAGC,UAAW,GAHrB;AAKH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the current URL path matches the given path\n * @param  {String}   falseCase    Whether to check if the path matches the\n *                                 expected value or not\n * @param  {String}   expectedPath The expected path to match against\n */\nexport default (falseCase, expectedPath) => {\n    /**\n     * The URL of the current browser window\n     * @type {String}\n     */\n    let currentUrl = browser.getUrl().replace(/http(s?):\\/\\//, '');\n\n    /**\n     * The base URL of the current browser window\n     * @type {Object}\n     */\n    const domain = `${currentUrl.split('/')[0]}`;\n\n    currentUrl = currentUrl.replace(domain, '');\n\n    if (falseCase) {\n        expect(currentUrl)\n            .not.toEqual(expectedPath, `expected path not to be \"${currentUrl}\"`);\n    } else {\n        expect(currentUrl).toEqual(\n            expectedPath,\n            `expected path to be \"${expectedPath}\" but found `\n            + `\"${currentUrl}\"`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkWithinViewport.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkWithinViewport.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkWithinViewport.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/checkWithinViewport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "checkWithinViewport.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element is visible inside the current viewport\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the element is visible\n *                              within the current viewport or not\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * The state of visibility of the given element inside the viewport\n   * @type {Boolean}\n   */\n  const isDisplayed = $(selector).isDisplayedInViewport();\n\n  if (falseCase) {\n    expect(isDisplayed).not.toEqual(true, `Expected element \"${selector}\" to be outside the viewport`);\n  } else {\n    expect(isDisplayed).toEqual(true, `Expected element \"${selector}\" to be inside the viewport`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrV2l0aGluVmlld3BvcnQuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJpc0Rpc3BsYXllZCIsIiQiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJleHBlY3QiLCJub3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFFBQUQsRUFBV0MsU0FBWCxLQUF5QjtBQUNwQzs7OztBQUlBLFFBQU1DLFdBQVcsR0FBR0MsQ0FBQyxDQUFDSCxRQUFELENBQUQsQ0FBWUkscUJBQVosRUFBcEI7O0FBRUEsTUFBSUgsU0FBSixFQUFlO0FBQ1hJLElBQUFBLE1BQU0sQ0FBQ0gsV0FBRCxDQUFOLENBQW9CSSxHQUFwQixDQUF3QkMsT0FBeEIsQ0FDSSxJQURKLEVBRUsscUJBQW9CUCxRQUFTLDhCQUZsQztBQUlILEdBTEQsTUFLTztBQUNISyxJQUFBQSxNQUFNLENBQUNILFdBQUQsQ0FBTixDQUFvQkssT0FBcEIsQ0FDSSxJQURKLEVBRUsscUJBQW9CUCxRQUFTLDZCQUZsQztBQUlIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBpcyB2aXNpYmxlIGluc2lkZSB0aGUgY3VycmVudCB2aWV3cG9ydFxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSBXaGV0aGVyIHRvIGNoZWNrIGlmIHRoZSBlbGVtZW50IGlzIHZpc2libGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aGluIHRoZSBjdXJyZW50IHZpZXdwb3J0IG9yIG5vdFxuICovXG5leHBvcnQgZGVmYXVsdCAoc2VsZWN0b3IsIGZhbHNlQ2FzZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBzdGF0ZSBvZiB2aXNpYmlsaXR5IG9mIHRoZSBnaXZlbiBlbGVtZW50IGluc2lkZSB0aGUgdmlld3BvcnRcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBjb25zdCBpc0Rpc3BsYXllZCA9ICQoc2VsZWN0b3IpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xuXG4gICAgaWYgKGZhbHNlQ2FzZSkge1xuICAgICAgICBleHBlY3QoaXNEaXNwbGF5ZWQpLm5vdC50b0VxdWFsKFxuICAgICAgICAgICAgdHJ1ZSxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiB0byBiZSBvdXRzaWRlIHRoZSB2aWV3cG9ydGBcbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoaXNEaXNwbGF5ZWQpLnRvRXF1YWwoXG4gICAgICAgICAgICB0cnVlLFxuICAgICAgICAgICAgYEV4cGVjdGVkIGVsZW1lbnQgXCIke3NlbGVjdG9yfVwiIHRvIGJlIGluc2lkZSB0aGUgdmlld3BvcnRgXG4gICAgICAgICk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkWithinViewport.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "isDisplayed",
        "$",
        "isDisplayedInViewport",
        "expect",
        "not",
        "toEqual"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,WAAW,GAAGC,CAAC,CAACH,QAAD,CAAD,CAAYI,qBAAZ,EAApB;;AAEA,MAAIH,SAAJ,EAAe;AACXI,IAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBI,GAApB,CAAwBC,OAAxB,CACI,IADJ,EAEK,qBAAoBP,QAAS,8BAFlC;AAIH,GALD,MAKO;AACHK,IAAAA,MAAM,CAACH,WAAD,CAAN,CAAoBK,OAApB,CACI,IADJ,EAEK,qBAAoBP,QAAS,6BAFlC;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given element is visible inside the current viewport\n * @param  {String}   selector   Element selector\n * @param  {String}   falseCase Whether to check if the element is visible\n *                              within the current viewport or not\n */\nexport default (selector, falseCase) => {\n    /**\n     * The state of visibility of the given element inside the viewport\n     * @type {Boolean}\n     */\n    const isDisplayed = $(selector).isDisplayedInViewport();\n\n    if (falseCase) {\n        expect(isDisplayed).not.toEqual(\n            true,\n            `Expected element \"${selector}\" to be outside the viewport`\n        );\n    } else {\n        expect(isDisplayed).toEqual(\n            true,\n            `Expected element \"${selector}\" to be inside the viewport`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isExisting.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isExisting.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isExisting.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/isExisting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
        "sourceFileName": "isExisting.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Check if the given element exists in the current DOM\n * @param  {String}   selector  Element selector\n * @param  {String}   falseCase Whether to check if the element exists or not\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * Elements found in the DOM\n   * @type {Object}\n   */\n  const elements = $$(selector);\n\n  if (falseCase) {\n    expect(elements).toHaveLength(0, `Expected element \"${selector}\" not to exist`);\n  } else {\n    expect(elements.length).toBeGreaterThan(0, `Expected element \"${selector}\" to exist`);\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRXhpc3RpbmcuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJlbGVtZW50cyIsIiQkIiwiZXhwZWN0IiwidG9IYXZlTGVuZ3RoIiwibGVuZ3RoIiwidG9CZUdyZWF0ZXJUaGFuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O2VBS2UsQ0FBQ0EsUUFBRCxFQUFXQyxTQUFYLEtBQXlCO0FBQ3BDOzs7O0FBSUEsUUFBTUMsUUFBUSxHQUFHQyxFQUFFLENBQUNILFFBQUQsQ0FBbkI7O0FBRUEsTUFBSUMsU0FBSixFQUFlO0FBQ1hHLElBQUFBLE1BQU0sQ0FBQ0YsUUFBRCxDQUFOLENBQWlCRyxZQUFqQixDQUNJLENBREosRUFFSyxxQkFBb0JMLFFBQVMsZ0JBRmxDO0FBSUgsR0FMRCxNQUtPO0FBQ0hJLElBQUFBLE1BQU0sQ0FBQ0YsUUFBUSxDQUFDSSxNQUFWLENBQU4sQ0FBd0JDLGVBQXhCLENBQ0ksQ0FESixFQUVLLHFCQUFvQlAsUUFBUyxZQUZsQztBQUlIO0FBQ0osQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvY2hlY2svIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBleGlzdHMgaW4gdGhlIGN1cnJlbnQgRE9NXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZUNhc2UgV2hldGhlciB0byBjaGVjayBpZiB0aGUgZWxlbWVudCBleGlzdHMgb3Igbm90XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgZmFsc2VDYXNlKSA9PiB7XG4gICAgLyoqXG4gICAgICogRWxlbWVudHMgZm91bmQgaW4gdGhlIERPTVxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgY29uc3QgZWxlbWVudHMgPSAkJChzZWxlY3Rvcik7XG5cbiAgICBpZiAoZmFsc2VDYXNlKSB7XG4gICAgICAgIGV4cGVjdChlbGVtZW50cykudG9IYXZlTGVuZ3RoKFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiBub3QgdG8gZXhpc3RgXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGVsZW1lbnRzLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGBFeHBlY3RlZCBlbGVtZW50IFwiJHtzZWxlY3Rvcn1cIiB0byBleGlzdGBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "isExisting.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "elements",
        "$$",
        "expect",
        "toHaveLength",
        "length",
        "toBeGreaterThan"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,QAAQ,GAAGC,EAAE,CAACH,QAAD,CAAnB;;AAEA,MAAIC,SAAJ,EAAe;AACXG,IAAAA,MAAM,CAACF,QAAD,CAAN,CAAiBG,YAAjB,CACI,CADJ,EAEK,qBAAoBL,QAAS,gBAFlC;AAIH,GALD,MAKO;AACHI,IAAAA,MAAM,CAACF,QAAQ,CAACI,MAAV,CAAN,CAAwBC,eAAxB,CACI,CADJ,EAEK,qBAAoBP,QAAS,YAFlC;AAIH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/check/",
      "sourcesContent": [
        "/**\n * Check if the given element exists in the current DOM\n * @param  {String}   selector  Element selector\n * @param  {String}   falseCase Whether to check if the element exists or not\n */\nexport default (selector, falseCase) => {\n    /**\n     * Elements found in the DOM\n     * @type {Object}\n     */\n    const elements = $$(selector);\n\n    if (falseCase) {\n        expect(elements).toHaveLength(\n            0,\n            `Expected element \"${selector}\" not to exist`\n        );\n    } else {\n        expect(elements.length).toBeGreaterThan(\n            0,\n            `Expected element \"${selector}\" to exist`\n        );\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitFor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitFor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitFor.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitFor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "waitFor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Wait for the given element to be enabled, displayed, or to exist\n* @param  {String}   selector                  Element selector\n * @param  {String}   ms                       Wait duration (optional)\n * @param  {String}   falseState               Check for opposite state\n * @param  {String}   state                    State to check for (default\n *                                             existence)\n */\nvar _default = (selector, ms, falseState, state) => {\n  /**\n   * Maximum number of milliseconds to wait, default 3000\n   * @type {Int}\n   */\n  const intMs = parseInt(ms, 10) || 3000;\n  /**\n   * Command to perform on the browser object\n   * @type {String}\n   */\n\n  let command = 'waitForExist';\n  /**\n   * Boolean interpretation of the false state\n   * @type {Boolean}\n   */\n\n  let boolFalseState = !!falseState;\n  /**\n   * Parsed interpretation of the state\n   * @type {String}\n   */\n\n  let parsedState = '';\n\n  if (falseState || state) {\n    parsedState = state.indexOf(' ') > -1 ? state.split(/\\s/)[state.split(/\\s/).length - 1] : state;\n\n    if (parsedState) {\n      command = `waitFor${parsedState[0].toUpperCase()}` + `${parsedState.slice(1)}`;\n    }\n  }\n\n  if (typeof falseState === 'undefined') {\n    boolFalseState = false;\n  }\n\n  $(selector)[command](intMs, boolFalseState);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhaXRGb3IuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJtcyIsImZhbHNlU3RhdGUiLCJzdGF0ZSIsImludE1zIiwicGFyc2VJbnQiLCJjb21tYW5kIiwiYm9vbEZhbHNlU3RhdGUiLCJwYXJzZWRTdGF0ZSIsImluZGV4T2YiLCJzcGxpdCIsImxlbmd0aCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCIkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O2VBUWUsQ0FBQ0EsUUFBRCxFQUFXQyxFQUFYLEVBQWVDLFVBQWYsRUFBMkJDLEtBQTNCLEtBQXFDO0FBQ2hEOzs7O0FBSUEsUUFBTUMsS0FBSyxHQUFHQyxRQUFRLENBQUNKLEVBQUQsRUFBSyxFQUFMLENBQVIsSUFBb0IsSUFBbEM7QUFFQTs7Ozs7QUFJQSxNQUFJSyxPQUFPLEdBQUcsY0FBZDtBQUVBOzs7OztBQUlBLE1BQUlDLGNBQWMsR0FBRyxDQUFDLENBQUNMLFVBQXZCO0FBRUE7Ozs7O0FBSUEsTUFBSU0sV0FBVyxHQUFHLEVBQWxCOztBQUVBLE1BQUlOLFVBQVUsSUFBSUMsS0FBbEIsRUFBeUI7QUFDckJLLElBQUFBLFdBQVcsR0FBR0wsS0FBSyxDQUFDTSxPQUFOLENBQWMsR0FBZCxJQUFxQixDQUFDLENBQXRCLEdBQ1JOLEtBQUssQ0FBQ08sS0FBTixDQUFZLElBQVosRUFBa0JQLEtBQUssQ0FBQ08sS0FBTixDQUFZLElBQVosRUFBa0JDLE1BQWxCLEdBQTJCLENBQTdDLENBRFEsR0FFUlIsS0FGTjs7QUFJQSxRQUFJSyxXQUFKLEVBQWlCO0FBQ2JGLE1BQUFBLE9BQU8sR0FBSSxVQUFTRSxXQUFXLENBQUMsQ0FBRCxDQUFYLENBQWVJLFdBQWYsRUFBNkIsRUFBdkMsR0FDSCxHQUFFSixXQUFXLENBQUNLLEtBQVosQ0FBa0IsQ0FBbEIsQ0FBcUIsRUFEOUI7QUFFSDtBQUNKOztBQUVELE1BQUksT0FBT1gsVUFBUCxLQUFzQixXQUExQixFQUF1QztBQUNuQ0ssSUFBQUEsY0FBYyxHQUFHLEtBQWpCO0FBQ0g7O0FBRURPLEVBQUFBLENBQUMsQ0FBQ2QsUUFBRCxDQUFELENBQVlNLE9BQVosRUFBcUJGLEtBQXJCLEVBQTRCRyxjQUE1QjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdhaXQgZm9yIHRoZSBnaXZlbiBlbGVtZW50IHRvIGJlIGVuYWJsZWQsIGRpc3BsYXllZCwgb3IgdG8gZXhpc3RcbiogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICAgICAgICAgICAgICAgICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIG1zICAgICAgICAgICAgICAgICAgICAgICBXYWl0IGR1cmF0aW9uIChvcHRpb25hbClcbiAqIEBwYXJhbSAge1N0cmluZ30gICBmYWxzZVN0YXRlICAgICAgICAgICAgICAgQ2hlY2sgZm9yIG9wcG9zaXRlIHN0YXRlXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc3RhdGUgICAgICAgICAgICAgICAgICAgIFN0YXRlIHRvIGNoZWNrIGZvciAoZGVmYXVsdFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGlzdGVuY2UpXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgbXMsIGZhbHNlU3RhdGUsIHN0YXRlKSA9PiB7XG4gICAgLyoqXG4gICAgICogTWF4aW11bSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHdhaXQsIGRlZmF1bHQgMzAwMFxuICAgICAqIEB0eXBlIHtJbnR9XG4gICAgICovXG4gICAgY29uc3QgaW50TXMgPSBwYXJzZUludChtcywgMTApIHx8IDMwMDA7XG5cbiAgICAvKipcbiAgICAgKiBDb21tYW5kIHRvIHBlcmZvcm0gb24gdGhlIGJyb3dzZXIgb2JqZWN0XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgY29tbWFuZCA9ICd3YWl0Rm9yRXhpc3QnO1xuXG4gICAgLyoqXG4gICAgICogQm9vbGVhbiBpbnRlcnByZXRhdGlvbiBvZiB0aGUgZmFsc2Ugc3RhdGVcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBsZXQgYm9vbEZhbHNlU3RhdGUgPSAhIWZhbHNlU3RhdGU7XG5cbiAgICAvKipcbiAgICAgKiBQYXJzZWQgaW50ZXJwcmV0YXRpb24gb2YgdGhlIHN0YXRlXG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgcGFyc2VkU3RhdGUgPSAnJztcblxuICAgIGlmIChmYWxzZVN0YXRlIHx8IHN0YXRlKSB7XG4gICAgICAgIHBhcnNlZFN0YXRlID0gc3RhdGUuaW5kZXhPZignICcpID4gLTFcbiAgICAgICAgICAgID8gc3RhdGUuc3BsaXQoL1xccy8pW3N0YXRlLnNwbGl0KC9cXHMvKS5sZW5ndGggLSAxXVxuICAgICAgICAgICAgOiBzdGF0ZTtcblxuICAgICAgICBpZiAocGFyc2VkU3RhdGUpIHtcbiAgICAgICAgICAgIGNvbW1hbmQgPSBgd2FpdEZvciR7cGFyc2VkU3RhdGVbMF0udG9VcHBlckNhc2UoKX1gXG4gICAgICAgICAgICAgICAgKyBgJHtwYXJzZWRTdGF0ZS5zbGljZSgxKX1gO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBmYWxzZVN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBib29sRmFsc2VTdGF0ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgICQoc2VsZWN0b3IpW2NvbW1hbmRdKGludE1zLCBib29sRmFsc2VTdGF0ZSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "waitFor.js"
      ],
      "names": [
        "selector",
        "ms",
        "falseState",
        "state",
        "intMs",
        "parseInt",
        "command",
        "boolFalseState",
        "parsedState",
        "indexOf",
        "split",
        "length",
        "toUpperCase",
        "slice",
        "$"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,QAAD,EAAWC,EAAX,EAAeC,UAAf,EAA2BC,KAA3B,KAAqC;AAChD;;;;AAIA,QAAMC,KAAK,GAAGC,QAAQ,CAACJ,EAAD,EAAK,EAAL,CAAR,IAAoB,IAAlC;AAEA;;;;;AAIA,MAAIK,OAAO,GAAG,cAAd;AAEA;;;;;AAIA,MAAIC,cAAc,GAAG,CAAC,CAACL,UAAvB;AAEA;;;;;AAIA,MAAIM,WAAW,GAAG,EAAlB;;AAEA,MAAIN,UAAU,IAAIC,KAAlB,EAAyB;AACrBK,IAAAA,WAAW,GAAGL,KAAK,CAACM,OAAN,CAAc,GAAd,IAAqB,CAAC,CAAtB,GACRN,KAAK,CAACO,KAAN,CAAY,IAAZ,EAAkBP,KAAK,CAACO,KAAN,CAAY,IAAZ,EAAkBC,MAAlB,GAA2B,CAA7C,CADQ,GAERR,KAFN;;AAIA,QAAIK,WAAJ,EAAiB;AACbF,MAAAA,OAAO,GAAI,UAASE,WAAW,CAAC,CAAD,CAAX,CAAeI,WAAf,EAA6B,EAAvC,GACH,GAAEJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,CAAqB,EAD9B;AAEH;AACJ;;AAED,MAAI,OAAOX,UAAP,KAAsB,WAA1B,EAAuC;AACnCK,IAAAA,cAAc,GAAG,KAAjB;AACH;;AAEDO,EAAAA,CAAC,CAACd,QAAD,CAAD,CAAYM,OAAZ,EAAqBF,KAArB,EAA4BG,cAA5B;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Wait for the given element to be enabled, displayed, or to exist\n* @param  {String}   selector                  Element selector\n * @param  {String}   ms                       Wait duration (optional)\n * @param  {String}   falseState               Check for opposite state\n * @param  {String}   state                    State to check for (default\n *                                             existence)\n */\nexport default (selector, ms, falseState, state) => {\n    /**\n     * Maximum number of milliseconds to wait, default 3000\n     * @type {Int}\n     */\n    const intMs = parseInt(ms, 10) || 3000;\n\n    /**\n     * Command to perform on the browser object\n     * @type {String}\n     */\n    let command = 'waitForExist';\n\n    /**\n     * Boolean interpretation of the false state\n     * @type {Boolean}\n     */\n    let boolFalseState = !!falseState;\n\n    /**\n     * Parsed interpretation of the state\n     * @type {String}\n     */\n    let parsedState = '';\n\n    if (falseState || state) {\n        parsedState = state.indexOf(' ') > -1\n            ? state.split(/\\s/)[state.split(/\\s/).length - 1]\n            : state;\n\n        if (parsedState) {\n            command = `waitFor${parsedState[0].toUpperCase()}`\n                + `${parsedState.slice(1)}`;\n        }\n    }\n\n    if (typeof falseState === 'undefined') {\n        boolFalseState = false;\n    }\n\n    $(selector)[command](intMs, boolFalseState);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitForDisplayed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitForDisplayed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitForDisplayed.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/waitForDisplayed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "waitForDisplayed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Wait for the given element to become visible\n * @param  {String}   selector      Element selector\n * @param  {String}   falseCase Whether or not to expect a visible or hidden\n *                              state\n *\n * @todo  merge with waitfor\n */\nvar _default = (selector, falseCase) => {\n  /**\n   * Maximum number of milliseconds to wait for\n   * @type {Int}\n   */\n  const ms = 10000;\n  $(selector).waitForDisplayed(ms, !!falseCase);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhaXRGb3JEaXNwbGF5ZWQuanMiXSwibmFtZXMiOlsic2VsZWN0b3IiLCJmYWxzZUNhc2UiLCJtcyIsIiQiLCJ3YWl0Rm9yRGlzcGxheWVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O2VBUWUsQ0FBQ0EsUUFBRCxFQUFXQyxTQUFYLEtBQXlCO0FBQ3BDOzs7O0FBSUEsUUFBTUMsRUFBRSxHQUFHLEtBQVg7QUFFQUMsRUFBQUEsQ0FBQyxDQUFDSCxRQUFELENBQUQsQ0FBWUksZ0JBQVosQ0FBNkJGLEVBQTdCLEVBQWlDLENBQUMsQ0FBQ0QsU0FBbkM7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXYWl0IGZvciB0aGUgZ2l2ZW4gZWxlbWVudCB0byBiZWNvbWUgdmlzaWJsZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICAgICAgRWxlbWVudCBzZWxlY3RvclxuICogQHBhcmFtICB7U3RyaW5nfSAgIGZhbHNlQ2FzZSBXaGV0aGVyIG9yIG5vdCB0byBleHBlY3QgYSB2aXNpYmxlIG9yIGhpZGRlblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZVxuICpcbiAqIEB0b2RvICBtZXJnZSB3aXRoIHdhaXRmb3JcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHNlbGVjdG9yLCBmYWxzZUNhc2UpID0+IHtcbiAgICAvKipcbiAgICAgKiBNYXhpbXVtIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gd2FpdCBmb3JcbiAgICAgKiBAdHlwZSB7SW50fVxuICAgICAqL1xuICAgIGNvbnN0IG1zID0gMTAwMDA7XG5cbiAgICAkKHNlbGVjdG9yKS53YWl0Rm9yRGlzcGxheWVkKG1zLCAhIWZhbHNlQ2FzZSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "waitForDisplayed.js"
      ],
      "names": [
        "selector",
        "falseCase",
        "ms",
        "$",
        "waitForDisplayed"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,QAAD,EAAWC,SAAX,KAAyB;AACpC;;;;AAIA,QAAMC,EAAE,GAAG,KAAX;AAEAC,EAAAA,CAAC,CAACH,QAAD,CAAD,CAAYI,gBAAZ,CAA6BF,EAA7B,EAAiC,CAAC,CAACD,SAAnC;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Wait for the given element to become visible\n * @param  {String}   selector      Element selector\n * @param  {String}   falseCase Whether or not to expect a visible or hidden\n *                              state\n *\n * @todo  merge with waitfor\n */\nexport default (selector, falseCase) => {\n    /**\n     * Maximum number of milliseconds to wait for\n     * @type {Int}\n     */\n    const ms = 10000;\n\n    $(selector).waitForDisplayed(ms, !!falseCase);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/steps/when.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/when.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/when.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/when.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
        "sourceFileName": "when.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _clearInputField = _interopRequireDefault(require(\"../support/action/clearInputField\"));\n\nvar _clickElement = _interopRequireDefault(require(\"../support/action/clickElement\"));\n\nvar _closeLastOpenedWindow = _interopRequireDefault(require(\"../support/action/closeLastOpenedWindow\"));\n\nvar _deleteCookies = _interopRequireDefault(require(\"../support/action/deleteCookies\"));\n\nvar _dragElement = _interopRequireDefault(require(\"../support/action/dragElement\"));\n\nvar _focusLastOpenedWindow = _interopRequireDefault(require(\"../support/action/focusLastOpenedWindow\"));\n\nvar _handleModal = _interopRequireDefault(require(\"../support/action/handleModal\"));\n\nvar _moveTo = _interopRequireDefault(require(\"../support/action/moveTo\"));\n\nvar _pause = _interopRequireDefault(require(\"../support/action/pause\"));\n\nvar _pressButton = _interopRequireDefault(require(\"../support/action/pressButton\"));\n\nvar _scroll = _interopRequireDefault(require(\"../support/action/scroll\"));\n\nvar _selectOption = _interopRequireDefault(require(\"../support/action/selectOption\"));\n\nvar _selectOptionByIndex = _interopRequireDefault(require(\"../support/action/selectOptionByIndex\"));\n\nvar _setCookie = _interopRequireDefault(require(\"../support/action/setCookie\"));\n\nvar _setInputField = _interopRequireDefault(require(\"../support/action/setInputField\"));\n\nvar _setPromptText = _interopRequireDefault(require(\"../support/action/setPromptText\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst {\n  When\n} = require('cucumber');\n\nWhen(/^I (click|doubleclick) on the (link|button|element) \"([^\"]*)?\"$/, _clickElement.default);\nWhen(/^I (add|set) \"([^\"]*)?\" to the inputfield \"([^\"]*)?\"$/, _setInputField.default);\nWhen(/^I clear the inputfield \"([^\"]*)?\"$/, _clearInputField.default);\nWhen(/^I drag element \"([^\"]*)?\" to element \"([^\"]*)?\"$/, _dragElement.default);\nWhen(/^I pause for (\\d+)ms$/, _pause.default);\nWhen(/^I set a cookie \"([^\"]*)?\" with the content \"([^\"]*)?\"$/, _setCookie.default);\nWhen(/^I delete the cookie \"([^\"]*)?\"$/, _deleteCookies.default);\nWhen(/^I press \"([^\"]*)?\"$/, _pressButton.default);\nWhen(/^I (accept|dismiss) the (alertbox|confirmbox|prompt)$/, _handleModal.default);\nWhen(/^I enter \"([^\"]*)?\" into the prompt$/, _setPromptText.default);\nWhen(/^I scroll to element \"([^\"]*)?\"$/, _scroll.default);\nWhen(/^I close the last opened (window|tab)$/, _closeLastOpenedWindow.default);\nWhen(/^I focus the last opened (window|tab)$/, _focusLastOpenedWindow.default);\nWhen(/^I select the (\\d+)(st|nd|rd|th) option for element \"([^\"]*)?\"$/, _selectOptionByIndex.default);\nWhen(/^I select the option with the (name|value|text) \"([^\"]*)?\" for element \"([^\"]*)?\"$/, _selectOption.default);\nWhen(/^I move to element \"([^\"]*)?\"(?: with an offset of (\\d+),(\\d+))*$/, _moveTo.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoZW4uanMiXSwibmFtZXMiOlsiV2hlbiIsInJlcXVpcmUiLCJjbGlja0VsZW1lbnQiLCJzZXRJbnB1dEZpZWxkIiwiY2xlYXJJbnB1dEZpZWxkIiwiZHJhZ0VsZW1lbnQiLCJwYXVzZSIsInNldENvb2tpZSIsImRlbGV0ZUNvb2tpZXMiLCJwcmVzc0J1dHRvbiIsImhhbmRsZU1vZGFsIiwic2V0UHJvbXB0VGV4dCIsInNjcm9sbCIsImNsb3NlTGFzdE9wZW5lZFdpbmRvdyIsImZvY3VzTGFzdE9wZW5lZFdpbmRvdyIsInNlbGVjdE9wdGlvbkJ5SW5kZXgiLCJzZWxlY3RPcHRpb24iLCJtb3ZlVG8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBV0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBR0FELElBQUksQ0FDQSxpRUFEQSxFQUVBRSxxQkFGQSxDQUFKO0FBS0FGLElBQUksQ0FDQSx1REFEQSxFQUVBRyxzQkFGQSxDQUFKO0FBS0FILElBQUksQ0FDQSxxQ0FEQSxFQUVBSSx3QkFGQSxDQUFKO0FBS0FKLElBQUksQ0FDQSxtREFEQSxFQUVBSyxvQkFGQSxDQUFKO0FBS0FMLElBQUksQ0FDQSx1QkFEQSxFQUVBTSxjQUZBLENBQUo7QUFLQU4sSUFBSSxDQUNBLHlEQURBLEVBRUFPLGtCQUZBLENBQUo7QUFLQVAsSUFBSSxDQUNBLGtDQURBLEVBRUFRLHNCQUZBLENBQUo7QUFLQVIsSUFBSSxDQUNBLHNCQURBLEVBRUFTLG9CQUZBLENBQUo7QUFLQVQsSUFBSSxDQUNBLHVEQURBLEVBRUFVLG9CQUZBLENBQUo7QUFLQVYsSUFBSSxDQUNBLHNDQURBLEVBRUFXLHNCQUZBLENBQUo7QUFLQVgsSUFBSSxDQUNBLGtDQURBLEVBRUFZLGVBRkEsQ0FBSjtBQUtBWixJQUFJLENBQ0Esd0NBREEsRUFFQWEsOEJBRkEsQ0FBSjtBQUtBYixJQUFJLENBQ0Esd0NBREEsRUFFQWMsOEJBRkEsQ0FBSjtBQUtBZCxJQUFJLENBQ0EsaUVBREEsRUFFQWUsNEJBRkEsQ0FBSjtBQUtBZixJQUFJLENBQ0Esb0ZBREEsRUFFQWdCLHFCQUZBLENBQUo7QUFLQWhCLElBQUksQ0FDQSxtRUFEQSxFQUVBaUIsZUFGQSxDQUFKIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3RlcHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsZWFySW5wdXRGaWVsZCBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9jbGVhcklucHV0RmllbGQnO1xuaW1wb3J0IGNsaWNrRWxlbWVudCBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9jbGlja0VsZW1lbnQnO1xuaW1wb3J0IGNsb3NlTGFzdE9wZW5lZFdpbmRvdyBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9jbG9zZUxhc3RPcGVuZWRXaW5kb3cnO1xuaW1wb3J0IGRlbGV0ZUNvb2tpZXMgZnJvbSAnLi4vc3VwcG9ydC9hY3Rpb24vZGVsZXRlQ29va2llcyc7XG5pbXBvcnQgZHJhZ0VsZW1lbnQgZnJvbSAnLi4vc3VwcG9ydC9hY3Rpb24vZHJhZ0VsZW1lbnQnO1xuaW1wb3J0IGZvY3VzTGFzdE9wZW5lZFdpbmRvdyBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9mb2N1c0xhc3RPcGVuZWRXaW5kb3cnO1xuaW1wb3J0IGhhbmRsZU1vZGFsIGZyb20gJy4uL3N1cHBvcnQvYWN0aW9uL2hhbmRsZU1vZGFsJztcbmltcG9ydCBtb3ZlVG8gZnJvbSAnLi4vc3VwcG9ydC9hY3Rpb24vbW92ZVRvJztcbmltcG9ydCBwYXVzZSBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9wYXVzZSc7XG5pbXBvcnQgcHJlc3NCdXR0b24gZnJvbSAnLi4vc3VwcG9ydC9hY3Rpb24vcHJlc3NCdXR0b24nO1xuaW1wb3J0IHNjcm9sbCBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9zY3JvbGwnO1xuaW1wb3J0IHNlbGVjdE9wdGlvbiBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9zZWxlY3RPcHRpb24nO1xuaW1wb3J0IHNlbGVjdE9wdGlvbkJ5SW5kZXggZnJvbSAnLi4vc3VwcG9ydC9hY3Rpb24vc2VsZWN0T3B0aW9uQnlJbmRleCc7XG5pbXBvcnQgc2V0Q29va2llIGZyb20gJy4uL3N1cHBvcnQvYWN0aW9uL3NldENvb2tpZSc7XG5pbXBvcnQgc2V0SW5wdXRGaWVsZCBmcm9tICcuLi9zdXBwb3J0L2FjdGlvbi9zZXRJbnB1dEZpZWxkJztcbmltcG9ydCBzZXRQcm9tcHRUZXh0IGZyb20gJy4uL3N1cHBvcnQvYWN0aW9uL3NldFByb21wdFRleHQnO1xuXG5jb25zdCB7IFdoZW4gfSA9IHJlcXVpcmUoJ2N1Y3VtYmVyJyk7XG5cblxuV2hlbihcbiAgICAvXkkgKGNsaWNrfGRvdWJsZWNsaWNrKSBvbiB0aGUgKGxpbmt8YnV0dG9ufGVsZW1lbnQpIFwiKFteXCJdKik/XCIkLyxcbiAgICBjbGlja0VsZW1lbnRcbik7XG5cbldoZW4oXG4gICAgL15JIChhZGR8c2V0KSBcIihbXlwiXSopP1wiIHRvIHRoZSBpbnB1dGZpZWxkIFwiKFteXCJdKik/XCIkLyxcbiAgICBzZXRJbnB1dEZpZWxkXG4pO1xuXG5XaGVuKFxuICAgIC9eSSBjbGVhciB0aGUgaW5wdXRmaWVsZCBcIihbXlwiXSopP1wiJC8sXG4gICAgY2xlYXJJbnB1dEZpZWxkXG4pO1xuXG5XaGVuKFxuICAgIC9eSSBkcmFnIGVsZW1lbnQgXCIoW15cIl0qKT9cIiB0byBlbGVtZW50IFwiKFteXCJdKik/XCIkLyxcbiAgICBkcmFnRWxlbWVudFxuKTtcblxuV2hlbihcbiAgICAvXkkgcGF1c2UgZm9yIChcXGQrKW1zJC8sXG4gICAgcGF1c2Vcbik7XG5cbldoZW4oXG4gICAgL15JIHNldCBhIGNvb2tpZSBcIihbXlwiXSopP1wiIHdpdGggdGhlIGNvbnRlbnQgXCIoW15cIl0qKT9cIiQvLFxuICAgIHNldENvb2tpZVxuKTtcblxuV2hlbihcbiAgICAvXkkgZGVsZXRlIHRoZSBjb29raWUgXCIoW15cIl0qKT9cIiQvLFxuICAgIGRlbGV0ZUNvb2tpZXNcbik7XG5cbldoZW4oXG4gICAgL15JIHByZXNzIFwiKFteXCJdKik/XCIkLyxcbiAgICBwcmVzc0J1dHRvblxuKTtcblxuV2hlbihcbiAgICAvXkkgKGFjY2VwdHxkaXNtaXNzKSB0aGUgKGFsZXJ0Ym94fGNvbmZpcm1ib3h8cHJvbXB0KSQvLFxuICAgIGhhbmRsZU1vZGFsXG4pO1xuXG5XaGVuKFxuICAgIC9eSSBlbnRlciBcIihbXlwiXSopP1wiIGludG8gdGhlIHByb21wdCQvLFxuICAgIHNldFByb21wdFRleHRcbik7XG5cbldoZW4oXG4gICAgL15JIHNjcm9sbCB0byBlbGVtZW50IFwiKFteXCJdKik/XCIkLyxcbiAgICBzY3JvbGxcbik7XG5cbldoZW4oXG4gICAgL15JIGNsb3NlIHRoZSBsYXN0IG9wZW5lZCAod2luZG93fHRhYikkLyxcbiAgICBjbG9zZUxhc3RPcGVuZWRXaW5kb3dcbik7XG5cbldoZW4oXG4gICAgL15JIGZvY3VzIHRoZSBsYXN0IG9wZW5lZCAod2luZG93fHRhYikkLyxcbiAgICBmb2N1c0xhc3RPcGVuZWRXaW5kb3dcbik7XG5cbldoZW4oXG4gICAgL15JIHNlbGVjdCB0aGUgKFxcZCspKHN0fG5kfHJkfHRoKSBvcHRpb24gZm9yIGVsZW1lbnQgXCIoW15cIl0qKT9cIiQvLFxuICAgIHNlbGVjdE9wdGlvbkJ5SW5kZXhcbik7XG5cbldoZW4oXG4gICAgL15JIHNlbGVjdCB0aGUgb3B0aW9uIHdpdGggdGhlIChuYW1lfHZhbHVlfHRleHQpIFwiKFteXCJdKik/XCIgZm9yIGVsZW1lbnQgXCIoW15cIl0qKT9cIiQvLFxuICAgIHNlbGVjdE9wdGlvblxuKTtcblxuV2hlbihcbiAgICAvXkkgbW92ZSB0byBlbGVtZW50IFwiKFteXCJdKik/XCIoPzogd2l0aCBhbiBvZmZzZXQgb2YgKFxcZCspLChcXGQrKSkqJC8sXG4gICAgbW92ZVRvXG4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "when.js"
      ],
      "names": [
        "When",
        "require",
        "clickElement",
        "setInputField",
        "clearInputField",
        "dragElement",
        "pause",
        "setCookie",
        "deleteCookies",
        "pressButton",
        "handleModal",
        "setPromptText",
        "scroll",
        "closeLastOpenedWindow",
        "focusLastOpenedWindow",
        "selectOptionByIndex",
        "selectOption",
        "moveTo"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,OAAO,CAAC,UAAD,CAAxB;;AAGAD,IAAI,CACA,iEADA,EAEAE,qBAFA,CAAJ;AAKAF,IAAI,CACA,uDADA,EAEAG,sBAFA,CAAJ;AAKAH,IAAI,CACA,qCADA,EAEAI,wBAFA,CAAJ;AAKAJ,IAAI,CACA,mDADA,EAEAK,oBAFA,CAAJ;AAKAL,IAAI,CACA,uBADA,EAEAM,cAFA,CAAJ;AAKAN,IAAI,CACA,yDADA,EAEAO,kBAFA,CAAJ;AAKAP,IAAI,CACA,kCADA,EAEAQ,sBAFA,CAAJ;AAKAR,IAAI,CACA,sBADA,EAEAS,oBAFA,CAAJ;AAKAT,IAAI,CACA,uDADA,EAEAU,oBAFA,CAAJ;AAKAV,IAAI,CACA,sCADA,EAEAW,sBAFA,CAAJ;AAKAX,IAAI,CACA,kCADA,EAEAY,eAFA,CAAJ;AAKAZ,IAAI,CACA,wCADA,EAEAa,8BAFA,CAAJ;AAKAb,IAAI,CACA,wCADA,EAEAc,8BAFA,CAAJ;AAKAd,IAAI,CACA,iEADA,EAEAe,4BAFA,CAAJ;AAKAf,IAAI,CACA,oFADA,EAEAgB,qBAFA,CAAJ;AAKAhB,IAAI,CACA,mEADA,EAEAiB,eAFA,CAAJ",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/steps/",
      "sourcesContent": [
        "import clearInputField from '../support/action/clearInputField';\nimport clickElement from '../support/action/clickElement';\nimport closeLastOpenedWindow from '../support/action/closeLastOpenedWindow';\nimport deleteCookies from '../support/action/deleteCookies';\nimport dragElement from '../support/action/dragElement';\nimport focusLastOpenedWindow from '../support/action/focusLastOpenedWindow';\nimport handleModal from '../support/action/handleModal';\nimport moveTo from '../support/action/moveTo';\nimport pause from '../support/action/pause';\nimport pressButton from '../support/action/pressButton';\nimport scroll from '../support/action/scroll';\nimport selectOption from '../support/action/selectOption';\nimport selectOptionByIndex from '../support/action/selectOptionByIndex';\nimport setCookie from '../support/action/setCookie';\nimport setInputField from '../support/action/setInputField';\nimport setPromptText from '../support/action/setPromptText';\n\nconst { When } = require('cucumber');\n\n\nWhen(\n    /^I (click|doubleclick) on the (link|button|element) \"([^\"]*)?\"$/,\n    clickElement\n);\n\nWhen(\n    /^I (add|set) \"([^\"]*)?\" to the inputfield \"([^\"]*)?\"$/,\n    setInputField\n);\n\nWhen(\n    /^I clear the inputfield \"([^\"]*)?\"$/,\n    clearInputField\n);\n\nWhen(\n    /^I drag element \"([^\"]*)?\" to element \"([^\"]*)?\"$/,\n    dragElement\n);\n\nWhen(\n    /^I pause for (\\d+)ms$/,\n    pause\n);\n\nWhen(\n    /^I set a cookie \"([^\"]*)?\" with the content \"([^\"]*)?\"$/,\n    setCookie\n);\n\nWhen(\n    /^I delete the cookie \"([^\"]*)?\"$/,\n    deleteCookies\n);\n\nWhen(\n    /^I press \"([^\"]*)?\"$/,\n    pressButton\n);\n\nWhen(\n    /^I (accept|dismiss) the (alertbox|confirmbox|prompt)$/,\n    handleModal\n);\n\nWhen(\n    /^I enter \"([^\"]*)?\" into the prompt$/,\n    setPromptText\n);\n\nWhen(\n    /^I scroll to element \"([^\"]*)?\"$/,\n    scroll\n);\n\nWhen(\n    /^I close the last opened (window|tab)$/,\n    closeLastOpenedWindow\n);\n\nWhen(\n    /^I focus the last opened (window|tab)$/,\n    focusLastOpenedWindow\n);\n\nWhen(\n    /^I select the (\\d+)(st|nd|rd|th) option for element \"([^\"]*)?\"$/,\n    selectOptionByIndex\n);\n\nWhen(\n    /^I select the option with the (name|value|text) \"([^\"]*)?\" for element \"([^\"]*)?\"$/,\n    selectOption\n);\n\nWhen(\n    /^I move to element \"([^\"]*)?\"(?: with an offset of (\\d+),(\\d+))*$/,\n    moveTo\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clearInputField.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clearInputField.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clearInputField.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clearInputField.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "clearInputField.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Clear a given input field (placeholder for WDIO's clearElement)\n * @param  {String}   selector Element selector\n */\nvar _default = selector => {\n  $(selector).clearValue();\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFySW5wdXRGaWVsZC5qcyJdLCJuYW1lcyI6WyJzZWxlY3RvciIsIiQiLCJjbGVhclZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFJZ0JBLFFBQUQsSUFBYztBQUN6QkMsRUFBQUEsQ0FBQyxDQUFDRCxRQUFELENBQUQsQ0FBWUUsVUFBWjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENsZWFyIGEgZ2l2ZW4gaW5wdXQgZmllbGQgKHBsYWNlaG9sZGVyIGZvciBXRElPJ3MgY2xlYXJFbGVtZW50KVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yIEVsZW1lbnQgc2VsZWN0b3JcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHNlbGVjdG9yKSA9PiB7XG4gICAgJChzZWxlY3RvcikuY2xlYXJWYWx1ZSgpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clearInputField.js"
      ],
      "names": [
        "selector",
        "$",
        "clearValue"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,QAAD,IAAc;AACzBC,EAAAA,CAAC,CAACD,QAAD,CAAD,CAAYE,UAAZ;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Clear a given input field (placeholder for WDIO's clearElement)\n * @param  {String}   selector Element selector\n */\nexport default (selector) => {\n    $(selector).clearValue();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clickElement.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clickElement.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clickElement.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/clickElement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "clickElement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkIfElementExists = _interopRequireDefault(require(\"../lib/checkIfElementExists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Perform an click action on the given element\n * @param  {String}   action  The action to perform (click or doubleClick)\n * @param  {String}   type    Type of the element (link or selector)\n * @param  {String}   selector Element selector\n */\nvar _default = (action, type, selector) => {\n  /**\n   * Element to perform the action on\n   * @type {String}\n   */\n  const selector2 = type === 'link' ? `=${selector}` : selector;\n  /**\n   * The method to call on the browser object\n   * @type {String}\n   */\n\n  const method = action === 'click' ? 'click' : 'doubleClick';\n  (0, _checkIfElementExists.default)(selector2);\n  $(selector2)[method]();\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWNrRWxlbWVudC5qcyJdLCJuYW1lcyI6WyJhY3Rpb24iLCJ0eXBlIiwic2VsZWN0b3IiLCJzZWxlY3RvcjIiLCJtZXRob2QiLCIkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7O2VBTWUsQ0FBQ0EsTUFBRCxFQUFTQyxJQUFULEVBQWVDLFFBQWYsS0FBNEI7QUFDdkM7Ozs7QUFJQSxRQUFNQyxTQUFTLEdBQUlGLElBQUksS0FBSyxNQUFWLEdBQXFCLElBQUdDLFFBQVMsRUFBakMsR0FBcUNBLFFBQXZEO0FBRUE7Ozs7O0FBSUEsUUFBTUUsTUFBTSxHQUFJSixNQUFNLEtBQUssT0FBWixHQUF1QixPQUF2QixHQUFpQyxhQUFoRDtBQUVBLHFDQUFxQkcsU0FBckI7QUFFQUUsRUFBQUEsQ0FBQyxDQUFDRixTQUFELENBQUQsQ0FBYUMsTUFBYjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hlY2tJZkVsZW1lbnRFeGlzdHMgZnJvbSAnLi4vbGliL2NoZWNrSWZFbGVtZW50RXhpc3RzJztcblxuLyoqXG4gKiBQZXJmb3JtIGFuIGNsaWNrIGFjdGlvbiBvbiB0aGUgZ2l2ZW4gZWxlbWVudFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGFjdGlvbiAgVGhlIGFjdGlvbiB0byBwZXJmb3JtIChjbGljayBvciBkb3VibGVDbGljaylcbiAqIEBwYXJhbSAge1N0cmluZ30gICB0eXBlICAgIFR5cGUgb2YgdGhlIGVsZW1lbnQgKGxpbmsgb3Igc2VsZWN0b3IpXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgRWxlbWVudCBzZWxlY3RvclxuICovXG5leHBvcnQgZGVmYXVsdCAoYWN0aW9uLCB0eXBlLCBzZWxlY3RvcikgPT4ge1xuICAgIC8qKlxuICAgICAqIEVsZW1lbnQgdG8gcGVyZm9ybSB0aGUgYWN0aW9uIG9uXG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBzZWxlY3RvcjIgPSAodHlwZSA9PT0gJ2xpbmsnKSA/IGA9JHtzZWxlY3Rvcn1gIDogc2VsZWN0b3I7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIHRvIGNhbGwgb24gdGhlIGJyb3dzZXIgb2JqZWN0XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBjb25zdCBtZXRob2QgPSAoYWN0aW9uID09PSAnY2xpY2snKSA/ICdjbGljaycgOiAnZG91YmxlQ2xpY2snO1xuXG4gICAgY2hlY2tJZkVsZW1lbnRFeGlzdHMoc2VsZWN0b3IyKTtcblxuICAgICQoc2VsZWN0b3IyKVttZXRob2RdKCk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "clickElement.js"
      ],
      "names": [
        "action",
        "type",
        "selector",
        "selector2",
        "method",
        "$"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;eAMe,CAACA,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AACvC;;;;AAIA,QAAMC,SAAS,GAAIF,IAAI,KAAK,MAAV,GAAqB,IAAGC,QAAS,EAAjC,GAAqCA,QAAvD;AAEA;;;;;AAIA,QAAME,MAAM,GAAIJ,MAAM,KAAK,OAAZ,GAAuB,OAAvB,GAAiC,aAAhD;AAEA,qCAAqBG,SAArB;AAEAE,EAAAA,CAAC,CAACF,SAAD,CAAD,CAAaC,MAAb;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "import checkIfElementExists from '../lib/checkIfElementExists';\n\n/**\n * Perform an click action on the given element\n * @param  {String}   action  The action to perform (click or doubleClick)\n * @param  {String}   type    Type of the element (link or selector)\n * @param  {String}   selector Element selector\n */\nexport default (action, type, selector) => {\n    /**\n     * Element to perform the action on\n     * @type {String}\n     */\n    const selector2 = (type === 'link') ? `=${selector}` : selector;\n\n    /**\n     * The method to call on the browser object\n     * @type {String}\n     */\n    const method = (action === 'click') ? 'click' : 'doubleClick';\n\n    checkIfElementExists(selector2);\n\n    $(selector2)[method]();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeLastOpenedWindow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeLastOpenedWindow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeLastOpenedWindow.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/closeLastOpenedWindow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "closeLastOpenedWindow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Close the last opened window\n * @param  {String}   obsolete Type of object to close (window or tab)\n */\n\n/* eslint-disable no-unused-vars */\nvar _default = obsolete => {\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * The last opened window handle\n   * @type {Object}\n   */\n  const lastWindowHandle = browser.getWindowHandles().slice(-1)[0];\n  browser.closeWindow();\n  browser.switchToWindow(lastWindowHandle);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb3NlTGFzdE9wZW5lZFdpbmRvdy5qcyJdLCJuYW1lcyI6WyJvYnNvbGV0ZSIsImxhc3RXaW5kb3dIYW5kbGUiLCJicm93c2VyIiwiZ2V0V2luZG93SGFuZGxlcyIsInNsaWNlIiwiY2xvc2VXaW5kb3ciLCJzd2l0Y2hUb1dpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztBQUlBO2VBQ2dCQSxRQUFELElBQWM7QUFDN0I7O0FBQ0k7Ozs7QUFJQSxRQUFNQyxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDQyxnQkFBUixHQUEyQkMsS0FBM0IsQ0FBaUMsQ0FBQyxDQUFsQyxFQUFxQyxDQUFyQyxDQUF6QjtBQUVBRixFQUFBQSxPQUFPLENBQUNHLFdBQVI7QUFDQUgsRUFBQUEsT0FBTyxDQUFDSSxjQUFSLENBQXVCTCxnQkFBdkI7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbG9zZSB0aGUgbGFzdCBvcGVuZWQgd2luZG93XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgb2Jzb2xldGUgVHlwZSBvZiBvYmplY3QgdG8gY2xvc2UgKHdpbmRvdyBvciB0YWIpXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5leHBvcnQgZGVmYXVsdCAob2Jzb2xldGUpID0+IHtcbi8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cbiAgICAvKipcbiAgICAgKiBUaGUgbGFzdCBvcGVuZWQgd2luZG93IGhhbmRsZVxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgY29uc3QgbGFzdFdpbmRvd0hhbmRsZSA9IGJyb3dzZXIuZ2V0V2luZG93SGFuZGxlcygpLnNsaWNlKC0xKVswXTtcblxuICAgIGJyb3dzZXIuY2xvc2VXaW5kb3coKTtcbiAgICBicm93c2VyLnN3aXRjaFRvV2luZG93KGxhc3RXaW5kb3dIYW5kbGUpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "closeLastOpenedWindow.js"
      ],
      "names": [
        "obsolete",
        "lastWindowHandle",
        "browser",
        "getWindowHandles",
        "slice",
        "closeWindow",
        "switchToWindow"
      ],
      "mappings": ";;;;;;;AAAA;;;;;AAIA;eACgBA,QAAD,IAAc;AAC7B;;AACI;;;;AAIA,QAAMC,gBAAgB,GAAGC,OAAO,CAACC,gBAAR,GAA2BC,KAA3B,CAAiC,CAAC,CAAlC,EAAqC,CAArC,CAAzB;AAEAF,EAAAA,OAAO,CAACG,WAAR;AACAH,EAAAA,OAAO,CAACI,cAAR,CAAuBL,gBAAvB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Close the last opened window\n * @param  {String}   obsolete Type of object to close (window or tab)\n */\n/* eslint-disable no-unused-vars */\nexport default (obsolete) => {\n/* eslint-enable no-unused-vars */\n    /**\n     * The last opened window handle\n     * @type {Object}\n     */\n    const lastWindowHandle = browser.getWindowHandles().slice(-1)[0];\n\n    browser.closeWindow();\n    browser.switchToWindow(lastWindowHandle);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/deleteCookies.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/deleteCookies.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/deleteCookies.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/deleteCookies.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "deleteCookies.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Delete a cookie\n * @param  {String}   name The name of the cookie to delete\n */\nvar _default = name => {\n  browser.deleteCookies(name);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGV0ZUNvb2tpZXMuanMiXSwibmFtZXMiOlsibmFtZSIsImJyb3dzZXIiLCJkZWxldGVDb29raWVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFJZ0JBLElBQUQsSUFBVTtBQUNyQkMsRUFBQUEsT0FBTyxDQUFDQyxhQUFSLENBQXNCRixJQUF0QjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlbGV0ZSBhIGNvb2tpZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIG5hbWUgVGhlIG5hbWUgb2YgdGhlIGNvb2tpZSB0byBkZWxldGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG5hbWUpID0+IHtcbiAgICBicm93c2VyLmRlbGV0ZUNvb2tpZXMobmFtZSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "deleteCookies.js"
      ],
      "names": [
        "name",
        "browser",
        "deleteCookies"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,IAAD,IAAU;AACrBC,EAAAA,OAAO,CAACC,aAAR,CAAsBF,IAAtB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Delete a cookie\n * @param  {String}   name The name of the cookie to delete\n */\nexport default (name) => {\n    browser.deleteCookies(name);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/dragElement.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/dragElement.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/dragElement.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/dragElement.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "dragElement.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Drag a element to a given destination\n * @param  {String}   selector      The selector for the source element\n * @param  {String}   destination The selector for the destination element\n */\nvar _default = (selector, destination) => {\n  $(selector).dragAndDrop($(destination));\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyYWdFbGVtZW50LmpzIl0sIm5hbWVzIjpbInNlbGVjdG9yIiwiZGVzdGluYXRpb24iLCIkIiwiZHJhZ0FuZERyb3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7ZUFLZSxDQUFDQSxRQUFELEVBQVdDLFdBQVgsS0FBMkI7QUFDdENDLEVBQUFBLENBQUMsQ0FBQ0YsUUFBRCxDQUFELENBQVlHLFdBQVosQ0FBd0JELENBQUMsQ0FBQ0QsV0FBRCxDQUF6QjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERyYWcgYSBlbGVtZW50IHRvIGEgZ2l2ZW4gZGVzdGluYXRpb25cbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciAgICAgIFRoZSBzZWxlY3RvciBmb3IgdGhlIHNvdXJjZSBlbGVtZW50XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgZGVzdGluYXRpb24gVGhlIHNlbGVjdG9yIGZvciB0aGUgZGVzdGluYXRpb24gZWxlbWVudFxuICovXG5leHBvcnQgZGVmYXVsdCAoc2VsZWN0b3IsIGRlc3RpbmF0aW9uKSA9PiB7XG4gICAgJChzZWxlY3RvcikuZHJhZ0FuZERyb3AoJChkZXN0aW5hdGlvbikpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dragElement.js"
      ],
      "names": [
        "selector",
        "destination",
        "$",
        "dragAndDrop"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,QAAD,EAAWC,WAAX,KAA2B;AACtCC,EAAAA,CAAC,CAACF,QAAD,CAAD,CAAYG,WAAZ,CAAwBD,CAAC,CAACD,WAAD,CAAzB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Drag a element to a given destination\n * @param  {String}   selector      The selector for the source element\n * @param  {String}   destination The selector for the destination element\n */\nexport default (selector, destination) => {\n    $(selector).dragAndDrop($(destination));\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/focusLastOpenedWindow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/focusLastOpenedWindow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/focusLastOpenedWindow.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/focusLastOpenedWindow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "focusLastOpenedWindow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Focus the last opened window\n * @param  {String}   obsolete Type of object to focus to (window or tab)\n */\n\n/* eslint-disable no-unused-vars */\nvar _default = obsolete => {\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * The last opened window\n   * @type {Object}\n   */\n  const lastWindowHandle = browser.getWindowHandles().slice(-1)[0];\n  browser.switchToWindow(lastWindowHandle);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvY3VzTGFzdE9wZW5lZFdpbmRvdy5qcyJdLCJuYW1lcyI6WyJvYnNvbGV0ZSIsImxhc3RXaW5kb3dIYW5kbGUiLCJicm93c2VyIiwiZ2V0V2luZG93SGFuZGxlcyIsInNsaWNlIiwic3dpdGNoVG9XaW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7QUFJQTtlQUNnQkEsUUFBRCxJQUFjO0FBQzdCOztBQUNJOzs7O0FBSUEsUUFBTUMsZ0JBQWdCLEdBQUdDLE9BQU8sQ0FBQ0MsZ0JBQVIsR0FBMkJDLEtBQTNCLENBQWlDLENBQUMsQ0FBbEMsRUFBcUMsQ0FBckMsQ0FBekI7QUFFQUYsRUFBQUEsT0FBTyxDQUFDRyxjQUFSLENBQXVCSixnQkFBdkI7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGb2N1cyB0aGUgbGFzdCBvcGVuZWQgd2luZG93XG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgb2Jzb2xldGUgVHlwZSBvZiBvYmplY3QgdG8gZm9jdXMgdG8gKHdpbmRvdyBvciB0YWIpXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5leHBvcnQgZGVmYXVsdCAob2Jzb2xldGUpID0+IHtcbi8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cbiAgICAvKipcbiAgICAgKiBUaGUgbGFzdCBvcGVuZWQgd2luZG93XG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBjb25zdCBsYXN0V2luZG93SGFuZGxlID0gYnJvd3Nlci5nZXRXaW5kb3dIYW5kbGVzKCkuc2xpY2UoLTEpWzBdO1xuXG4gICAgYnJvd3Nlci5zd2l0Y2hUb1dpbmRvdyhsYXN0V2luZG93SGFuZGxlKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "focusLastOpenedWindow.js"
      ],
      "names": [
        "obsolete",
        "lastWindowHandle",
        "browser",
        "getWindowHandles",
        "slice",
        "switchToWindow"
      ],
      "mappings": ";;;;;;;AAAA;;;;;AAIA;eACgBA,QAAD,IAAc;AAC7B;;AACI;;;;AAIA,QAAMC,gBAAgB,GAAGC,OAAO,CAACC,gBAAR,GAA2BC,KAA3B,CAAiC,CAAC,CAAlC,EAAqC,CAArC,CAAzB;AAEAF,EAAAA,OAAO,CAACG,cAAR,CAAuBJ,gBAAvB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Focus the last opened window\n * @param  {String}   obsolete Type of object to focus to (window or tab)\n */\n/* eslint-disable no-unused-vars */\nexport default (obsolete) => {\n/* eslint-enable no-unused-vars */\n    /**\n     * The last opened window\n     * @type {Object}\n     */\n    const lastWindowHandle = browser.getWindowHandles().slice(-1)[0];\n\n    browser.switchToWindow(lastWindowHandle);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/handleModal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/handleModal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/handleModal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/handleModal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "handleModal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Handle a modal\n * @param  {String}   action    Action to perform on the modal (accept, dismiss)\n * @param  {String}   modalType Type of modal (alertbox, confirmbox, prompt)\n */\nvar _default = (action, modalType) => {\n  /**\n   * The command to perform on the browser object\n   * @type {String}\n   */\n  let command = `${action.slice(0, 1).toLowerCase()}${action.slice(1)}Alert`;\n  /**\n   * Alert boxes can't be dismissed, this causes Chrome to crash during tests\n   */\n\n  if (modalType === 'alertbox') {\n    command = 'acceptAlert';\n  }\n\n  browser[command]();\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZU1vZGFsLmpzIl0sIm5hbWVzIjpbImFjdGlvbiIsIm1vZGFsVHlwZSIsImNvbW1hbmQiLCJzbGljZSIsInRvTG93ZXJDYXNlIiwiYnJvd3NlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztlQUtlLENBQUNBLE1BQUQsRUFBU0MsU0FBVCxLQUF1QjtBQUNsQzs7OztBQUlBLE1BQUlDLE9BQU8sR0FBSSxHQUFFRixNQUFNLENBQUNHLEtBQVAsQ0FBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CQyxXQUFuQixFQUFpQyxHQUFFSixNQUFNLENBQUNHLEtBQVAsQ0FBYSxDQUFiLENBQWdCLE9BQXBFO0FBRUE7Ozs7QUFHQSxNQUFJRixTQUFTLEtBQUssVUFBbEIsRUFBOEI7QUFDMUJDLElBQUFBLE9BQU8sR0FBRyxhQUFWO0FBQ0g7O0FBRURHLEVBQUFBLE9BQU8sQ0FBQ0gsT0FBRCxDQUFQO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvYWN0aW9uLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGFuZGxlIGEgbW9kYWxcbiAqIEBwYXJhbSAge1N0cmluZ30gICBhY3Rpb24gICAgQWN0aW9uIHRvIHBlcmZvcm0gb24gdGhlIG1vZGFsIChhY2NlcHQsIGRpc21pc3MpXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgbW9kYWxUeXBlIFR5cGUgb2YgbW9kYWwgKGFsZXJ0Ym94LCBjb25maXJtYm94LCBwcm9tcHQpXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChhY3Rpb24sIG1vZGFsVHlwZSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21tYW5kIHRvIHBlcmZvcm0gb24gdGhlIGJyb3dzZXIgb2JqZWN0XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBsZXQgY29tbWFuZCA9IGAke2FjdGlvbi5zbGljZSgwLCAxKS50b0xvd2VyQ2FzZSgpfSR7YWN0aW9uLnNsaWNlKDEpfUFsZXJ0YDtcblxuICAgIC8qKlxuICAgICAqIEFsZXJ0IGJveGVzIGNhbid0IGJlIGRpc21pc3NlZCwgdGhpcyBjYXVzZXMgQ2hyb21lIHRvIGNyYXNoIGR1cmluZyB0ZXN0c1xuICAgICAqL1xuICAgIGlmIChtb2RhbFR5cGUgPT09ICdhbGVydGJveCcpIHtcbiAgICAgICAgY29tbWFuZCA9ICdhY2NlcHRBbGVydCc7XG4gICAgfVxuXG4gICAgYnJvd3Nlcltjb21tYW5kXSgpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "handleModal.js"
      ],
      "names": [
        "action",
        "modalType",
        "command",
        "slice",
        "toLowerCase",
        "browser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;eAKe,CAACA,MAAD,EAASC,SAAT,KAAuB;AAClC;;;;AAIA,MAAIC,OAAO,GAAI,GAAEF,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBC,WAAnB,EAAiC,GAAEJ,MAAM,CAACG,KAAP,CAAa,CAAb,CAAgB,OAApE;AAEA;;;;AAGA,MAAIF,SAAS,KAAK,UAAlB,EAA8B;AAC1BC,IAAAA,OAAO,GAAG,aAAV;AACH;;AAEDG,EAAAA,OAAO,CAACH,OAAD,CAAP;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Handle a modal\n * @param  {String}   action    Action to perform on the modal (accept, dismiss)\n * @param  {String}   modalType Type of modal (alertbox, confirmbox, prompt)\n */\nexport default (action, modalType) => {\n    /**\n     * The command to perform on the browser object\n     * @type {String}\n     */\n    let command = `${action.slice(0, 1).toLowerCase()}${action.slice(1)}Alert`;\n\n    /**\n     * Alert boxes can't be dismissed, this causes Chrome to crash during tests\n     */\n    if (modalType === 'alertbox') {\n        command = 'acceptAlert';\n    }\n\n    browser[command]();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/moveTo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/moveTo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/moveTo.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/moveTo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "moveTo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Move to the given selector with an optional offset on a X and Y position\n * @param  {String}   selector  Element selector\n * @param  {String}   x        X coordinate to move to\n * @param  {String}   y        Y coordinate to move to\n */\nvar _default = (selector, x, y) => {\n  /**\n   * X coordinate\n   * @type {Int}\n   */\n  const intX = parseInt(x, 10) || undefined;\n  /**\n   * Y coordinate\n   * @type {Int}\n   */\n\n  const intY = parseInt(y, 10) || undefined;\n  $(selector).moveTo(intX, intY);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmVUby5qcyJdLCJuYW1lcyI6WyJzZWxlY3RvciIsIngiLCJ5IiwiaW50WCIsInBhcnNlSW50IiwidW5kZWZpbmVkIiwiaW50WSIsIiQiLCJtb3ZlVG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBTWUsQ0FBQ0EsUUFBRCxFQUFXQyxDQUFYLEVBQWNDLENBQWQsS0FBb0I7QUFDL0I7Ozs7QUFJQSxRQUFNQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0gsQ0FBRCxFQUFJLEVBQUosQ0FBUixJQUFtQkksU0FBaEM7QUFFQTs7Ozs7QUFJQSxRQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0YsQ0FBRCxFQUFJLEVBQUosQ0FBUixJQUFtQkcsU0FBaEM7QUFFQUUsRUFBQUEsQ0FBQyxDQUFDUCxRQUFELENBQUQsQ0FBWVEsTUFBWixDQUFtQkwsSUFBbkIsRUFBeUJHLElBQXpCO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvYWN0aW9uLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW92ZSB0byB0aGUgZ2l2ZW4gc2VsZWN0b3Igd2l0aCBhbiBvcHRpb25hbCBvZmZzZXQgb24gYSBYIGFuZCBZIHBvc2l0aW9uXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgc2VsZWN0b3IgIEVsZW1lbnQgc2VsZWN0b3JcbiAqIEBwYXJhbSAge1N0cmluZ30gICB4ICAgICAgICBYIGNvb3JkaW5hdGUgdG8gbW92ZSB0b1xuICogQHBhcmFtICB7U3RyaW5nfSAgIHkgICAgICAgIFkgY29vcmRpbmF0ZSB0byBtb3ZlIHRvXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvciwgeCwgeSkgPT4ge1xuICAgIC8qKlxuICAgICAqIFggY29vcmRpbmF0ZVxuICAgICAqIEB0eXBlIHtJbnR9XG4gICAgICovXG4gICAgY29uc3QgaW50WCA9IHBhcnNlSW50KHgsIDEwKSB8fCB1bmRlZmluZWQ7XG5cbiAgICAvKipcbiAgICAgKiBZIGNvb3JkaW5hdGVcbiAgICAgKiBAdHlwZSB7SW50fVxuICAgICAqL1xuICAgIGNvbnN0IGludFkgPSBwYXJzZUludCh5LCAxMCkgfHwgdW5kZWZpbmVkO1xuXG4gICAgJChzZWxlY3RvcikubW92ZVRvKGludFgsIGludFkpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "moveTo.js"
      ],
      "names": [
        "selector",
        "x",
        "y",
        "intX",
        "parseInt",
        "undefined",
        "intY",
        "$",
        "moveTo"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,QAAD,EAAWC,CAAX,EAAcC,CAAd,KAAoB;AAC/B;;;;AAIA,QAAMC,IAAI,GAAGC,QAAQ,CAACH,CAAD,EAAI,EAAJ,CAAR,IAAmBI,SAAhC;AAEA;;;;;AAIA,QAAMC,IAAI,GAAGF,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAAR,IAAmBG,SAAhC;AAEAE,EAAAA,CAAC,CAACP,QAAD,CAAD,CAAYQ,MAAZ,CAAmBL,IAAnB,EAAyBG,IAAzB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Move to the given selector with an optional offset on a X and Y position\n * @param  {String}   selector  Element selector\n * @param  {String}   x        X coordinate to move to\n * @param  {String}   y        Y coordinate to move to\n */\nexport default (selector, x, y) => {\n    /**\n     * X coordinate\n     * @type {Int}\n     */\n    const intX = parseInt(x, 10) || undefined;\n\n    /**\n     * Y coordinate\n     * @type {Int}\n     */\n    const intY = parseInt(y, 10) || undefined;\n\n    $(selector).moveTo(intX, intY);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pause.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pause.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pause.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pause.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "pause.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Pause execution for a given number of milliseconds\n * @param  {String}   ms   Number of milliseconds to pause\n */\nvar _default = ms => {\n  /**\n   * Number of milliseconds\n   * @type {Int}\n   */\n  const intMs = parseInt(ms, 10);\n  browser.pause(intMs);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhdXNlLmpzIl0sIm5hbWVzIjpbIm1zIiwiaW50TXMiLCJwYXJzZUludCIsImJyb3dzZXIiLCJwYXVzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O2VBSWdCQSxFQUFELElBQVE7QUFDbkI7Ozs7QUFJQSxRQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0YsRUFBRCxFQUFLLEVBQUwsQ0FBdEI7QUFFQUcsRUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNILEtBQWQ7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQYXVzZSBleGVjdXRpb24gZm9yIGEgZ2l2ZW4gbnVtYmVyIG9mIG1pbGxpc2Vjb25kc1xuICogQHBhcmFtICB7U3RyaW5nfSAgIG1zICAgTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBwYXVzZVxuICovXG5leHBvcnQgZGVmYXVsdCAobXMpID0+IHtcbiAgICAvKipcbiAgICAgKiBOdW1iZXIgb2YgbWlsbGlzZWNvbmRzXG4gICAgICogQHR5cGUge0ludH1cbiAgICAgKi9cbiAgICBjb25zdCBpbnRNcyA9IHBhcnNlSW50KG1zLCAxMCk7XG5cbiAgICBicm93c2VyLnBhdXNlKGludE1zKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pause.js"
      ],
      "names": [
        "ms",
        "intMs",
        "parseInt",
        "browser",
        "pause"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,EAAD,IAAQ;AACnB;;;;AAIA,QAAMC,KAAK,GAAGC,QAAQ,CAACF,EAAD,EAAK,EAAL,CAAtB;AAEAG,EAAAA,OAAO,CAACC,KAAR,CAAcH,KAAd;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Pause execution for a given number of milliseconds\n * @param  {String}   ms   Number of milliseconds to pause\n */\nexport default (ms) => {\n    /**\n     * Number of milliseconds\n     * @type {Int}\n     */\n    const intMs = parseInt(ms, 10);\n\n    browser.pause(intMs);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pressButton.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pressButton.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pressButton.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/pressButton.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "pressButton.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Perform a key press\n * @param  {String}   key  The key to press\n */\nvar _default = key => {\n  browser.keys(key);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXNzQnV0dG9uLmpzIl0sIm5hbWVzIjpbImtleSIsImJyb3dzZXIiLCJrZXlzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFJZ0JBLEdBQUQsSUFBUztBQUNwQkMsRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWFGLEdBQWI7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJmb3JtIGEga2V5IHByZXNzXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAga2V5ICBUaGUga2V5IHRvIHByZXNzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChrZXkpID0+IHtcbiAgICBicm93c2VyLmtleXMoa2V5KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pressButton.js"
      ],
      "names": [
        "key",
        "browser",
        "keys"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,GAAD,IAAS;AACpBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Perform a key press\n * @param  {String}   key  The key to press\n */\nexport default (key) => {\n    browser.keys(key);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/scroll.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/scroll.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/scroll.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/scroll.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "scroll.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Scroll the page to the given element\n * @param  {String}   selector Element selector\n */\nvar _default = selector => {\n  $(selector).scrollIntoView();\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcm9sbC5qcyJdLCJuYW1lcyI6WyJzZWxlY3RvciIsIiQiLCJzY3JvbGxJbnRvVmlldyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O2VBSWdCQSxRQUFELElBQWM7QUFDekJDLEVBQUFBLENBQUMsQ0FBQ0QsUUFBRCxDQUFELENBQVlFLGNBQVo7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTY3JvbGwgdGhlIHBhZ2UgdG8gdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciBFbGVtZW50IHNlbGVjdG9yXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3RvcikgPT4ge1xuICAgICQoc2VsZWN0b3IpLnNjcm9sbEludG9WaWV3KCk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "scroll.js"
      ],
      "names": [
        "selector",
        "$",
        "scrollIntoView"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,QAAD,IAAc;AACzBC,EAAAA,CAAC,CAACD,QAAD,CAAD,CAAYE,cAAZ;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Scroll the page to the given element\n * @param  {String}   selector Element selector\n */\nexport default (selector) => {\n    $(selector).scrollIntoView();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324580
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOption.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOption.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOption.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOption.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "selectOption.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Select an option of a select element\n * @param  {String}   selectionType  Type of method to select by (name, value or\n *                                   text)\n * @param  {String}   selectionValue Value to select by\n * @param  {String}   selector     Element selector\n */\nvar _default = (selectionType, selectionValue, selector) => {\n  /**\n   * The method to use for selecting the option\n   * @type {String}\n   */\n  let command = '';\n  const commandArguments = [selectionValue];\n\n  switch (selectionType) {\n    case 'name':\n      {\n        command = 'selectByAttribute'; // The selectByAttribute command expects the attribute name as it\n        // second argument so let's add it\n\n        commandArguments.unshift('name');\n        break;\n      }\n\n    case 'value':\n      {\n        // The selectByAttribute command expects the attribute name as it\n        // second argument so let's add it\n        commandArguments.unshift('value');\n        command = 'selectByAttribute';\n        break;\n      }\n\n    case 'text':\n      {\n        command = 'selectByVisibleText';\n        break;\n      }\n\n    default:\n      {\n        throw new Error(`Unknown selection type \"${selectionType}\"`);\n      }\n  }\n\n  $(selector)[command](...commandArguments);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdE9wdGlvbi5qcyJdLCJuYW1lcyI6WyJzZWxlY3Rpb25UeXBlIiwic2VsZWN0aW9uVmFsdWUiLCJzZWxlY3RvciIsImNvbW1hbmQiLCJjb21tYW5kQXJndW1lbnRzIiwidW5zaGlmdCIsIkVycm9yIiwiJCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7O2VBT2UsQ0FBQ0EsYUFBRCxFQUFnQkMsY0FBaEIsRUFBZ0NDLFFBQWhDLEtBQTZDO0FBQ3hEOzs7O0FBSUEsTUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxRQUFNQyxnQkFBZ0IsR0FBRyxDQUFDSCxjQUFELENBQXpCOztBQUVBLFVBQVFELGFBQVI7QUFDSSxTQUFLLE1BQUw7QUFBYTtBQUNURyxRQUFBQSxPQUFPLEdBQUcsbUJBQVYsQ0FEUyxDQUdUO0FBQ0E7O0FBQ0FDLFFBQUFBLGdCQUFnQixDQUFDQyxPQUFqQixDQUF5QixNQUF6QjtBQUVBO0FBQ0g7O0FBRUQsU0FBSyxPQUFMO0FBQWM7QUFDVjtBQUNBO0FBQ0FELFFBQUFBLGdCQUFnQixDQUFDQyxPQUFqQixDQUF5QixPQUF6QjtBQUNBRixRQUFBQSxPQUFPLEdBQUcsbUJBQVY7QUFDQTtBQUNIOztBQUVELFNBQUssTUFBTDtBQUFhO0FBQ1RBLFFBQUFBLE9BQU8sR0FBRyxxQkFBVjtBQUNBO0FBQ0g7O0FBRUQ7QUFBUztBQUNMLGNBQU0sSUFBSUcsS0FBSixDQUFXLDJCQUEwQk4sYUFBYyxHQUFuRCxDQUFOO0FBQ0g7QUExQkw7O0FBNkJBTyxFQUFBQSxDQUFDLENBQUNMLFFBQUQsQ0FBRCxDQUFZQyxPQUFaLEVBQXFCLEdBQUdDLGdCQUF4QjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlbGVjdCBhbiBvcHRpb24gb2YgYSBzZWxlY3QgZWxlbWVudFxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdGlvblR5cGUgIFR5cGUgb2YgbWV0aG9kIHRvIHNlbGVjdCBieSAobmFtZSwgdmFsdWUgb3JcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0KVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdGlvblZhbHVlIFZhbHVlIHRvIHNlbGVjdCBieVxuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yICAgICBFbGVtZW50IHNlbGVjdG9yXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChzZWxlY3Rpb25UeXBlLCBzZWxlY3Rpb25WYWx1ZSwgc2VsZWN0b3IpID0+IHtcbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIHRvIHVzZSBmb3Igc2VsZWN0aW5nIHRoZSBvcHRpb25cbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGxldCBjb21tYW5kID0gJyc7XG4gICAgY29uc3QgY29tbWFuZEFyZ3VtZW50cyA9IFtzZWxlY3Rpb25WYWx1ZV07XG5cbiAgICBzd2l0Y2ggKHNlbGVjdGlvblR5cGUpIHtcbiAgICAgICAgY2FzZSAnbmFtZSc6IHtcbiAgICAgICAgICAgIGNvbW1hbmQgPSAnc2VsZWN0QnlBdHRyaWJ1dGUnO1xuXG4gICAgICAgICAgICAvLyBUaGUgc2VsZWN0QnlBdHRyaWJ1dGUgY29tbWFuZCBleHBlY3RzIHRoZSBhdHRyaWJ1dGUgbmFtZSBhcyBpdFxuICAgICAgICAgICAgLy8gc2Vjb25kIGFyZ3VtZW50IHNvIGxldCdzIGFkZCBpdFxuICAgICAgICAgICAgY29tbWFuZEFyZ3VtZW50cy51bnNoaWZ0KCduYW1lJyk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgY2FzZSAndmFsdWUnOiB7XG4gICAgICAgICAgICAvLyBUaGUgc2VsZWN0QnlBdHRyaWJ1dGUgY29tbWFuZCBleHBlY3RzIHRoZSBhdHRyaWJ1dGUgbmFtZSBhcyBpdFxuICAgICAgICAgICAgLy8gc2Vjb25kIGFyZ3VtZW50IHNvIGxldCdzIGFkZCBpdFxuICAgICAgICAgICAgY29tbWFuZEFyZ3VtZW50cy51bnNoaWZ0KCd2YWx1ZScpO1xuICAgICAgICAgICAgY29tbWFuZCA9ICdzZWxlY3RCeUF0dHJpYnV0ZSc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgJ3RleHQnOiB7XG4gICAgICAgICAgICBjb21tYW5kID0gJ3NlbGVjdEJ5VmlzaWJsZVRleHQnO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gc2VsZWN0aW9uIHR5cGUgXCIke3NlbGVjdGlvblR5cGV9XCJgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICQoc2VsZWN0b3IpW2NvbW1hbmRdKC4uLmNvbW1hbmRBcmd1bWVudHMpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "selectOption.js"
      ],
      "names": [
        "selectionType",
        "selectionValue",
        "selector",
        "command",
        "commandArguments",
        "unshift",
        "Error",
        "$"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;eAOe,CAACA,aAAD,EAAgBC,cAAhB,EAAgCC,QAAhC,KAA6C;AACxD;;;;AAIA,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMC,gBAAgB,GAAG,CAACH,cAAD,CAAzB;;AAEA,UAAQD,aAAR;AACI,SAAK,MAAL;AAAa;AACTG,QAAAA,OAAO,GAAG,mBAAV,CADS,CAGT;AACA;;AACAC,QAAAA,gBAAgB,CAACC,OAAjB,CAAyB,MAAzB;AAEA;AACH;;AAED,SAAK,OAAL;AAAc;AACV;AACA;AACAD,QAAAA,gBAAgB,CAACC,OAAjB,CAAyB,OAAzB;AACAF,QAAAA,OAAO,GAAG,mBAAV;AACA;AACH;;AAED,SAAK,MAAL;AAAa;AACTA,QAAAA,OAAO,GAAG,qBAAV;AACA;AACH;;AAED;AAAS;AACL,cAAM,IAAIG,KAAJ,CAAW,2BAA0BN,aAAc,GAAnD,CAAN;AACH;AA1BL;;AA6BAO,EAAAA,CAAC,CAACL,QAAD,CAAD,CAAYC,OAAZ,EAAqB,GAAGC,gBAAxB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Select an option of a select element\n * @param  {String}   selectionType  Type of method to select by (name, value or\n *                                   text)\n * @param  {String}   selectionValue Value to select by\n * @param  {String}   selector     Element selector\n */\nexport default (selectionType, selectionValue, selector) => {\n    /**\n     * The method to use for selecting the option\n     * @type {String}\n     */\n    let command = '';\n    const commandArguments = [selectionValue];\n\n    switch (selectionType) {\n        case 'name': {\n            command = 'selectByAttribute';\n\n            // The selectByAttribute command expects the attribute name as it\n            // second argument so let's add it\n            commandArguments.unshift('name');\n\n            break;\n        }\n\n        case 'value': {\n            // The selectByAttribute command expects the attribute name as it\n            // second argument so let's add it\n            commandArguments.unshift('value');\n            command = 'selectByAttribute';\n            break;\n        }\n\n        case 'text': {\n            command = 'selectByVisibleText';\n            break;\n        }\n\n        default: {\n            throw new Error(`Unknown selection type \"${selectionType}\"`);\n        }\n    }\n\n    $(selector)[command](...commandArguments);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOptionByIndex.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOptionByIndex.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOptionByIndex.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/selectOptionByIndex.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "selectOptionByIndex.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Select a option from a select element by it's index\n * @param  {String}   index      The index of the option\n * @param  {String}   obsolete   The ordinal indicator of the index (unused)\n * @param  {String}   selector Element selector\n *\n * @todo  merge with selectOption\n */\nvar _default = (index, obsolete, selector) => {\n  /**\n   * The index of the option to select\n   * @type {Int}\n   */\n  const optionIndex = parseInt(index, 10);\n  $(selector).selectByIndex(optionIndex);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdE9wdGlvbkJ5SW5kZXguanMiXSwibmFtZXMiOlsiaW5kZXgiLCJvYnNvbGV0ZSIsInNlbGVjdG9yIiwib3B0aW9uSW5kZXgiLCJwYXJzZUludCIsIiQiLCJzZWxlY3RCeUluZGV4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O2VBUWUsQ0FBQ0EsS0FBRCxFQUFRQyxRQUFSLEVBQWtCQyxRQUFsQixLQUErQjtBQUMxQzs7OztBQUlBLFFBQU1DLFdBQVcsR0FBR0MsUUFBUSxDQUFDSixLQUFELEVBQVEsRUFBUixDQUE1QjtBQUVBSyxFQUFBQSxDQUFDLENBQUNILFFBQUQsQ0FBRCxDQUFZSSxhQUFaLENBQTBCSCxXQUExQjtBQUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlbGVjdCBhIG9wdGlvbiBmcm9tIGEgc2VsZWN0IGVsZW1lbnQgYnkgaXQncyBpbmRleFxuICogQHBhcmFtICB7U3RyaW5nfSAgIGluZGV4ICAgICAgVGhlIGluZGV4IG9mIHRoZSBvcHRpb25cbiAqIEBwYXJhbSAge1N0cmluZ30gICBvYnNvbGV0ZSAgIFRoZSBvcmRpbmFsIGluZGljYXRvciBvZiB0aGUgaW5kZXggKHVudXNlZClcbiAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RvciBFbGVtZW50IHNlbGVjdG9yXG4gKlxuICogQHRvZG8gIG1lcmdlIHdpdGggc2VsZWN0T3B0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IChpbmRleCwgb2Jzb2xldGUsIHNlbGVjdG9yKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGluZGV4IG9mIHRoZSBvcHRpb24gdG8gc2VsZWN0XG4gICAgICogQHR5cGUge0ludH1cbiAgICAgKi9cbiAgICBjb25zdCBvcHRpb25JbmRleCA9IHBhcnNlSW50KGluZGV4LCAxMCk7XG5cbiAgICAkKHNlbGVjdG9yKS5zZWxlY3RCeUluZGV4KG9wdGlvbkluZGV4KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "selectOptionByIndex.js"
      ],
      "names": [
        "index",
        "obsolete",
        "selector",
        "optionIndex",
        "parseInt",
        "$",
        "selectByIndex"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;eAQe,CAACA,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC1C;;;;AAIA,QAAMC,WAAW,GAAGC,QAAQ,CAACJ,KAAD,EAAQ,EAAR,CAA5B;AAEAK,EAAAA,CAAC,CAACH,QAAD,CAAD,CAAYI,aAAZ,CAA0BH,WAA1B;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Select a option from a select element by it's index\n * @param  {String}   index      The index of the option\n * @param  {String}   obsolete   The ordinal indicator of the index (unused)\n * @param  {String}   selector Element selector\n *\n * @todo  merge with selectOption\n */\nexport default (index, obsolete, selector) => {\n    /**\n     * The index of the option to select\n     * @type {Int}\n     */\n    const optionIndex = parseInt(index, 10);\n\n    $(selector).selectByIndex(optionIndex);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setCookie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setCookie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setCookie.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setCookie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "setCookie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Set a given cookie to a given value. When the cookies does not exist it will\n * be created\n * @param  {String}   cookieName    The name of the cookie\n * @param  {String}   cookieContent The value of the cookie\n */\nvar _default = (cookieName, cookieContent) => {\n  browser.setCookies({\n    name: cookieName,\n    value: cookieContent\n  });\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldENvb2tpZS5qcyJdLCJuYW1lcyI6WyJjb29raWVOYW1lIiwiY29va2llQ29udGVudCIsImJyb3dzZXIiLCJzZXRDb29raWVzIiwibmFtZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztlQU1lLENBQUNBLFVBQUQsRUFBYUMsYUFBYixLQUErQjtBQUMxQ0MsRUFBQUEsT0FBTyxDQUFDQyxVQUFSLENBQW1CO0FBQ2ZDLElBQUFBLElBQUksRUFBRUosVUFEUztBQUVmSyxJQUFBQSxLQUFLLEVBQUVKO0FBRlEsR0FBbkI7QUFJSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZ2xvb3h4eC9hdXRvbWF0aW9uL2Z1bmN0aW9uYWxfZnJhbWV3b3JrL3dkaW8vZmVhdHVyZXMvc3VwcG9ydC9hY3Rpb24vIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTZXQgYSBnaXZlbiBjb29raWUgdG8gYSBnaXZlbiB2YWx1ZS4gV2hlbiB0aGUgY29va2llcyBkb2VzIG5vdCBleGlzdCBpdCB3aWxsXG4gKiBiZSBjcmVhdGVkXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgY29va2llTmFtZSAgICBUaGUgbmFtZSBvZiB0aGUgY29va2llXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgY29va2llQ29udGVudCBUaGUgdmFsdWUgb2YgdGhlIGNvb2tpZVxuICovXG5leHBvcnQgZGVmYXVsdCAoY29va2llTmFtZSwgY29va2llQ29udGVudCkgPT4ge1xuICAgIGJyb3dzZXIuc2V0Q29va2llcyh7XG4gICAgICAgIG5hbWU6IGNvb2tpZU5hbWUsXG4gICAgICAgIHZhbHVlOiBjb29raWVDb250ZW50LFxuICAgIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "setCookie.js"
      ],
      "names": [
        "cookieName",
        "cookieContent",
        "browser",
        "setCookies",
        "name",
        "value"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAMe,CAACA,UAAD,EAAaC,aAAb,KAA+B;AAC1CC,EAAAA,OAAO,CAACC,UAAR,CAAmB;AACfC,IAAAA,IAAI,EAAEJ,UADS;AAEfK,IAAAA,KAAK,EAAEJ;AAFQ,GAAnB;AAIH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Set a given cookie to a given value. When the cookies does not exist it will\n * be created\n * @param  {String}   cookieName    The name of the cookie\n * @param  {String}   cookieContent The value of the cookie\n */\nexport default (cookieName, cookieContent) => {\n    browser.setCookies({\n        name: cookieName,\n        value: cookieContent,\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setInputField.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setInputField.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setInputField.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setInputField.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "setInputField.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkIfElementExists = _interopRequireDefault(require(\"../lib/checkIfElementExists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Set the value of the given input field to a new value or add a value to the\n * current selector value\n * @param  {String}   method  The method to use (add or set)\n * @param  {String}   value   The value to set the selector to\n * @param  {String}   selector Element selector\n */\nvar _default = (method, value, selector) => {\n  /**\n   * The command to perform on the browser object (addValue or setValue)\n   * @type {String}\n   */\n  const command = method === 'add' ? 'addValue' : 'setValue';\n  let checkValue = value;\n  (0, _checkIfElementExists.default)(selector, false, 1);\n\n  if (!value) {\n    checkValue = '';\n  }\n\n  $(selector)[command](checkValue);\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldElucHV0RmllbGQuanMiXSwibmFtZXMiOlsibWV0aG9kIiwidmFsdWUiLCJzZWxlY3RvciIsImNvbW1hbmQiLCJjaGVja1ZhbHVlIiwiJCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7Ozs7ZUFPZSxDQUFDQSxNQUFELEVBQVNDLEtBQVQsRUFBZ0JDLFFBQWhCLEtBQTZCO0FBQ3hDOzs7O0FBSUEsUUFBTUMsT0FBTyxHQUFJSCxNQUFNLEtBQUssS0FBWixHQUFxQixVQUFyQixHQUFrQyxVQUFsRDtBQUVBLE1BQUlJLFVBQVUsR0FBR0gsS0FBakI7QUFFQSxxQ0FBcUJDLFFBQXJCLEVBQStCLEtBQS9CLEVBQXNDLENBQXRDOztBQUVBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1JHLElBQUFBLFVBQVUsR0FBRyxFQUFiO0FBQ0g7O0FBRURDLEVBQUFBLENBQUMsQ0FBQ0gsUUFBRCxDQUFELENBQVlDLE9BQVosRUFBcUJDLFVBQXJCO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWdsb294eHgvYXV0b21hdGlvbi9mdW5jdGlvbmFsX2ZyYW1ld29yay93ZGlvL2ZlYXR1cmVzL3N1cHBvcnQvYWN0aW9uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGVja0lmRWxlbWVudEV4aXN0cyBmcm9tICcuLi9saWIvY2hlY2tJZkVsZW1lbnRFeGlzdHMnO1xuXG4vKipcbiAqIFNldCB0aGUgdmFsdWUgb2YgdGhlIGdpdmVuIGlucHV0IGZpZWxkIHRvIGEgbmV3IHZhbHVlIG9yIGFkZCBhIHZhbHVlIHRvIHRoZVxuICogY3VycmVudCBzZWxlY3RvciB2YWx1ZVxuICogQHBhcmFtICB7U3RyaW5nfSAgIG1ldGhvZCAgVGhlIG1ldGhvZCB0byB1c2UgKGFkZCBvciBzZXQpXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgdmFsdWUgICBUaGUgdmFsdWUgdG8gc2V0IHRoZSBzZWxlY3RvciB0b1xuICogQHBhcmFtICB7U3RyaW5nfSAgIHNlbGVjdG9yIEVsZW1lbnQgc2VsZWN0b3JcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG1ldGhvZCwgdmFsdWUsIHNlbGVjdG9yKSA9PiB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbW1hbmQgdG8gcGVyZm9ybSBvbiB0aGUgYnJvd3NlciBvYmplY3QgKGFkZFZhbHVlIG9yIHNldFZhbHVlKVxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG4gICAgY29uc3QgY29tbWFuZCA9IChtZXRob2QgPT09ICdhZGQnKSA/ICdhZGRWYWx1ZScgOiAnc2V0VmFsdWUnO1xuXG4gICAgbGV0IGNoZWNrVmFsdWUgPSB2YWx1ZTtcblxuICAgIGNoZWNrSWZFbGVtZW50RXhpc3RzKHNlbGVjdG9yLCBmYWxzZSwgMSk7XG5cbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIGNoZWNrVmFsdWUgPSAnJztcbiAgICB9XG5cbiAgICAkKHNlbGVjdG9yKVtjb21tYW5kXShjaGVja1ZhbHVlKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "setInputField.js"
      ],
      "names": [
        "method",
        "value",
        "selector",
        "command",
        "checkValue",
        "$"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;eAOe,CAACA,MAAD,EAASC,KAAT,EAAgBC,QAAhB,KAA6B;AACxC;;;;AAIA,QAAMC,OAAO,GAAIH,MAAM,KAAK,KAAZ,GAAqB,UAArB,GAAkC,UAAlD;AAEA,MAAII,UAAU,GAAGH,KAAjB;AAEA,qCAAqBC,QAArB,EAA+B,KAA/B,EAAsC,CAAtC;;AAEA,MAAI,CAACD,KAAL,EAAY;AACRG,IAAAA,UAAU,GAAG,EAAb;AACH;;AAEDC,EAAAA,CAAC,CAACH,QAAD,CAAD,CAAYC,OAAZ,EAAqBC,UAArB;AACH,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "import checkIfElementExists from '../lib/checkIfElementExists';\n\n/**\n * Set the value of the given input field to a new value or add a value to the\n * current selector value\n * @param  {String}   method  The method to use (add or set)\n * @param  {String}   value   The value to set the selector to\n * @param  {String}   selector Element selector\n */\nexport default (method, value, selector) => {\n    /**\n     * The command to perform on the browser object (addValue or setValue)\n     * @type {String}\n     */\n    const command = (method === 'add') ? 'addValue' : 'setValue';\n\n    let checkValue = value;\n\n    checkIfElementExists(selector, false, 1);\n\n    if (!value) {\n        checkValue = '';\n    }\n\n    $(selector)[command](checkValue);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  },
  "{\"sourceRoot\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"filename\":\"/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setPromptText.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/diglooxxx/automation/functional_framework/wdio\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/diglooxxx/automation/functional_framework/wdio",
      "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setPromptText.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/diglooxxx/automation/functional_framework/wdio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setPromptText.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/setPromptText.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
        "sourceFileName": "setPromptText.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Set the text of the current prompt\n * @param  {String}   modalText The text to set to the prompt\n */\nvar _default = modalText => {\n  try {\n    browser.sendAlertText(modalText);\n  } catch (e) {\n    assert(e, 'A prompt was not open when it should have been open');\n  }\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldFByb21wdFRleHQuanMiXSwibmFtZXMiOlsibW9kYWxUZXh0IiwiYnJvd3NlciIsInNlbmRBbGVydFRleHQiLCJlIiwiYXNzZXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFJZ0JBLFNBQUQsSUFBZTtBQUMxQixNQUFJO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsYUFBUixDQUFzQkYsU0FBdEI7QUFDSCxHQUZELENBRUUsT0FBT0csQ0FBUCxFQUFVO0FBQ1JDLElBQUFBLE1BQU0sQ0FBQ0QsQ0FBRCxFQUFJLHFEQUFKLENBQU47QUFDSDtBQUNKLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGlnbG9veHh4L2F1dG9tYXRpb24vZnVuY3Rpb25hbF9mcmFtZXdvcmsvd2Rpby9mZWF0dXJlcy9zdXBwb3J0L2FjdGlvbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNldCB0aGUgdGV4dCBvZiB0aGUgY3VycmVudCBwcm9tcHRcbiAqIEBwYXJhbSAge1N0cmluZ30gICBtb2RhbFRleHQgVGhlIHRleHQgdG8gc2V0IHRvIHRoZSBwcm9tcHRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKG1vZGFsVGV4dCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGJyb3dzZXIuc2VuZEFsZXJ0VGV4dChtb2RhbFRleHQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgYXNzZXJ0KGUsICdBIHByb21wdCB3YXMgbm90IG9wZW4gd2hlbiBpdCBzaG91bGQgaGF2ZSBiZWVuIG9wZW4nKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "setPromptText.js"
      ],
      "names": [
        "modalText",
        "browser",
        "sendAlertText",
        "e",
        "assert"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAIgBA,SAAD,IAAe;AAC1B,MAAI;AACAC,IAAAA,OAAO,CAACC,aAAR,CAAsBF,SAAtB;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACRC,IAAAA,MAAM,CAACD,CAAD,EAAI,qDAAJ,CAAN;AACH;AACJ,C",
      "sourceRoot": "/home/diglooxxx/automation/functional_framework/wdio/features/support/action/",
      "sourcesContent": [
        "/**\n * Set the text of the current prompt\n * @param  {String}   modalText The text to set to the prompt\n */\nexport default (modalText) => {\n    try {\n        browser.sendAlertText(modalText);\n    } catch (e) {\n        assert(e, 'A prompt was not open when it should have been open');\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600607324584
  }
}